Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   PREFIX


Useless rules:

#105   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#106   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	;
#108   inner_option_array_declaration :	 COMMA error;


Conflict in state 84 between rule 13 and token CHOP resolved as reduce.
Conflict in state 84 between rule 13 and token OR resolved as reduce.
Conflict in state 84 between rule 13 and token AND resolved as reduce.
Conflict in state 84 between rule 13 and token IFF resolved as reduce.
Conflict in state 84 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 84 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 85 between rule 22 and token CHOP resolved as reduce.
Conflict in state 85 between rule 22 and token OR resolved as reduce.
Conflict in state 85 between rule 22 and token AND resolved as reduce.
Conflict in state 85 between rule 22 and token IFF resolved as reduce.
Conflict in state 85 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 21 and token CHOP resolved as reduce.
Conflict in state 114 between rule 21 and token OR resolved as reduce.
Conflict in state 114 between rule 21 and token AND resolved as reduce.
Conflict in state 114 between rule 21 and token IFF resolved as reduce.
Conflict in state 114 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 10 and token CHOP resolved as reduce.
Conflict in state 115 between rule 10 and token OR resolved as reduce.
Conflict in state 115 between rule 10 and token AND resolved as reduce.
Conflict in state 115 between rule 10 and token IFF resolved as reduce.
Conflict in state 115 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 116 between rule 9 and token CHOP resolved as reduce.
Conflict in state 116 between rule 9 and token OR resolved as reduce.
Conflict in state 116 between rule 9 and token AND resolved as reduce.
Conflict in state 116 between rule 9 and token IFF resolved as reduce.
Conflict in state 116 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 116 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 117 between rule 20 and token CHOP resolved as reduce.
Conflict in state 117 between rule 20 and token OR resolved as reduce.
Conflict in state 117 between rule 20 and token AND resolved as reduce.
Conflict in state 117 between rule 20 and token IFF resolved as reduce.
Conflict in state 117 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 117 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 118 between rule 12 and token CHOP resolved as reduce.
Conflict in state 118 between rule 12 and token OR resolved as reduce.
Conflict in state 118 between rule 12 and token AND resolved as reduce.
Conflict in state 118 between rule 12 and token IFF resolved as reduce.
Conflict in state 118 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 118 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 119 between rule 11 and token CHOP resolved as reduce.
Conflict in state 119 between rule 11 and token OR resolved as reduce.
Conflict in state 119 between rule 11 and token AND resolved as reduce.
Conflict in state 119 between rule 11 and token IFF resolved as reduce.
Conflict in state 119 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 119 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 223 between rule 210 and token IMPLY resolved as shift.
Conflict in state 226 between rule 209 and token IMPLY resolved as shift.
Conflict in state 251 between rule 8 and token CHOP resolved as reduce.
Conflict in state 251 between rule 8 and token OR resolved as shift.
Conflict in state 251 between rule 8 and token AND resolved as shift.
Conflict in state 251 between rule 8 and token IFF resolved as shift.
Conflict in state 251 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 251 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 252 between rule 5 and token CHOP resolved as reduce.
Conflict in state 252 between rule 5 and token OR resolved as reduce.
Conflict in state 252 between rule 5 and token AND resolved as shift.
Conflict in state 252 between rule 5 and token IFF resolved as shift.
Conflict in state 252 between rule 5 and token PROPIMPLY resolved as shift.
Conflict in state 252 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 253 between rule 4 and token CHOP resolved as reduce.
Conflict in state 253 between rule 4 and token OR resolved as reduce.
Conflict in state 253 between rule 4 and token AND resolved as reduce.
Conflict in state 253 between rule 4 and token IFF resolved as shift.
Conflict in state 253 between rule 4 and token PROPIMPLY resolved as shift.
Conflict in state 253 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 254 between rule 6 and token CHOP resolved as reduce.
Conflict in state 254 between rule 6 and token OR resolved as reduce.
Conflict in state 254 between rule 6 and token AND resolved as reduce.
Conflict in state 254 between rule 6 and token IFF resolved as reduce.
Conflict in state 254 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 254 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 255 between rule 7 and token CHOP resolved as reduce.
Conflict in state 255 between rule 7 and token OR resolved as reduce.
Conflict in state 255 between rule 7 and token AND resolved as reduce.
Conflict in state 255 between rule 7 and token IFF resolved as reduce.
Conflict in state 255 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 255 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 309 between rule 313 and token OR resolved as reduce.
Conflict in state 309 between rule 313 and token AND resolved as reduce.
Conflict in state 356 between rule 32 and token CHOP resolved as reduce.
Conflict in state 356 between rule 32 and token OR resolved as shift.
Conflict in state 356 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 356 between rule 32 and token AND resolved as shift.
Conflict in state 357 between rule 31 and token CHOP resolved as reduce.
Conflict in state 357 between rule 31 and token OR resolved as reduce.
Conflict in state 357 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 357 between rule 31 and token AND resolved as shift.
Conflict in state 358 between rule 54 and token CHOP resolved as reduce.
Conflict in state 358 between rule 54 and token OR resolved as reduce.
Conflict in state 358 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 358 between rule 54 and token AND resolved as shift.
Conflict in state 359 between rule 30 and token CHOP resolved as reduce.
Conflict in state 359 between rule 30 and token OR resolved as reduce.
Conflict in state 359 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 359 between rule 30 and token AND resolved as reduce.
Conflict in state 465 between rule 315 and token OR resolved as reduce.
Conflict in state 465 between rule 315 and token AND resolved as shift.
Conflict in state 466 between rule 314 and token OR resolved as reduce.
Conflict in state 466 between rule 314 and token AND resolved as reduce.
Conflict in state 602 between rule 195 and token CON resolved as reduce.
State 100 contains 2 shift/reduce conflicts.
State 102 contains 2 shift/reduce conflicts.
State 104 contains 18 shift/reduce conflicts.
State 108 contains 2 shift/reduce conflicts.
State 151 contains 1 shift/reduce conflict.
State 152 contains 1 shift/reduce conflict.
State 154 contains 1 shift/reduce conflict.
State 156 contains 1 shift/reduce conflict.
State 157 contains 1 shift/reduce conflict.
State 184 contains 1 shift/reduce conflict.
State 215 contains 1 shift/reduce conflict.
State 216 contains 1 shift/reduce conflict.
State 217 contains 1 shift/reduce conflict.
State 219 contains 1 shift/reduce conflict.
State 220 contains 1 shift/reduce conflict.
State 221 contains 1 shift/reduce conflict.
State 223 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 269 contains 1 shift/reduce conflict.
State 270 contains 1 shift/reduce conflict.
State 271 contains 1 shift/reduce conflict.
State 272 contains 1 shift/reduce conflict.
State 277 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 278 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 279 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 281 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 293 contains 1 shift/reduce conflict.
State 299 contains 1 shift/reduce conflict.
State 300 contains 1 shift/reduce conflict.
State 301 contains 1 shift/reduce conflict.
State 307 contains 1 shift/reduce conflict.
State 338 contains 1 shift/reduce conflict.
State 339 contains 1 shift/reduce conflict.
State 364 contains 2 shift/reduce conflicts.
State 365 contains 2 shift/reduce conflicts.
State 367 contains 2 shift/reduce conflicts.
State 368 contains 2 shift/reduce conflicts.
State 369 contains 2 shift/reduce conflicts.
State 370 contains 2 shift/reduce conflicts.
State 371 contains 2 shift/reduce conflicts.
State 372 contains 2 shift/reduce conflicts.
State 374 contains 2 shift/reduce conflicts.
State 375 contains 2 shift/reduce conflicts.
State 377 contains 2 shift/reduce conflicts.
State 378 contains 2 shift/reduce conflicts.
State 402 contains 1 shift/reduce conflict.
State 439 contains 1 shift/reduce conflict.
State 440 contains 1 shift/reduce conflict.
State 441 contains 1 shift/reduce conflict.
State 447 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 456 contains 1 shift/reduce conflict.
State 458 contains 1 shift/reduce conflict.
State 481 contains 1 shift/reduce conflict.
State 502 contains 1 shift/reduce conflict.
State 523 contains 1 shift/reduce conflict.
State 526 contains 10 shift/reduce conflicts.
State 612 contains 2 shift/reduce conflicts.
State 613 contains 2 shift/reduce conflicts.
State 636 contains 1 shift/reduce conflict.
State 637 contains 1 shift/reduce conflict.
State 642 contains 2 shift/reduce conflicts.
State 643 contains 2 shift/reduce conflicts.
State 645 contains 2 shift/reduce conflicts.
State 646 contains 2 shift/reduce conflicts.
State 722 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 755 contains 1 shift/reduce conflict.
State 768 contains 1 shift/reduce conflict.
State 769 contains 1 shift/reduce conflict.
State 770 contains 1 shift/reduce conflict.
State 826 contains 1 shift/reduce conflict.
State 839 contains 1 shift/reduce conflict.
State 840 contains 1 shift/reduce conflict.
State 860 contains 1 shift/reduce conflict.
State 862 contains 1 shift/reduce conflict.
State 863 contains 1 shift/reduce conflict.
State 883 contains 1 shift/reduce conflict.
State 884 contains 1 shift/reduce conflict.
State 903 contains 1 shift/reduce conflict.
State 1024 contains 1 shift/reduce conflict.
State 1025 contains 1 shift/reduce conflict.
State 1027 contains 1 shift/reduce conflict.
State 1028 contains 1 shift/reduce conflict.
State 1044 contains 1 shift/reduce conflict.
State 1045 contains 1 shift/reduce conflict.
State 1046 contains 1 shift/reduce conflict.
State 1047 contains 1 shift/reduce conflict.
State 1058 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON ari_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR ari_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function
rule 63   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 64   statement -> OPEN_PAR statement CLOSE_PAR
rule 65   option_struct_declaration -> sign_declaration
rule 66   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 67   empty_statement -> statement
rule 68   empty_statement ->		/* empty */
rule 69   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 70   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 73   struct_identifier -> STRUCT ID
rule 74   struct_identifier -> UNION ID
rule 75   sign_declaration -> SIGNED declaration
rule 76   sign_declaration -> UNSIGNED declaration
rule 77   sign_declaration -> declaration
rule 78   declaration -> type_define option_identifier_array_declaration
rule 79   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 80   declaration -> STRUCT ID option_identifier_array_declaration
rule 81   declaration -> UNION ID option_identifier_array_declaration
rule 82   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 83   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 85   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 88   type_define -> INTDECLARATION
rule 89   type_define -> FLOATDECLARATION
rule 90   type_define -> CHARDECLARATION
rule 91   type_define -> STRDECLARATION
rule 92   type_define -> VOIDDECLARATION
rule 93   type_define -> FILEDECLARATION
rule 94   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 95   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 102  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA error
rule 104  inner_option_identifier_array_declaration ->		/* empty */
rule 109  ass_statement -> ass_left assign_operator ass_right
rule 110  ass_left -> identifier
rule 111  ass_left -> struct_member_exp
rule 112  ass_left -> array
rule 113  ass_left -> point_exp
rule 114  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 115  ass_left -> NEXT ass_left
rule 116  ass_left -> leftaddrshift
rule 117  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  assign_operator -> ASS_P
rule 131  assign_operator -> ASS_N
rule 132  ass_right -> ari_exp
rule 133  ass_right -> array_exp
rule 134  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 135  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 136  ass_right -> rightaddrshift
rule 137  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 138  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  array -> OPEN_PAR array CLOSE_PAR
rule 140  array_cast_exp -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array_cast_exp -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array_cast_exp -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array_cast_exp -> OPEN_PAR array_cast_exp CLOSE_PAR
rule 146  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 147  option_ari_exp -> COMMA error
rule 148  option_ari_exp ->		/* empty */
rule 149  point_exp -> MUL identifier
rule 150  point_exp -> MUL point_exp
rule 151  point_exp -> MUL array
rule 152  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 154  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 155  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 156  ari_exp -> simple_ari_exp
rule 157  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 158  ari_exp -> simple_ari_exp BOOL_AND ari_exp
rule 159  ari_exp -> simple_ari_exp BOOL_OR ari_exp
rule 160  ari_exp -> NEGATION ari_exp
rule 161  ari_exp -> IF ari_exp THEN ari_exp option_exp_else_statement
rule 162  type_cast_alg_exp -> simple_ari_exp
rule 163  option_exp_else_statement -> ELSE ari_exp
rule 164  option_exp_else_statement ->		/* empty */
rule 165  simple_ari_exp -> member_in_exp
rule 166  simple_ari_exp -> simple_ari_exp arith_operator member_in_exp
rule 167  member_in_exp -> intliteral
rule 168  member_in_exp -> charliteral
rule 169  member_in_exp -> floatliteral
rule 170  member_in_exp -> strliteral
rule 171  member_in_exp -> identifier
rule 172  member_in_exp -> array
rule 173  member_in_exp -> point_exp
rule 174  member_in_exp -> function
rule 175  member_in_exp -> address_exp
rule 176  member_in_exp -> type_cast
rule 177  member_in_exp -> struct_member_exp
rule 178  member_in_exp -> array_cast_exp
rule 179  member_in_exp -> SUB member_in_exp
rule 180  member_in_exp -> BNE member_in_exp
rule 181  member_in_exp -> POINTERNULL
rule 182  member_in_exp -> MY_TRUE
rule 183  member_in_exp -> MY_FALSE
rule 184  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 185  arith_operator -> ADD
rule 186  arith_operator -> SUB
rule 187  arith_operator -> MUL
rule 188  arith_operator -> DIV
rule 189  arith_operator -> MOD
rule 190  arith_operator -> LST
rule 191  arith_operator -> RST
rule 192  arith_operator -> ADDRESS
rule 193  arith_operator -> INTER_OR
rule 194  arith_operator -> CON
rule 195  array_exp -> array_exp CON array_exp
rule 196  array_exp -> option_list_value
rule 197  array_exp -> option_struct_list_value
rule 198  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 199  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 200  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 201  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 202  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 203  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 204  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 205  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 206  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 207  inner_option_list_value ->		/* empty */
rule 208  inner_option_list_value -> COMMA error
rule 209  address_exp -> ADDRESS identifier
rule 210  address_exp -> ADDRESS array
rule 211  address_exp -> ADDRESS struct_member_exp
rule 212  address_exp -> ADDRESS address_exp
rule 213  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 214  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 237  casted_element -> type_cast_alg_exp
rule 238  relation_operator -> GE
rule 239  relation_operator -> LE
rule 240  relation_operator -> NE
rule 241  relation_operator -> GT
rule 242  relation_operator -> LT
rule 243  relation_operator -> EQ
rule 244  sign_type_define -> UNSIGNED INTDECLARATION
rule 245  sign_type_define -> UNSIGNED CHARDECLARATION
rule 246  all_type_define -> sign_type_define
rule 247  all_type_define -> type_define
rule 248  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 249  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 250  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 251  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 252  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 253  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 254  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 255  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 256  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 257  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 258  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 259  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 260  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 261  option_function_parameter_list -> ID inner_option_define_identifier
rule 262  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 263  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 264  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 265  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 267  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 269  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 271  option_function_parameter_list ->		/* empty */
rule 272  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 273  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 274  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 275  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 276  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 277  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 278  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 279  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 280  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 281  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 282  inner_option_define_identifier ->		/* empty */
rule 283  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 285  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 286  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 287  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 288  inner_option_define_identifier -> COMMA error
rule 289  option_function_identifier -> ass_right inner_option_function_identifier
rule 290  option_function_identifier -> all_type_define
rule 291  option_function_identifier -> STRUCT_TYPE
rule 292  option_function_identifier ->		/* empty */
rule 293  option_function_identifier -> ADDRESS error
rule 294  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 295  inner_option_function_identifier ->		/* empty */
rule 296  inner_option_function_identifier -> COMMA error
rule 297  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 298  statement_bpar -> error CLOSE_BPAR
rule 299  bool_par -> OPEN_PAR ari_exp CLOSE_PAR
rule 300  bool_par -> error CLOSE_PAR
rule 301  identifier -> ID
rule 302  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 303  strliteral -> STRLITERAL
rule 304  intliteral -> INTLITERAL
rule 305  charliteral -> CHARLITERAL
rule 306  floatliteral -> FLOATLITERAL
rule 307  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 308  option_frame_identifier ->		/* empty */
rule 309  option_frame_identifier -> COMMA error
rule 310  option_projection ->		/* empty */
rule 311  option_projection -> COMMA statement option_projection
rule 312  imply_pre ->		/* empty */
rule 313  imply_pre -> NEGATION imply_pre
rule 314  imply_pre -> imply_pre AND imply_pre
rule 315  imply_pre -> imply_pre OR imply_pre
rule 316  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 317  while_statement -> WHILE bool_par statement_bpar
rule 318  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 319  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 320  for_sta_init -> ass_statement
rule 321  for_sta_init -> declaration
rule 322  for_sta_init ->		/* empty */
rule 323  for_sta_condition -> ari_exp
rule 324  for_sta_condition ->		/* empty */
rule 325  for_sta_control -> ass_statement
rule 326  for_sta_control ->		/* empty */
rule 327  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 328  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 329  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 330  init_case_par -> BREAK case_par
rule 331  init_case_par -> case_par
rule 332  init_case_par ->		/* empty */
rule 333  if_statement -> IF ari_exp THEN statement_bpar option_else_statement
rule 334  option_else_statement -> ELSE statement_bpar
rule 335  option_else_statement ->		/* empty */
rule 336  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 337  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 338  option_output ->		/* empty */
rule 339  option_output -> COMMA ass_right option_output
rule 340  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 341  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 342  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 343  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 344  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 345  option_input ->		/* empty */
rule 346  option_input -> COMMA identifier option_input
rule 347  option_input -> COMMA array option_input
rule 348  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 349  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 350  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 351  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 352  struct_member_exp -> array DOT array option_struct_member_exp
rule 353  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 354  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 355  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 356  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 357  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 358  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 359  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 360  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 361  struct_member_exp -> identifier DOT function
rule 362  struct_member_exp -> identifier IMPLY function
rule 363  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 364  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 365  option_struct_member_exp ->		/* empty */
rule 366  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 367  option_struct_member_exp -> DOT array option_struct_member_exp
rule 368  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 369  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 370  option_struct_member_exp -> DOT function
rule 371  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 103 108 147 208 288 293 296 298 300 309
SWITCH (258) 327
CASE (259) 328
BREAK (260) 330
DEFAULT (261) 329
IF (262) 161 333
ELSE (263) 163 334
EMPTY (264) 18 46
AWAIT (265) 43
PROJECTION (266) 23 57 58
PBEGIN (267) 2
PEND (268) 2
POINTERNULL (269) 181
ARRAY (270) 97 98 253 257 264 265 266 277 278 279 280 285
STRUCT (271) 73 80 82 233 235
DOT (272) 348 349 350 351 352 353 361 366 367 370
UNION (273) 74 81 83
FILEDECLARATION (274) 93
MORE (275) 19 47
DEFINE (276) 25 60
MY_TRUE (277) 15 182
MY_FALSE (278) 16 183
EXIST (279) 63
FRAME (280) 56
FOR (281) 318 319
WHILE (282) 317
DO (283) 318
TRUE (284) 51
FALSE (285) 52
REPEAT (286) 44
UNTIL (287) 44
DISPLAY (288) 336 337
SKIP (289) 14 45
THEN (290) 161 333
COMMA (291) 28 102 103 106 108 146 147 204 205 206 208 272 273 274
    275 276 277 278 279 280 281 283 284 285 286 287 288 294 296 307
    309 311 319 339 346 347
COLON (292) 25 63 328 329
INTDECLARATION (293) 88 119 123 126 127 128 129 140 141 214 217 219
    221 222 227 228 244
STRDECLARATION (294) 91
POINTERDECLARATION (295)
CHARDECLARATION (296) 90 117 118 121 122 123 124 125 126 127 128 143
    144 216 218 220 224 225 230 231 245
VOIDDECLARATION (297) 92 226 232
FLOATDECLARATION (298) 89 120 142 215 223 229
LISTDECLARATION (299)
OPEN_PAR (300) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84 85
    86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129 134
    135 137 139 140 141 142 143 144 145 152 153 154 155 184 198 213
    214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 270 281 299 302 316 319 327 328 329
    336 337 340 341 342 343 344 356 360 364
CLOSE_PAR (301) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84
    85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129
    134 135 137 139 140 141 142 143 144 145 152 153 154 155 184 198
    213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 235 236 270 281 299 300 302 316 319 327
    328 329 336 337 340 341 342 343 344 356 360 364
TIMES (302) 318
OPEN_BPAR (303) 23 44 57 58 59 60 63 72 202 203 297 327
CLOSE_BPAR (304) 23 44 57 58 59 60 63 72 202 203 297 298 327
OPEN_MPAR (305) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 138 140 141 142 143 144 152 199 200
    201 266 283 284 285
CLOSE_MPAR (306) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 138 140 141 142 143 144 152 199 200
    201 266 283 284 285
FUNCTION (307) 59
OVER (308)
CYLINDER (309)
OVEREP (310)
INTER_OR (311) 193
NON_DETERMINED (312)
SEND (313)
RECEIVE (314)
PROCESS (315)
CHANNEL (316)
PUT (317)
GET (318)
ERROR_TOKEN (319)
EXTERN (320) 70
UNSIGNED (321) 76 118 122 124 125 126 128 141 144 219 220 222 225 228
    231 244 245
SIGNED (322) 75 217 218
CHOP (323) 8 32
OR (324) 5 31 315
PARALLEL (325) 54
AND (326) 4 30 56 66 314
ASS_P (327) 60 87 96 97 98 99 100 130
ASS_N (328) 131
CON (329) 194 195
ADDRESS (330) 192 209 210 211 212 293
BOOL_AND (331) 158
IMPLY (332) 55 354 355 356 357 358 359 360 362 363 368 369 371
IFF (333) 6
PROPIMPLY (334) 7
NE (335) 240
EQ (336) 243
GE (337) 238
LE (338) 239
GT (339) 241
LT (340) 242
LST (341) 190
RST (342) 191
ADD (343) 185
SUB (344) 179 186
MUL (345) 84 85 86 87 101 117 118 119 120 121 122 123 124 125 126 127
    128 129 137 140 141 142 143 144 149 150 151 153 154 187 221 222
    223 224 225 226 227 228 229 230 231 232 233 234 235 236 251 252
    255 256 259 260 262 263 265 267 268 269 270 276 280 281 286 287
DIV (346) 188
MOD (347) 189
BNE (348) 180
BOOL_OR (349) 159
CHOPSTAR (350) 26
NEXT (351) 13 40 115
NEGATION (352) 22 160 313
LENGTH (353) 17 48
REQUEST (354) 340 341 342 343 344
FINAL (355) 21 53
KEEP (356) 10 41
ALWAYS (357) 9 42
HALT (358) 20
W_NEXT (359) 12
PREFIX (360)
SOMETIMES (361) 11
ID (362) 24 25 59 60 69 70 73 74 80 81 86 87 95 97 98 99 100 105 106
    138 254 255 256 257 261 262 263 274 277 301
STRLITERAL (363) 303
STRUCT_TYPE (364) 79 82 83 233 234 235 236 250 251 252 253 258 259
    260 275 276 278 291
INTLITERAL (365) 117 118 119 120 121 122 123 124 125 126 127 128 129
    304
FLOATLITERAL (366) 306
CHARLITERAL (367) 305

Nonterminals, with rules where they appear

program (113)
    on left: 1
gComplexProposition (114)
    on left: 2 3, on right: 1
complexProposition (115)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (116)
    on left: 28 29, on right: 23 28
statement (117)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 59 63 64 67
    297 311 328 329
option_struct_declaration (118)
    on left: 65 66, on right: 66 72
empty_statement (119)
    on left: 67 68, on right: 60
function (120)
    on left: 69 70 71, on right: 62 134 174 361 362 370 371
struct_define_statement (121)
    on left: 72, on right: 61
struct_identifier (122)
    on left: 73 74, on right: 72
sign_declaration (123)
    on left: 75 76 77, on right: 34 65 66
declaration (124)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 75 76 77 321
type_define (125)
    on left: 88 89 90 91 92 93, on right: 78 134 247
option_identifier_array_declaration (126)
    on left: 94 95 96 97 98 99 100 101, on right: 78 79 80 81 82 83
    101 102
inner_option_identifier_array_declaration (127)
    on left: 102 103 104, on right: 94 95 96 97 98 99 100
ass_statement (128)
    on left: 109, on right: 33 320 325
ass_left (129)
    on left: 110 111 112 113 114 115 116, on right: 109 114 115
leftaddrshift (130)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129,
    on right: 116 137
assign_operator (131)
    on left: 130 131, on right: 109
ass_right (132)
    on left: 132 133 134 135 136, on right: 96 109 135 289 294 336
    337 339
rightaddrshift (133)
    on left: 137, on right: 136
array (134)
    on left: 138 139, on right: 71 112 139 151 172 210 342 343 347
    349 351 352 353 355 358 359 360 363 367 369
array_cast_exp (135)
    on left: 140 141 142 143 144 145, on right: 145 178
option_ari_exp (136)
    on left: 146 147 148, on right: 86 87 95 99 100 105 106 117 118
    119 120 121 122 123 124 125 126 127 128 129 138 140 141 142 143
    144 146 152
point_exp (137)
    on left: 149 150 151 152 153 154 155, on right: 113 150 152 155
    173 350 353 357 363
ari_exp (138)
    on left: 156 157 158 159 160 161, on right: 17 25 43 44 48 86 87
    95 99 100 105 106 117 118 119 120 121 122 123 124 125 126 127 128
    129 132 138 140 141 142 143 144 146 152 153 154 157 158 159 160
    161 163 184 199 202 204 266 283 284 285 299 318 323 333
type_cast_alg_exp (139)
    on left: 162, on right: 214 215 216 217 218 219 220 237
option_exp_else_statement (140)
    on left: 163 164, on right: 161
simple_ari_exp (141)
    on left: 165 166, on right: 156 157 158 159 162 166
member_in_exp (142)
    on left: 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    181 182 183 184, on right: 165 166 179 180 327 328
arith_operator (143)
    on left: 185 186 187 188 189 190 191 192 193 194,
    on right: 166
array_exp (144)
    on left: 195 196 197 198, on right: 87 97 99 133 195 198 201 203
    206
option_list_value (145)
    on left: 199 200 201, on right: 196
option_struct_list_value (146)
    on left: 202 203, on right: 197
inner_option_list_value (147)
    on left: 204 205 206 207 208, on right: 199 200 201 202 203 204
    205 206
address_exp (148)
    on left: 209 210 211 212 213, on right: 175 212 213 356 360
type_cast (149)
    on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 235 236, on right: 176
casted_element (150)
    on left: 237, on right: 221 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236
relation_operator (151)
    on left: 238 239 240 241 242 243, on right: 157
sign_type_define (152)
    on left: 244 245, on right: 246
all_type_define (153)
    on left: 246 247, on right: 153 248 249 264 265 266 267 268 269
    272 273 279 280 283 284 285 286 287 290
option_function_parameter_list (154)
    on left: 248 249 250 251 252 253 254 255 256 257 258 259 260 261
    262 263 264 265 266 267 268 269 270 271, on right: 59 60 84 85
    86 87 134 270 281
inner_option_define_identifier (155)
    on left: 272 273 274 275 276 277 278 279 280 281 282 283 284 285
    286 287 288, on right: 63 248 249 250 251 252 253 254 255 256 257
    258 259 260 261 262 263 264 265 266 267 268 269 270 272 273 274
    275 276 277 278 279 280 281 283 284 285 286 287
option_function_identifier (156)
    on left: 289 290 291 292 293, on right: 69 70 71
inner_option_function_identifier (157)
    on left: 294 295 296, on right: 289 294
statement_bpar (158)
    on left: 297 298, on right: 57 58 317 318 319 333 334
bool_par (159)
    on left: 299 300, on right: 317
identifier (160)
    on left: 301 302, on right: 56 63 84 85 94 96 110 140 141 142 143
    144 149 171 209 248 250 251 252 253 254 255 256 257 264 265 266
    267 269 270 272 274 275 276 277 278 279 280 281 283 284 285 286
    302 307 340 341 346 348 349 350 351 354 355 356 357 358 361 362
    366 368
strliteral (161)
    on left: 303, on right: 98 100 134 170 200 205
intliteral (162)
    on left: 304, on right: 167
charliteral (163)
    on left: 305, on right: 168
floatliteral (164)
    on left: 306, on right: 169
option_frame_identifier (165)
    on left: 307 308 309, on right: 56 307
option_projection (166)
    on left: 310 311, on right: 57 311
imply_pre (167)
    on left: 312 313 314 315 316, on right: 55 313 314 315 316
while_statement (168)
    on left: 317, on right: 37
for_statement (169)
    on left: 318, on right: 38
extend_for_statement (170)
    on left: 319, on right: 39
for_sta_init (171)
    on left: 320 321 322, on right: 319
for_sta_condition (172)
    on left: 323 324, on right: 319
for_sta_control (173)
    on left: 325 326, on right: 319
switch_statement (174)
    on left: 327, on right: 35
case_par (175)
    on left: 328 329, on right: 327 330 331
init_case_par (176)
    on left: 330 331 332, on right: 328
if_statement (177)
    on left: 333, on right: 36
option_else_statement (178)
    on left: 334 335, on right: 333
output_statement (179)
    on left: 336 337, on right: 50
option_output (180)
    on left: 338 339, on right: 337 339
input_statement (181)
    on left: 340 341 342 343 344, on right: 49
option_input (182)
    on left: 345 346 347, on right: 341 343 346 347
struct_member_exp (183)
    on left: 348 349 350 351 352 353 354 355 356 357 358 359 360 361
    362 363 364, on right: 111 177 211 344 364
option_struct_member_exp (184)
    on left: 365 366 367 368 369 370 371, on right: 348 349 350 351
    352 353 354 355 356 357 358 359 360 363 366 367 368 369


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1092
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 60
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON ari_exp   (rule 25)

    ID  	shift, and go to state 81



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 82



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 103
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 115



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 116



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 117



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 118



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 119



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 120
    CHOP	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 327)

    OPEN_PAR	shift, and go to state 127



state 23

    if_statement  ->  IF . ari_exp THEN statement_bpar option_else_statement   (rule 333)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 128
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 24

    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)



state 25

    statement  ->  AWAIT . OPEN_PAR ari_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 129



state 26

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 131



state 27

    struct_identifier  ->  UNION . ID   (rule 74)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 132
    STRUCT_TYPE	shift, and go to state 133



state 28

    type_define  ->  FILEDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 29

    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)



state 30

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 134



state 31

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 137



state 32

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 138



state 33

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 318)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 319)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 140
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 34

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 317)

    error	shift, and go to state 141
    OPEN_PAR	shift, and go to state 142

    bool_par	go to state 143



state 35

    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 36

    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 144



state 38

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 336)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 337)

    OPEN_PAR	shift, and go to state 145



state 39

    statement  ->  SKIP .   (rule 45)

    $default	reduce using rule 45 (statement)



state 40

    type_define  ->  INTDECLARATION .   (rule 88)

    $default	reduce using rule 88 (type_define)



state 41

    type_define  ->  STRDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 42

    type_define  ->  CHARDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 43

    type_define  ->  VOIDDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  FLOATDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)



state 45

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 146
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 147
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 148
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 312 (imply_pre)

    statement	go to state 149
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 150
    leftaddrshift	go to state 69
    array	go to state 151
    point_exp	go to state 152
    address_exp	go to state 153
    identifier	go to state 154
    imply_pre	go to state 155
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 156



state 46

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 157
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 47

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 158



state 48

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    ID  	shift, and go to state 159



state 49

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 160
    UNION	shift, and go to state 161
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 162
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 163
    type_define	go to state 66



state 50

    sign_declaration  ->  SIGNED . declaration   (rule 75)

    STRUCT	shift, and go to state 160
    UNION	shift, and go to state 161
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 162
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 164
    type_define	go to state 66



state 51

    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 165
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 167
    point_exp	go to state 168
    identifier	go to state 169



state 52

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 170
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 171
    ID  	shift, and go to state 166

    ass_left	go to state 172
    leftaddrshift	go to state 69
    array	go to state 173
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 53

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 174



state 54

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 340)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 341)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 342)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 343)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 344)

    OPEN_PAR	shift, and go to state 175



state 55

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 176



state 56

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 177



state 57

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 178



state 58

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    identifier  ->  ID .   (rule 301)

    OPEN_PAR	shift, and go to state 179
    OPEN_MPAR	shift, and go to state 180

    $default	reduce using rule 301 (identifier)



state 59

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 183
    identifier	go to state 184



state 60

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188

    $default	reduce using rule 1 (program)



state 61

    statement  ->  function .   (rule 62)

    $default	reduce using rule 62 (statement)



state 62

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 63

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 189



state 64

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 65

    sign_declaration  ->  declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 66

    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 190
    identifier	go to state 184



state 67

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 68

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)

    ASS_P	shift, and go to state 191
    ASS_N	shift, and go to state 192

    assign_operator	go to state 193



state 69

    ass_left  ->  leftaddrshift .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 70

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    OPEN_PAR	shift, and go to state 195
    IMPLY	shift, and go to state 196

    $default	reduce using rule 112 (ass_left)



state 71

    ass_left  ->  point_exp .   (rule 113)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    IMPLY	shift, and go to state 198

    $default	reduce using rule 113 (ass_left)



state 72

    ass_left  ->  identifier .   (rule 110)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    IMPLY	shift, and go to state 200

    $default	reduce using rule 110 (ass_left)



state 73

    statement  ->  while_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 74

    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 77

    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 78

    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 79

    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 80

    ass_left  ->  struct_member_exp .   (rule 111)

    $default	reduce using rule 111 (ass_left)



state 81

    complexProposition  ->  DEFINE ID . COLON ari_exp   (rule 25)

    COLON	shift, and go to state 201



state 82

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 202
    CHOP	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 203
    CHOP	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 204



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 86

    ari_exp  ->  IF . ari_exp THEN ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 205
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 87

    member_in_exp  ->  POINTERNULL .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 88

    member_in_exp  ->  MY_TRUE .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 89

    member_in_exp  ->  MY_FALSE .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)



state 90

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 211
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 91

    address_exp  ->  ADDRESS . identifier   (rule 209)
    address_exp  ->  ADDRESS . array   (rule 210)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 211)
    address_exp  ->  ADDRESS . address_exp   (rule 212)

    OPEN_PAR	shift, and go to state 222
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 223
    point_exp	go to state 224
    address_exp	go to state 225
    identifier	go to state 226
    struct_member_exp	go to state 227



state 92

    member_in_exp  ->  SUB . member_in_exp   (rule 179)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    member_in_exp	go to state 228
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 93

    member_in_exp  ->  BNE . member_in_exp   (rule 180)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    member_in_exp	go to state 229
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 94

    ari_exp  ->  NEGATION . ari_exp   (rule 160)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 230
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 95

    strliteral  ->  STRLITERAL .   (rule 303)

    $default	reduce using rule 303 (strliteral)



state 96

    intliteral  ->  INTLITERAL .   (rule 304)

    $default	reduce using rule 304 (intliteral)



state 97

    floatliteral  ->  FLOATLITERAL .   (rule 306)

    $default	reduce using rule 306 (floatliteral)



state 98

    charliteral  ->  CHARLITERAL .   (rule 305)

    $default	reduce using rule 305 (charliteral)



state 99

    member_in_exp  ->  function .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)



state 100

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    OPEN_PAR	shift, and go to state 195
    IMPLY	shift, and go to state 196

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 101

    member_in_exp  ->  array_cast_exp .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 102

    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    IMPLY	shift, and go to state 198

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 103

    complexProposition  ->  LENGTH ari_exp .   (rule 17)

    $default	reduce using rule 17 (complexProposition)



state 104

    ari_exp  ->  simple_ari_exp .   (rule 156)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 157)
    ari_exp  ->  simple_ari_exp . BOOL_AND ari_exp   (rule 158)
    ari_exp  ->  simple_ari_exp . BOOL_OR ari_exp   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . arith_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247
    BOOL_OR	shift, and go to state 248

    INTER_OR	[reduce using rule 156 (ari_exp)]
    CON 	[reduce using rule 156 (ari_exp)]
    ADDRESS	[reduce using rule 156 (ari_exp)]
    BOOL_AND	[reduce using rule 156 (ari_exp)]
    NE  	[reduce using rule 156 (ari_exp)]
    EQ  	[reduce using rule 156 (ari_exp)]
    GE  	[reduce using rule 156 (ari_exp)]
    LE  	[reduce using rule 156 (ari_exp)]
    GT  	[reduce using rule 156 (ari_exp)]
    LT  	[reduce using rule 156 (ari_exp)]
    LST 	[reduce using rule 156 (ari_exp)]
    RST 	[reduce using rule 156 (ari_exp)]
    ADD 	[reduce using rule 156 (ari_exp)]
    SUB 	[reduce using rule 156 (ari_exp)]
    MUL 	[reduce using rule 156 (ari_exp)]
    DIV 	[reduce using rule 156 (ari_exp)]
    MOD 	[reduce using rule 156 (ari_exp)]
    BOOL_OR	[reduce using rule 156 (ari_exp)]
    $default	reduce using rule 156 (ari_exp)

    arith_operator	go to state 249
    relation_operator	go to state 250



state 105

    simple_ari_exp  ->  member_in_exp .   (rule 165)

    $default	reduce using rule 165 (simple_ari_exp)



state 106

    member_in_exp  ->  address_exp .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 107

    member_in_exp  ->  type_cast .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 108

    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    IMPLY	shift, and go to state 200

    DOT 	[reduce using rule 171 (member_in_exp)]
    IMPLY	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 109

    member_in_exp  ->  strliteral .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 110

    member_in_exp  ->  intliteral .   (rule 167)

    $default	reduce using rule 167 (member_in_exp)



state 111

    member_in_exp  ->  charliteral .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 112

    member_in_exp  ->  floatliteral .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 113

    member_in_exp  ->  struct_member_exp .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 115

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 116

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 117

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 118

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 119

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 120

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 121

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 251



state 122

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 252



state 123

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 253



state 124

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 254



state 125

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 255



state 126

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 127

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 327)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    member_in_exp	go to state 256
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 128

    if_statement  ->  IF ari_exp . THEN statement_bpar option_else_statement   (rule 333)

    THEN	shift, and go to state 257



state 129

    statement  ->  AWAIT OPEN_PAR . ari_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 258
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 130

    struct_identifier  ->  STRUCT ID .   (rule 73)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    $default	reduce using rule 73 (struct_identifier)

    option_identifier_array_declaration	go to state 259
    identifier	go to state 184



state 131

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 260
    identifier	go to state 184



state 132

    struct_identifier  ->  UNION ID .   (rule 74)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 261
    identifier	go to state 184



state 133

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 262
    identifier	go to state 184



state 134

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 263



state 135

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 264



state 136

    identifier  ->  ID .   (rule 301)

    $default	reduce using rule 301 (identifier)



state 137

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 266



state 138

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 267



state 139

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 268
    UNION	shift, and go to state 161
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 269
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 270
    VOIDDECLARATION	shift, and go to state 271
    FLOATDECLARATION	shift, and go to state 272
    OPEN_PAR	shift, and go to state 273
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 171
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 274
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 322 (for_sta_init)

    function	go to state 99
    declaration	go to state 275
    type_define	go to state 66
    ass_statement	go to state 276
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 277
    array_cast_exp	go to state 216
    point_exp	go to state 278
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 279
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    for_sta_init	go to state 280
    struct_member_exp	go to state 281



state 140

    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 318)

    TIMES	shift, and go to state 282



state 141

    bool_par  ->  error . CLOSE_PAR   (rule 300)

    CLOSE_PAR	shift, and go to state 283



state 142

    bool_par  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 284
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 143

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 317)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 287



state 144

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 288
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 145

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 336)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 337)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 293
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 146

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 316)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 299
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 300
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 301
    OPEN_PAR	shift, and go to state 146
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 302
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 147
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 148
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 312 (imply_pre)

    statement	go to state 149
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 150
    leftaddrshift	go to state 69
    array	go to state 151
    point_exp	go to state 152
    address_exp	go to state 303
    identifier	go to state 154
    imply_pre	go to state 304
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 156



state 147

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 165
    MUL 	shift, and go to state 305
    ID  	shift, and go to state 306

    array	go to state 167
    point_exp	go to state 168
    identifier	go to state 307



state 148

    imply_pre  ->  NEGATION . imply_pre   (rule 313)

    OPEN_PAR	shift, and go to state 308
    NEGATION	shift, and go to state 148

    $default	reduce using rule 312 (imply_pre)

    imply_pre	go to state 309



state 149

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 310
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 150

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 311
    ASS_P	shift, and go to state 191
    ASS_N	shift, and go to state 192

    assign_operator	go to state 193



state 151

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    OPEN_PAR	shift, and go to state 195
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 196

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 152

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 313
    IMPLY	shift, and go to state 198

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 153

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)

    CLOSE_PAR	shift, and go to state 314



state 154

    ass_left  ->  identifier .   (rule 110)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 302)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 315
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    $default	reduce using rule 110 (ass_left)



state 155

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 314)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 315)

    CLOSE_PAR	shift, and go to state 316
    OR  	shift, and go to state 317
    AND 	shift, and go to state 318



state 156

    ass_left  ->  struct_member_exp .   (rule 111)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 319

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 157

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    COMMA	shift, and go to state 320
    CLOSE_BPAR	shift, and go to state 321
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188

    CLOSE_BPAR	[reduce using rule 310 (option_projection)]
    $default	reduce using rule 310 (option_projection)

    option_projection	go to state 322



state 158

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 323



state 159

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    OPEN_PAR	shift, and go to state 324



state 160

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 325
    STRUCT_TYPE	shift, and go to state 131



state 161

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 326
    STRUCT_TYPE	shift, and go to state 133



state 162

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    MUL 	shift, and go to state 327



state 163

    sign_declaration  ->  UNSIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)



state 164

    sign_declaration  ->  SIGNED declaration .   (rule 75)

    $default	reduce using rule 75 (sign_declaration)



state 165

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    type_define	go to state 329
    array	go to state 215
    array_cast_exp	go to state 101
    point_exp	go to state 217
    ari_exp	go to state 330
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    sign_type_define	go to state 331
    all_type_define	go to state 332
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 166

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    identifier  ->  ID .   (rule 301)

    OPEN_MPAR	shift, and go to state 180

    $default	reduce using rule 301 (identifier)



state 167

    point_exp  ->  MUL array .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 168

    point_exp  ->  MUL point_exp .   (rule 150)

    $default	reduce using rule 150 (point_exp)



state 169

    point_exp  ->  MUL identifier .   (rule 149)

    $default	reduce using rule 149 (point_exp)



state 170

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 333
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 334
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 150
    leftaddrshift	go to state 69
    array	go to state 151
    point_exp	go to state 152
    address_exp	go to state 153
    identifier	go to state 154
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 156



state 171

    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 335
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 171
    ID  	shift, and go to state 166

    ass_left	go to state 172
    leftaddrshift	go to state 69
    array	go to state 173
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 172

    ass_left  ->  NEXT ass_left .   (rule 115)

    $default	reduce using rule 115 (ass_left)



state 173

    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    IMPLY	shift, and go to state 196

    $default	reduce using rule 112 (ass_left)



state 174

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 336
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 175

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 340)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 341)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 342)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 343)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 344)

    OPEN_PAR	shift, and go to state 337
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 338
    point_exp	go to state 224
    identifier	go to state 339
    struct_member_exp	go to state 340



state 176

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 341
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 177

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 342
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 178

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 343
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 179

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 344
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 345
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 292 (option_function_identifier)

    function	go to state 99
    type_define	go to state 329
    ass_right	go to state 346
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    sign_type_define	go to state 331
    all_type_define	go to state 347
    option_function_identifier	go to state 348
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 180

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 349
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 181

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 350
    identifier	go to state 184



state 182

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 301)

    ARRAY	shift, and go to state 351
    OPEN_MPAR	shift, and go to state 352

    $default	reduce using rule 301 (identifier)



state 183

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 184

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 94)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 353
    ASS_P	shift, and go to state 354

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 355



state 185

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 356
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 186

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 357
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 187

    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 358
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 188

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 359
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 189

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 72)

    STRUCT	shift, and go to state 160
    UNION	shift, and go to state 161
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 162
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 360
    sign_declaration	go to state 361
    declaration	go to state 65
    type_define	go to state 66



state 190

    declaration  ->  type_define option_identifier_array_declaration .   (rule 78)

    $default	reduce using rule 78 (declaration)



state 191

    assign_operator  ->  ASS_P .   (rule 130)

    $default	reduce using rule 130 (assign_operator)



state 192

    assign_operator  ->  ASS_N .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 193

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 109)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 362
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 194

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 352)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 364
    identifier	go to state 365



state 195

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 344
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 345
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 292 (option_function_identifier)

    function	go to state 99
    type_define	go to state 329
    ass_right	go to state 346
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    sign_type_define	go to state 331
    all_type_define	go to state 347
    option_function_identifier	go to state 366
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 196

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 359)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 367
    identifier	go to state 368



state 197

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 353)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 369
    identifier	go to state 370



state 198

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 363)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 371
    identifier	go to state 372



state 199

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier DOT . function   (rule 361)

    OPEN_PAR	shift, and go to state 363
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 373
    array	go to state 374
    identifier	go to state 375



state 200

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier IMPLY . function   (rule 362)

    OPEN_PAR	shift, and go to state 363
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 376
    array	go to state 377
    identifier	go to state 378



state 201

    complexProposition  ->  DEFINE ID COLON . ari_exp   (rule 25)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 379
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 202

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 203

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 380



state 204

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 381



state 205

    ari_exp  ->  IF ari_exp . THEN ari_exp option_exp_else_statement   (rule 161)

    THEN	shift, and go to state 382



state 206

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)

    STRUCT_TYPE	shift, and go to state 383



state 207

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 385



state 208

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 387



state 209

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 388



state 210

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 389
    MUL 	shift, and go to state 390



state 211

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 391
    CHARDECLARATION	shift, and go to state 392
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 211
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 394
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 212

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)

    INTDECLARATION	shift, and go to state 395
    CHARDECLARATION	shift, and go to state 396



state 213

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)

    INTDECLARATION	shift, and go to state 397
    CHARDECLARATION	shift, and go to state 398



state 214

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 236)

    MUL 	shift, and go to state 399



state 215

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    OPEN_PAR	shift, and go to state 195
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 196

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 216

    array_cast_exp  ->  OPEN_PAR array_cast_exp . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array_cast_exp .   (rule 178)

    CLOSE_PAR	shift, and go to state 400

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 217

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 313
    IMPLY	shift, and go to state 198

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 218

    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 184)

    CLOSE_PAR	shift, and go to state 401



state 219

    member_in_exp  ->  address_exp .   (rule 175)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 213)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)

    CLOSE_PAR	shift, and go to state 402

    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 220

    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 302)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 315
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 221

    member_in_exp  ->  struct_member_exp .   (rule 177)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 319

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 222

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    OPEN_PAR	shift, and go to state 222
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 403
    point_exp	go to state 404
    address_exp	go to state 303
    identifier	go to state 405
    struct_member_exp	go to state 406



state 223

    address_exp  ->  ADDRESS array .   (rule 210)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    IMPLY	shift, and go to state 196

    DOT 	[reduce using rule 210 (address_exp)]
    $default	reduce using rule 210 (address_exp)



state 224

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    IMPLY	shift, and go to state 198



state 225

    address_exp  ->  ADDRESS address_exp .   (rule 212)

    $default	reduce using rule 212 (address_exp)



state 226

    address_exp  ->  ADDRESS identifier .   (rule 209)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    IMPLY	shift, and go to state 200

    DOT 	[reduce using rule 209 (address_exp)]
    $default	reduce using rule 209 (address_exp)



state 227

    address_exp  ->  ADDRESS struct_member_exp .   (rule 211)

    $default	reduce using rule 211 (address_exp)



state 228

    member_in_exp  ->  SUB member_in_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 229

    member_in_exp  ->  BNE member_in_exp .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 230

    ari_exp  ->  NEGATION ari_exp .   (rule 160)

    $default	reduce using rule 160 (ari_exp)



state 231

    arith_operator  ->  INTER_OR .   (rule 193)

    $default	reduce using rule 193 (arith_operator)



state 232

    arith_operator  ->  CON .   (rule 194)

    $default	reduce using rule 194 (arith_operator)



state 233

    arith_operator  ->  ADDRESS .   (rule 192)

    $default	reduce using rule 192 (arith_operator)



state 234

    ari_exp  ->  simple_ari_exp BOOL_AND . ari_exp   (rule 158)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 407
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 235

    relation_operator  ->  NE .   (rule 240)

    $default	reduce using rule 240 (relation_operator)



state 236

    relation_operator  ->  EQ .   (rule 243)

    $default	reduce using rule 243 (relation_operator)



state 237

    relation_operator  ->  GE .   (rule 238)

    $default	reduce using rule 238 (relation_operator)



state 238

    relation_operator  ->  LE .   (rule 239)

    $default	reduce using rule 239 (relation_operator)



state 239

    relation_operator  ->  GT .   (rule 241)

    $default	reduce using rule 241 (relation_operator)



state 240

    relation_operator  ->  LT .   (rule 242)

    $default	reduce using rule 242 (relation_operator)



state 241

    arith_operator  ->  LST .   (rule 190)

    $default	reduce using rule 190 (arith_operator)



state 242

    arith_operator  ->  RST .   (rule 191)

    $default	reduce using rule 191 (arith_operator)



state 243

    arith_operator  ->  ADD .   (rule 185)

    $default	reduce using rule 185 (arith_operator)



state 244

    arith_operator  ->  SUB .   (rule 186)

    $default	reduce using rule 186 (arith_operator)



state 245

    arith_operator  ->  MUL .   (rule 187)

    $default	reduce using rule 187 (arith_operator)



state 246

    arith_operator  ->  DIV .   (rule 188)

    $default	reduce using rule 188 (arith_operator)



state 247

    arith_operator  ->  MOD .   (rule 189)

    $default	reduce using rule 189 (arith_operator)



state 248

    ari_exp  ->  simple_ari_exp BOOL_OR . ari_exp   (rule 159)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 408
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 249

    simple_ari_exp  ->  simple_ari_exp arith_operator . member_in_exp   (rule 166)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    member_in_exp	go to state 409
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 250

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 157)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 410
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 251

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 8 (complexProposition)



state 252

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 5 (complexProposition)



state 253

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 4 (complexProposition)



state 254

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 6 (complexProposition)



state 255

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 7 (complexProposition)



state 256

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 327)

    CLOSE_PAR	shift, and go to state 411



state 257

    if_statement  ->  IF ari_exp THEN . statement_bpar option_else_statement   (rule 333)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 412



state 258

    statement  ->  AWAIT OPEN_PAR ari_exp . CLOSE_PAR   (rule 43)

    CLOSE_PAR	shift, and go to state 413



state 259

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 260

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 261

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 262

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 263

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 418



state 264

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 302)

    CLOSE_PAR	shift, and go to state 315



state 265

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 272)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 273)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 274)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 275)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 276)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 277)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 278)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 279)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 280)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 281)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 286)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 287)
    inner_option_define_identifier  ->  COMMA . error   (rule 288)

    error	shift, and go to state 419
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 420
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 421
    STRUCT_TYPE	shift, and go to state 422

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 423



state 266

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COLON	shift, and go to state 424



state 267

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 425

    $default	reduce using rule 308 (option_frame_identifier)

    option_frame_identifier	go to state 426



state 268

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)

    ID  	shift, and go to state 325
    STRUCT_TYPE	shift, and go to state 427



state 269

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 385

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 270

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 387

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 271

    type_define  ->  VOIDDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 388

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 272

    type_define  ->  FLOATDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 389
    MUL 	shift, and go to state 390

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 273

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 391
    CHARDECLARATION	shift, and go to state 392
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 428
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 394
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 147
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 171
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_left	go to state 429
    leftaddrshift	go to state 69
    array	go to state 277
    array_cast_exp	go to state 216
    point_exp	go to state 278
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 279
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 281



state 274

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 430
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 183
    identifier	go to state 184



state 275

    for_sta_init  ->  declaration .   (rule 321)

    $default	reduce using rule 321 (for_sta_init)



state 276

    for_sta_init  ->  ass_statement .   (rule 320)

    $default	reduce using rule 320 (for_sta_init)



state 277

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    OPEN_PAR	shift, and go to state 195
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 196

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 172 (member_in_exp)



state 278

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 313
    IMPLY	shift, and go to state 198

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 279

    ass_left  ->  identifier .   (rule 110)
    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 302)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 315
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    ASS_P	reduce using rule 110 (ass_left)
    ASS_N	reduce using rule 110 (ass_left)
    $default	reduce using rule 171 (member_in_exp)



state 280

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 319)

    COMMA	shift, and go to state 431



state 281

    ass_left  ->  struct_member_exp .   (rule 111)
    member_in_exp  ->  struct_member_exp .   (rule 177)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 319

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 177 (member_in_exp)



state 282

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 318)

    DO  	shift, and go to state 432



state 283

    bool_par  ->  error CLOSE_PAR .   (rule 300)

    $default	reduce using rule 300 (bool_par)



state 284

    bool_par  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 299)

    CLOSE_PAR	shift, and go to state 433



state 285

    statement_bpar  ->  error . CLOSE_BPAR   (rule 298)

    CLOSE_BPAR	shift, and go to state 434



state 286

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 297)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 435
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 287

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 317)

    $default	reduce using rule 317 (while_statement)



state 288

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_BPAR	shift, and go to state 436
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 289

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 135)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 437
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 438
    rightaddrshift	go to state 294
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 439
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 440
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 441
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 290

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 202)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 203)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 442
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 443
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 444
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 291

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 199)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 200)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 201)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 442
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 445
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 446
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 447
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 292

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 137)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 448
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 167
    point_exp	go to state 168
    identifier	go to state 169



state 293

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 336)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 337)

    COMMA	shift, and go to state 449
    CLOSE_PAR	shift, and go to state 450

    CLOSE_PAR	[reduce using rule 338 (option_output)]
    $default	reduce using rule 338 (option_output)

    option_output	go to state 451



state 294

    ass_right  ->  rightaddrshift .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 295

    ass_right  ->  ari_exp .   (rule 132)

    $default	reduce using rule 132 (ass_right)



state 296

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    CON 	shift, and go to state 452

    $default	reduce using rule 133 (ass_right)



state 297

    array_exp  ->  option_list_value .   (rule 196)

    $default	reduce using rule 196 (array_exp)



state 298

    array_exp  ->  option_struct_list_value .   (rule 197)

    $default	reduce using rule 197 (array_exp)



state 299

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 453

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 300

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 454

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 301

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    MUL 	shift, and go to state 455

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 302

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    STRUCT	shift, and go to state 160
    UNION	shift, and go to state 161
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 456
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 162
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 163
    type_define	go to state 66



state 303

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 213)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)

    CLOSE_PAR	shift, and go to state 402



state 304

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 314)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 315)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 457
    OR  	shift, and go to state 317
    AND 	shift, and go to state 318



state 305

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 165
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 167
    point_exp	go to state 168
    identifier	go to state 458



state 306

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    identifier  ->  ID .   (rule 301)

    OPEN_MPAR	shift, and go to state 459

    $default	reduce using rule 301 (identifier)



state 307

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 460

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 308

    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 316)

    OPEN_PAR	shift, and go to state 308
    NEGATION	shift, and go to state 148

    $default	reduce using rule 312 (imply_pre)

    imply_pre	go to state 461



state 309

    imply_pre  ->  NEGATION imply_pre .   (rule 313)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 314)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 315)


    $default	reduce using rule 313 (imply_pre)



state 310

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 311

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (ass_left)



state 312

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 139)

    $default	reduce using rule 139 (array)



state 313

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 155)

    OPEN_MPAR	shift, and go to state 462

    $default	reduce using rule 155 (point_exp)



state 314

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 360)

    IMPLY	shift, and go to state 463



state 315

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 302)

    $default	reduce using rule 302 (identifier)



state 316

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    IMPLY	shift, and go to state 464



state 317

    imply_pre  ->  imply_pre OR . imply_pre   (rule 315)

    OPEN_PAR	shift, and go to state 308
    NEGATION	shift, and go to state 148

    $default	reduce using rule 312 (imply_pre)

    imply_pre	go to state 465



state 318

    imply_pre  ->  imply_pre AND . imply_pre   (rule 314)

    OPEN_PAR	shift, and go to state 308
    NEGATION	shift, and go to state 148

    $default	reduce using rule 312 (imply_pre)

    imply_pre	go to state 466



state 319

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)



state 320

    option_projection  ->  COMMA . statement option_projection   (rule 311)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 467
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 321

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 468



state 322

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    CLOSE_BPAR	shift, and go to state 469



state 323

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 470



state 324

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 344
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 345
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 292 (option_function_identifier)

    function	go to state 99
    type_define	go to state 329
    ass_right	go to state 346
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    sign_type_define	go to state 331
    all_type_define	go to state 347
    option_function_identifier	go to state 471
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 325

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 259
    identifier	go to state 184



state 326

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 261
    identifier	go to state 184



state 327

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 472
    ID  	shift, and go to state 473

    identifier	go to state 474



state 328

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 244)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 245)

    INTDECLARATION	shift, and go to state 475
    CHARDECLARATION	shift, and go to state 476



state 329

    all_type_define  ->  type_define .   (rule 247)

    $default	reduce using rule 247 (all_type_define)



state 330

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 154)

    CLOSE_PAR	shift, and go to state 477



state 331

    all_type_define  ->  sign_type_define .   (rule 246)

    $default	reduce using rule 246 (all_type_define)



state 332

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 153)

    MUL 	shift, and go to state 478



state 333

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 299
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 300
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 301
    OPEN_PAR	shift, and go to state 146
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 302
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 147
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 148
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 312 (imply_pre)

    statement	go to state 149
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 150
    leftaddrshift	go to state 69
    array	go to state 151
    point_exp	go to state 152
    address_exp	go to state 303
    identifier	go to state 154
    imply_pre	go to state 155
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 156



state 334

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 479
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 335

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    OPEN_PAR	shift, and go to state 480
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 171
    ID  	shift, and go to state 166

    ass_left	go to state 429
    leftaddrshift	go to state 69
    array	go to state 481
    point_exp	go to state 152
    address_exp	go to state 153
    identifier	go to state 154
    struct_member_exp	go to state 156



state 336

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)

    CLOSE_PAR	shift, and go to state 482



state 337

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    OPEN_PAR	shift, and go to state 222
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 403
    point_exp	go to state 404
    address_exp	go to state 153
    identifier	go to state 405
    struct_member_exp	go to state 406



state 338

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 342)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 343)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    COMMA	shift, and go to state 483
    CLOSE_PAR	shift, and go to state 484
    IMPLY	shift, and go to state 196

    CLOSE_PAR	[reduce using rule 345 (option_input)]
    $default	reduce using rule 345 (option_input)

    option_input	go to state 485



state 339

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 340)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 341)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    COMMA	shift, and go to state 483
    CLOSE_PAR	shift, and go to state 486
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 345 (option_input)]
    $default	reduce using rule 345 (option_input)

    option_input	go to state 487



state 340

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 344)

    CLOSE_PAR	shift, and go to state 488



state 341

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 489
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 342

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 490
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 343

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 491
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 344

    address_exp  ->  ADDRESS . identifier   (rule 209)
    address_exp  ->  ADDRESS . array   (rule 210)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 211)
    address_exp  ->  ADDRESS . address_exp   (rule 212)
    option_function_identifier  ->  ADDRESS . error   (rule 293)

    error	shift, and go to state 492
    OPEN_PAR	shift, and go to state 222
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 166

    array	go to state 223
    point_exp	go to state 224
    address_exp	go to state 225
    identifier	go to state 226
    struct_member_exp	go to state 227



state 345

    option_function_identifier  ->  STRUCT_TYPE .   (rule 291)

    $default	reduce using rule 291 (option_function_identifier)



state 346

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 289)

    COMMA	shift, and go to state 493

    $default	reduce using rule 295 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 494



state 347

    option_function_identifier  ->  all_type_define .   (rule 290)

    $default	reduce using rule 290 (option_function_identifier)



state 348

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 495



state 349

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 497



state 350

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 351

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)

    ASS_P	shift, and go to state 498



state 352

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 499
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 353

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 102)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 103)

    error	shift, and go to state 500
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 501
    identifier	go to state 184



state 354

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 96)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 502
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 355

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 94)

    $default	reduce using rule 94 (option_identifier_array_declaration)



state 356

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188

    $default	reduce using rule 32 (statement)



state 357

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 188

    $default	reduce using rule 31 (statement)



state 358

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 188

    $default	reduce using rule 54 (statement)



state 359

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)



state 360

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 503



state 361

    option_struct_declaration  ->  sign_declaration .   (rule 65)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 66)

    AND 	shift, and go to state 504

    $default	reduce using rule 65 (option_struct_declaration)



state 362

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 109)

    $default	reduce using rule 109 (ass_statement)



state 363

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 505
    identifier	go to state 264



state 364

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 352)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 508



state 365

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 349)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 509



state 366

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 510



state 367

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 511



state 368

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 355)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 512



state 369

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 353)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 513



state 370

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 350)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 514



state 371

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 515



state 372

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 357)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 516



state 373

    struct_member_exp  ->  identifier DOT function .   (rule 361)

    $default	reduce using rule 361 (struct_member_exp)



state 374

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 351)

    DOT 	shift, and go to state 506
    OPEN_PAR	shift, and go to state 195
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 517



state 375

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 348)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 518



state 376

    struct_member_exp  ->  identifier IMPLY function .   (rule 362)

    $default	reduce using rule 362 (struct_member_exp)



state 377

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 506
    OPEN_PAR	shift, and go to state 195
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 519



state 378

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 520



state 379

    complexProposition  ->  DEFINE ID COLON ari_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 380

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 203
    CHOP	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 521



state 381

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 522



state 382

    ari_exp  ->  IF ari_exp THEN . ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 523
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 383

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 524



state 384

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 525
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 385

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 527
    MUL 	shift, and go to state 528



state 386

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 529
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 387

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 530
    MUL 	shift, and go to state 531



state 388

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 532
    MUL 	shift, and go to state 533



state 389

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 534
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 390

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 535
    MUL 	shift, and go to state 536



state 391

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 537



state 392

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 538



state 393

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 389
    MUL 	shift, and go to state 539



state 394

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)

    INTDECLARATION	shift, and go to state 540
    CHARDECLARATION	shift, and go to state 541



state 395

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 542
    MUL 	shift, and go to state 543



state 396

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 544
    MUL 	shift, and go to state 545



state 397

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)

    CLOSE_PAR	shift, and go to state 546



state 398

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)

    CLOSE_PAR	shift, and go to state 547



state 399

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 548
    MUL 	shift, and go to state 549



state 400

    array_cast_exp  ->  OPEN_PAR array_cast_exp CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (array_cast_exp)



state 401

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 184)

    $default	reduce using rule 184 (member_in_exp)



state 402

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 213)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 360)

    IMPLY	shift, and go to state 463

    IMPLY	[reduce using rule 213 (address_exp)]
    $default	reduce using rule 213 (address_exp)



state 403

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 196



state 404

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 353)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 357)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 313
    IMPLY	shift, and go to state 198



state 405

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 302)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 315
    IMPLY	shift, and go to state 200



state 406

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 319



state 407

    ari_exp  ->  simple_ari_exp BOOL_AND ari_exp .   (rule 158)

    $default	reduce using rule 158 (ari_exp)



state 408

    ari_exp  ->  simple_ari_exp BOOL_OR ari_exp .   (rule 159)

    $default	reduce using rule 159 (ari_exp)



state 409

    simple_ari_exp  ->  simple_ari_exp arith_operator member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)



state 410

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 157)

    $default	reduce using rule 157 (ari_exp)



state 411

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 327)

    OPEN_BPAR	shift, and go to state 550



state 412

    if_statement  ->  IF ari_exp THEN statement_bpar . option_else_statement   (rule 333)

    ELSE	shift, and go to state 551

    $default	reduce using rule 335 (option_else_statement)

    option_else_statement	go to state 552



state 413

    statement  ->  AWAIT OPEN_PAR ari_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 414

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 270)

    MUL 	shift, and go to state 553



state 415

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 254)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 255)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 256)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 257)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 261)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 262)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 263)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 554
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 555
    identifier	go to state 556



state 416

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 250)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 251)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 252)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 253)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 258)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 259)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 260)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 557
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 558
    identifier	go to state 559



state 417

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 248)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 249)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 560
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 561
    identifier	go to state 562



state 418

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 563



state 419

    inner_option_define_identifier  ->  COMMA error .   (rule 288)

    $default	reduce using rule 288 (inner_option_define_identifier)



state 420

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 281)

    MUL 	shift, and go to state 564



state 421

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 274)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 277)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 565



state 422

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 275)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 276)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 278)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 566
    ID  	shift, and go to state 136

    identifier	go to state 567



state 423

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 272)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 273)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 279)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 280)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 286)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 568
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 569
    identifier	go to state 570



state 424

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_BPAR	shift, and go to state 571



state 425

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 307)
    option_frame_identifier  ->  COMMA . error   (rule 309)

    error	shift, and go to state 572
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 573



state 426

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 574



state 427

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 235)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 575
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 260
    identifier	go to state 184



state 428

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 576
    CHARDECLARATION	shift, and go to state 577
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 578
    OPEN_PAR	shift, and go to state 428
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 579
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 171
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_left	go to state 429
    leftaddrshift	go to state 69
    array	go to state 277
    array_cast_exp	go to state 216
    point_exp	go to state 278
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 279
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 281



state 429

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 311



state 430

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 548
    MUL 	shift, and go to state 580
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 350
    identifier	go to state 184



state 431

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 319)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 324 (for_sta_condition)

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 581
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    for_sta_condition	go to state 582
    struct_member_exp	go to state 113



state 432

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 318)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 583



state 433

    bool_par  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 299)

    $default	reduce using rule 299 (bool_par)



state 434

    statement_bpar  ->  error CLOSE_BPAR .   (rule 298)

    $default	reduce using rule 298 (statement_bpar)



state 435

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 297)

    CLOSE_BPAR	shift, and go to state 584
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 436

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 585



state 437

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 135)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 391
    CHARDECLARATION	shift, and go to state 392
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 437
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 394
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 438
    rightaddrshift	go to state 294
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 439
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 440
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 441
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 438

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 135)

    CLOSE_PAR	shift, and go to state 586



state 439

    ass_right  ->  ari_exp .   (rule 132)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 184)

    CLOSE_PAR	shift, and go to state 401

    CLOSE_PAR	[reduce using rule 132 (ass_right)]
    $default	reduce using rule 132 (ass_right)



state 440

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 195)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 198)

    CLOSE_PAR	shift, and go to state 587
    CON 	shift, and go to state 452

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)



state 441

    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)
    member_in_exp  ->  strliteral .   (rule 170)

    CLOSE_PAR	shift, and go to state 588

    CLOSE_PAR	[reduce using rule 170 (member_in_exp)]
    $default	reduce using rule 170 (member_in_exp)



state 442

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 589
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 590
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 443

    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 202)

    COMMA	shift, and go to state 591

    $default	reduce using rule 207 (inner_option_list_value)

    inner_option_list_value	go to state 592



state 444

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 203)

    COMMA	shift, and go to state 591
    CON 	shift, and go to state 452

    $default	reduce using rule 207 (inner_option_list_value)

    inner_option_list_value	go to state 593



state 445

    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 199)

    COMMA	shift, and go to state 591

    $default	reduce using rule 207 (inner_option_list_value)

    inner_option_list_value	go to state 594



state 446

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 201)

    COMMA	shift, and go to state 591
    CON 	shift, and go to state 452

    $default	reduce using rule 207 (inner_option_list_value)

    inner_option_list_value	go to state 595



state 447

    member_in_exp  ->  strliteral .   (rule 170)
    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 200)

    COMMA	shift, and go to state 591

    COMMA	[reduce using rule 170 (member_in_exp)]
    CLOSE_MPAR	reduce using rule 170 (member_in_exp)
    CLOSE_MPAR	[reduce using rule 207 (inner_option_list_value)]
    $default	reduce using rule 170 (member_in_exp)

    inner_option_list_value	go to state 596



state 448

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 597
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    type_define	go to state 329
    leftaddrshift	go to state 598
    array	go to state 215
    array_cast_exp	go to state 101
    point_exp	go to state 217
    ari_exp	go to state 330
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    sign_type_define	go to state 331
    all_type_define	go to state 332
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 449

    option_output  ->  COMMA . ass_right option_output   (rule 339)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 599
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 450

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 336)

    $default	reduce using rule 336 (output_statement)



state 451

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 337)

    CLOSE_PAR	shift, and go to state 600



state 452

    array_exp  ->  array_exp CON . array_exp   (rule 195)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291

    array_exp	go to state 602
    option_list_value	go to state 297
    option_struct_list_value	go to state 298



state 453

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 603



state 454

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 604



state 455

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 605



state 456

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 606

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 457

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 316)

    IMPLY	shift, and go to state 464

    $default	reduce using rule 316 (imply_pre)



state 458

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 607

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 459

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 608
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 460

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    OPEN_PAR	shift, and go to state 609



state 461

    imply_pre  ->  imply_pre . AND imply_pre   (rule 314)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 315)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 610
    OR  	shift, and go to state 317
    AND 	shift, and go to state 318



state 462

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 611
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 463

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 360)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 612
    identifier	go to state 613



state 464

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 614



state 465

    imply_pre  ->  imply_pre . AND imply_pre   (rule 314)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 315)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 315)

    AND 	shift, and go to state 318

    $default	reduce using rule 315 (imply_pre)



state 466

    imply_pre  ->  imply_pre . AND imply_pre   (rule 314)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 314)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 315)


    $default	reduce using rule 314 (imply_pre)



state 467

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 311)

    COMMA	shift, and go to state 320
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188

    $default	reduce using rule 310 (option_projection)

    option_projection	go to state 615



state 468

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 616



state 469

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 617



state 470

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 618



state 471

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 619



state 472

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 620



state 473

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    identifier  ->  ID .   (rule 301)

    OPEN_MPAR	shift, and go to state 621

    $default	reduce using rule 301 (identifier)



state 474

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 460



state 475

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 244)

    $default	reduce using rule 244 (sign_type_define)



state 476

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 245)

    $default	reduce using rule 245 (sign_type_define)



state 477

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 478

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 153)

    CLOSE_PAR	shift, and go to state 622



state 479

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 480

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    INTDECLARATION	shift, and go to state 623
    CHARDECLARATION	shift, and go to state 624
    FLOATDECLARATION	shift, and go to state 625
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 626
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 171
    ID  	shift, and go to state 166

    ass_left	go to state 429
    leftaddrshift	go to state 69
    array	go to state 481
    point_exp	go to state 152
    address_exp	go to state 303
    identifier	go to state 154
    struct_member_exp	go to state 156



state 481

    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 352)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 355)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 196

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 482

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)



state 483

    option_input  ->  COMMA . identifier option_input   (rule 346)
    option_input  ->  COMMA . array option_input   (rule 347)

    OPEN_PAR	shift, and go to state 363
    ID  	shift, and go to state 166

    array	go to state 627
    identifier	go to state 628



state 484

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 342)

    $default	reduce using rule 342 (input_statement)



state 485

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 343)

    CLOSE_PAR	shift, and go to state 629



state 486

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 340)

    $default	reduce using rule 340 (input_statement)



state 487

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 341)

    CLOSE_PAR	shift, and go to state 630



state 488

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 344)

    $default	reduce using rule 344 (input_statement)



state 489

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)



state 490

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 491

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 492

    option_function_identifier  ->  ADDRESS error .   (rule 293)

    $default	reduce using rule 293 (option_function_identifier)



state 493

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 294)
    inner_option_function_identifier  ->  COMMA . error   (rule 296)

    error	shift, and go to state 631
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 289
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 292
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 632
    rightaddrshift	go to state 294
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 295
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 296
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 494

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_identifier)



state 495

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (function)



state 496

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 146)
    option_ari_exp  ->  COMMA . error   (rule 147)

    error	shift, and go to state 633
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 634
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 497

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 635



state 498

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    STRLITERAL	shift, and go to state 95

    array_exp	go to state 636
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    strliteral	go to state 637



state 499

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 638



state 500

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 501

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (inner_option_identifier_array_declaration)



state 502

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 353

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 639



state 503

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (struct_define_statement)



state 504

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 66)

    STRUCT	shift, and go to state 160
    UNION	shift, and go to state 161
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 162
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 640
    sign_declaration	go to state 361
    declaration	go to state 65
    type_define	go to state 66



state 505

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)

    CLOSE_PAR	shift, and go to state 312



state 506

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 366)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 367)
    option_struct_member_exp  ->  DOT . function   (rule 370)

    OPEN_PAR	shift, and go to state 363
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 641
    array	go to state 642
    identifier	go to state 643



state 507

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 368)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 369)
    option_struct_member_exp  ->  IMPLY . function   (rule 371)

    OPEN_PAR	shift, and go to state 363
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 644
    array	go to state 645
    identifier	go to state 646



state 508

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 352)

    $default	reduce using rule 352 (struct_member_exp)



state 509

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 349)

    $default	reduce using rule 349 (struct_member_exp)



state 510

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 511

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 359)

    $default	reduce using rule 359 (struct_member_exp)



state 512

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 355)

    $default	reduce using rule 355 (struct_member_exp)



state 513

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 353)

    $default	reduce using rule 353 (struct_member_exp)



state 514

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 350)

    $default	reduce using rule 350 (struct_member_exp)



state 515

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 363)

    $default	reduce using rule 363 (struct_member_exp)



state 516

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 357)

    $default	reduce using rule 357 (struct_member_exp)



state 517

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 351)

    $default	reduce using rule 351 (struct_member_exp)



state 518

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 348)

    $default	reduce using rule 348 (struct_member_exp)



state 519

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 358)

    $default	reduce using rule 358 (struct_member_exp)



state 520

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 354)

    $default	reduce using rule 354 (struct_member_exp)



state 521

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 522

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 647



state 523

    ari_exp  ->  IF ari_exp THEN ari_exp . option_exp_else_statement   (rule 161)

    ELSE	shift, and go to state 648

    ELSE	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    option_exp_else_statement	go to state 649



state 524

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 650
    MUL 	shift, and go to state 651



state 525

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



state 526

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . arith_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    ADD 	[reduce using rule 162 (type_cast_alg_exp)]
    SUB 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    arith_operator	go to state 249



state 527

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 653
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 528

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 654



state 529

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 530

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 655
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 531

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 656



state 532

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 657
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 533

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 658



state 534

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 535

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 659
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 536

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 660



state 537

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 661
    MUL 	shift, and go to state 528



state 538

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 662
    MUL 	shift, and go to state 531



state 539

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 663
    MUL 	shift, and go to state 536



state 540

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 542
    MUL 	shift, and go to state 664



state 541

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 544
    MUL 	shift, and go to state 665



state 542

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 219)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 666
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 543

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 667
    MUL 	shift, and go to state 668



state 544

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 220)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 669
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 545

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 670
    MUL 	shift, and go to state 671



state 546

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 672
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 547

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 673
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 548

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 674
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 549

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 675



state 550

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 327)

    CASE	shift, and go to state 676
    DEFAULT	shift, and go to state 677

    case_par	go to state 678



state 551

    option_else_statement  ->  ELSE . statement_bpar   (rule 334)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 679



state 552

    if_statement  ->  IF ari_exp THEN statement_bpar option_else_statement .   (rule 333)

    $default	reduce using rule 333 (if_statement)



state 553

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 270)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 680



state 554

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 255)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 256)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 262)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 263)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 681
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 682
    identifier	go to state 683



state 555

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 261)

    $default	reduce using rule 261 (option_function_parameter_list)



state 556

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 254)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 257)

    ARRAY	shift, and go to state 684
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 685



state 557

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 251)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 252)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 259)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 260)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 686
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 687
    identifier	go to state 688



state 558

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 258)

    $default	reduce using rule 258 (option_function_parameter_list)



state 559

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 250)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 253)

    ARRAY	shift, and go to state 689
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 690



state 560

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 691
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 692
    identifier	go to state 693



state 561

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 249)

    $default	reduce using rule 249 (option_function_parameter_list)



state 562

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 248)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 266)

    ARRAY	shift, and go to state 694
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 695



state 563

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 696



state 564

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 281)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 697



state 565

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 274)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 277)

    ARRAY	shift, and go to state 698
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 699



state 566

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 276)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 700



state 567

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 275)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 278)

    ARRAY	shift, and go to state 701
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 702



state 568

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 280)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 286)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 703
    identifier	go to state 704



state 569

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (inner_option_define_identifier)



state 570

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 272)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 279)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    ARRAY	shift, and go to state 705
    COMMA	shift, and go to state 265
    OPEN_MPAR	shift, and go to state 706

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 707



state 571

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 63)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 708
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 572

    option_frame_identifier  ->  COMMA error .   (rule 309)

    $default	reduce using rule 309 (option_frame_identifier)



state 573

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 307)

    COMMA	shift, and go to state 425

    $default	reduce using rule 308 (option_frame_identifier)

    option_frame_identifier	go to state 709



state 574

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 710



state 575

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 235)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 650
    MUL 	shift, and go to state 711
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 350
    identifier	go to state 184



state 576

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 712



state 577

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 713



state 578

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 389
    MUL 	shift, and go to state 714



state 579

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)

    INTDECLARATION	shift, and go to state 540
    CHARDECLARATION	shift, and go to state 715



state 580

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 675
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 350
    identifier	go to state 184



state 581

    for_sta_condition  ->  ari_exp .   (rule 323)

    $default	reduce using rule 323 (for_sta_condition)



state 582

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 319)

    COMMA	shift, and go to state 716



state 583

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 318)

    $default	reduce using rule 318 (for_statement)



state 584

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 297)

    $default	reduce using rule 297 (statement_bpar)



state 585

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 717



state 586

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 135)

    $default	reduce using rule 135 (ass_right)



state 587

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 198)

    $default	reduce using rule 198 (array_exp)



state 588

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    OPEN_PAR	shift, and go to state 718



state 589

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 391
    CHARDECLARATION	shift, and go to state 392
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 589
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 394
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 590
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 590

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 198)

    CLOSE_PAR	shift, and go to state 587
    CON 	shift, and go to state 452



state 591

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 204)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 205)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 206)
    inner_option_list_value  ->  COMMA . error   (rule 208)

    error	shift, and go to state 719
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 442
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 720
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    array_exp	go to state 721
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 722
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 592

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 202)

    CLOSE_BPAR	shift, and go to state 723



state 593

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 203)

    CLOSE_BPAR	shift, and go to state 724



state 594

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 199)

    CLOSE_MPAR	shift, and go to state 725



state 595

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 201)

    CLOSE_MPAR	shift, and go to state 726



state 596

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 200)

    CLOSE_MPAR	shift, and go to state 727



state 597

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 728
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 598

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 137)

    CLOSE_PAR	shift, and go to state 729



state 599

    option_output  ->  COMMA ass_right . option_output   (rule 339)

    COMMA	shift, and go to state 449

    $default	reduce using rule 338 (option_output)

    option_output	go to state 730



state 600

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 337)

    $default	reduce using rule 337 (output_statement)



state 601

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291

    array_exp	go to state 590
    option_list_value	go to state 297
    option_struct_list_value	go to state 298



state 602

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    array_exp  ->  array_exp CON array_exp .   (rule 195)


    $default	reduce using rule 195 (array_exp)



state 603

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 731
    INTLITERAL	shift, and go to state 732



state 604

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 733
    INTLITERAL	shift, and go to state 734



state 605

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    INTLITERAL	shift, and go to state 735



state 606

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 736



state 607

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 737



state 608

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 738



state 609

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 84)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 739



state 610

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 316)

    $default	reduce using rule 316 (imply_pre)



state 611

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 740



state 612

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 360)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 741



state 613

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 356)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 742



state 614

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 743
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 615

    option_projection  ->  COMMA statement option_projection .   (rule 311)

    $default	reduce using rule 311 (option_projection)



state 616

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 617

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 744



state 618

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 745



state 619

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)



state 620

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 607



state 621

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 746
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 622

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 153)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 747
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 623

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 453



state 624

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 454



state 625

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    MUL 	shift, and go to state 455



state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CHARDECLARATION	shift, and go to state 748



state 627

    option_input  ->  COMMA array . option_input   (rule 347)

    COMMA	shift, and go to state 483

    $default	reduce using rule 345 (option_input)

    option_input	go to state 749



state 628

    option_input  ->  COMMA identifier . option_input   (rule 346)

    COMMA	shift, and go to state 483

    $default	reduce using rule 345 (option_input)

    option_input	go to state 750



state 629

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 343)

    $default	reduce using rule 343 (input_statement)



state 630

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 341)

    $default	reduce using rule 341 (input_statement)



state 631

    inner_option_function_identifier  ->  COMMA error .   (rule 296)

    $default	reduce using rule 296 (inner_option_function_identifier)



state 632

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 294)

    COMMA	shift, and go to state 493

    $default	reduce using rule 295 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 751



state 633

    option_ari_exp  ->  COMMA error .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 634

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 146)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 752



state 635

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    $default	reduce using rule 138 (array)



state 636

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 97)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    COMMA	shift, and go to state 353
    CON 	shift, and go to state 452

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 753



state 637

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 353

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 754



state 638

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    CLOSE_MPAR	shift, and go to state 755



state 639

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 640

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 66)

    $default	reduce using rule 66 (option_struct_declaration)



state 641

    option_struct_member_exp  ->  DOT function .   (rule 370)

    $default	reduce using rule 370 (option_struct_member_exp)



state 642

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 506
    OPEN_PAR	shift, and go to state 195
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 756



state 643

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 757



state 644

    option_struct_member_exp  ->  IMPLY function .   (rule 371)

    $default	reduce using rule 371 (option_struct_member_exp)



state 645

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 506
    OPEN_PAR	shift, and go to state 195
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 758



state 646

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 506
    IMPLY	shift, and go to state 507

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 759



state 647

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 760



state 648

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 163)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 761
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 649

    ari_exp  ->  IF ari_exp THEN ari_exp option_exp_else_statement .   (rule 161)

    $default	reduce using rule 161 (ari_exp)



state 650

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 762
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 651

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 763



state 652

    casted_element  ->  type_cast_alg_exp .   (rule 237)

    $default	reduce using rule 237 (casted_element)



state 653

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 654

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 764
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 655

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 656

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 765
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 657

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 658

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 766
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 659

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 660

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 767
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 661

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 653
    identifier	go to state 768
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 662

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 655
    identifier	go to state 769
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 663

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 659
    identifier	go to state 770
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 664

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 771
    MUL 	shift, and go to state 668



state 665

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 772
    MUL 	shift, and go to state 671



state 666

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 667

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 773
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 668

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 774



state 669

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 670

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 775
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 671

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 776



state 672

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 673

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 674

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 675

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 777
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 676

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 328)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    member_in_exp	go to state 778
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 677

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 329)

    COLON	shift, and go to state 779



state 678

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 327)

    CLOSE_BPAR	shift, and go to state 780



state 679

    option_else_statement  ->  ELSE statement_bpar .   (rule 334)

    $default	reduce using rule 334 (option_else_statement)



state 680

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 270)

    CLOSE_PAR	shift, and go to state 781



state 681

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 256)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 263)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 782
    identifier	go to state 783



state 682

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 262)

    $default	reduce using rule 262 (option_function_parameter_list)



state 683

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 255)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 784



state 684

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 257)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 785



state 685

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 254)

    $default	reduce using rule 254 (option_function_parameter_list)



state 686

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 252)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 260)

    COMMA	shift, and go to state 265
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 786
    identifier	go to state 787



state 687

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 259)

    $default	reduce using rule 259 (option_function_parameter_list)



state 688

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 251)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 788



state 689

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 253)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 789



state 690

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 250)

    $default	reduce using rule 250 (option_function_parameter_list)



state 691

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 269)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 790



state 692

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 693

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 267)

    ARRAY	shift, and go to state 791
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 792



state 694

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 265
    OPEN_MPAR	shift, and go to state 793

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 794



state 695

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 248)

    $default	reduce using rule 248 (option_function_parameter_list)



state 696

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 795



state 697

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 281)

    CLOSE_PAR	shift, and go to state 796



state 698

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 797



state 699

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (inner_option_define_identifier)



state 700

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 798



state 701

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 799



state 702

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (inner_option_define_identifier)



state 703

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (inner_option_define_identifier)



state 704

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 280)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 286)

    ARRAY	shift, and go to state 800
    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 801



state 705

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 279)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 265
    OPEN_MPAR	shift, and go to state 802

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 803



state 706

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 804
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 707

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (inner_option_define_identifier)



state 708

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 63)

    CLOSE_BPAR	shift, and go to state 805
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 709

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 307)

    $default	reduce using rule 307 (option_frame_identifier)



state 710

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 806



state 711

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 235)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 763
    MUL 	shift, and go to state 181
    ID  	shift, and go to state 182

    option_identifier_array_declaration	go to state 350
    identifier	go to state 184



state 712

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 807
    MUL 	shift, and go to state 528



state 713

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 808
    MUL 	shift, and go to state 531



state 714

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 809
    MUL 	shift, and go to state 536



state 715

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 544
    MUL 	shift, and go to state 810



state 716

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 319)

    OPEN_PAR	shift, and go to state 335
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 171
    ID  	shift, and go to state 166

    $default	reduce using rule 326 (for_sta_control)

    ass_statement	go to state 811
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 173
    point_exp	go to state 71
    identifier	go to state 72
    for_sta_control	go to state 812
    struct_member_exp	go to state 80



state 717

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . ari_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 813
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 718

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44

    type_define	go to state 814



state 719

    inner_option_list_value  ->  COMMA error .   (rule 208)

    $default	reduce using rule 208 (inner_option_list_value)



state 720

    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 204)

    COMMA	shift, and go to state 591

    $default	reduce using rule 207 (inner_option_list_value)

    inner_option_list_value	go to state 815



state 721

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 206)

    COMMA	shift, and go to state 591
    CON 	shift, and go to state 452

    $default	reduce using rule 207 (inner_option_list_value)

    inner_option_list_value	go to state 816



state 722

    member_in_exp  ->  strliteral .   (rule 170)
    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 205)

    COMMA	shift, and go to state 591

    COMMA	[reduce using rule 170 (member_in_exp)]
    CLOSE_BPAR	reduce using rule 170 (member_in_exp)
    CLOSE_BPAR	[reduce using rule 207 (inner_option_list_value)]
    CLOSE_MPAR	reduce using rule 170 (member_in_exp)
    CLOSE_MPAR	[reduce using rule 207 (inner_option_list_value)]
    $default	reduce using rule 170 (member_in_exp)

    inner_option_list_value	go to state 817



state 723

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 202)

    $default	reduce using rule 202 (option_struct_list_value)



state 724

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 203)

    $default	reduce using rule 203 (option_struct_list_value)



state 725

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 199)

    $default	reduce using rule 199 (option_list_value)



state 726

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 201)

    $default	reduce using rule 201 (option_list_value)



state 727

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 200)

    $default	reduce using rule 200 (option_list_value)



state 728

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 576
    CHARDECLARATION	shift, and go to state 577
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 578
    OPEN_PAR	shift, and go to state 211
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 579
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 729

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 137)

    $default	reduce using rule 137 (rightaddrshift)



state 730

    option_output  ->  COMMA ass_right option_output .   (rule 339)

    $default	reduce using rule 339 (option_output)



state 731

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 818



state 732

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 819



state 733

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 820



state 734

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    CLOSE_PAR	shift, and go to state 821



state 735

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 822



state 736

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 823
    INTLITERAL	shift, and go to state 824



state 737

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 825



state 738

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 826



state 739

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 827



state 740

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 828



state 741

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 360)

    $default	reduce using rule 360 (struct_member_exp)



state 742

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 356)

    $default	reduce using rule 356 (struct_member_exp)



state 743

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 829
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 744

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 745

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 59)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 830
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 746

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 831



state 747

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 748

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 606



state 749

    option_input  ->  COMMA array option_input .   (rule 347)

    $default	reduce using rule 347 (option_input)



state 750

    option_input  ->  COMMA identifier option_input .   (rule 346)

    $default	reduce using rule 346 (option_input)



state 751

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_function_identifier)



state 752

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 146)

    $default	reduce using rule 146 (option_ari_exp)



state 753

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 754

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 755

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 353
    ASS_P	shift, and go to state 832

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 833



state 756

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (option_struct_member_exp)



state 757

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (option_struct_member_exp)



state 758

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (option_struct_member_exp)



state 759

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (option_struct_member_exp)



state 760

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 834
    CHOP	shift, and go to state 121
    OR  	shift, and go to state 122
    AND 	shift, and go to state 123
    IFF 	shift, and go to state 124
    PROPIMPLY	shift, and go to state 125
    CHOPSTAR	shift, and go to state 126



state 761

    option_exp_else_statement  ->  ELSE ari_exp .   (rule 163)

    $default	reduce using rule 163 (option_exp_else_statement)



state 762

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 763

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 835
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 764

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 765

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 766

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 767

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 768

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 836
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 769

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 837
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 770

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 838
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 771

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 773
    identifier	go to state 839
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 772

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 775
    identifier	go to state 840
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 773

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 774

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 841
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 775

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 776

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 842
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 777

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 778

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 328)

    COLON	shift, and go to state 843



state 779

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 329)

    OPEN_PAR	shift, and go to state 844



state 780

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 327)

    $default	reduce using rule 327 (switch_statement)



state 781

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 270)

    OPEN_PAR	shift, and go to state 845



state 782

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 263)

    $default	reduce using rule 263 (option_function_parameter_list)



state 783

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 256)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 846



state 784

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 255)

    $default	reduce using rule 255 (option_function_parameter_list)



state 785

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 257)

    $default	reduce using rule 257 (option_function_parameter_list)



state 786

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 260)

    $default	reduce using rule 260 (option_function_parameter_list)



state 787

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 252)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 847



state 788

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 251)

    $default	reduce using rule 251 (option_function_parameter_list)



state 789

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 253)

    $default	reduce using rule 253 (option_function_parameter_list)



state 790

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 848



state 791

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 265)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 849



state 792

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 793

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 266)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 850
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 794

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 264)

    $default	reduce using rule 264 (option_function_parameter_list)



state 795

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 851
    empty_statement	go to state 852
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 796

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 281)

    OPEN_PAR	shift, and go to state 853



state 797

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (inner_option_define_identifier)



state 798

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (inner_option_define_identifier)



state 799

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (inner_option_define_identifier)



state 800

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 854



state 801

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (inner_option_define_identifier)



state 802

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 855
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 803

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (inner_option_define_identifier)



state 804

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 856
    CLOSE_MPAR	shift, and go to state 857



state 805

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 806

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 858
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 807

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 859
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 860
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 653
    identifier	go to state 768
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 808

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 861
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 862
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 655
    identifier	go to state 769
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 809

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 863
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 659
    identifier	go to state 770
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 810

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 864
    MUL 	shift, and go to state 671



state 811

    for_sta_control  ->  ass_statement .   (rule 325)

    $default	reduce using rule 325 (for_sta_control)



state 812

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 319)

    CLOSE_PAR	shift, and go to state 865



state 813

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp . CLOSE_PAR   (rule 44)

    CLOSE_PAR	shift, and go to state 866



state 814

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    CLOSE_PAR	shift, and go to state 867



state 815

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



state 816

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 206)

    $default	reduce using rule 206 (inner_option_list_value)



state 817

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 205)

    $default	reduce using rule 205 (inner_option_list_value)



state 818

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTDECLARATION	shift, and go to state 868
    CHARDECLARATION	shift, and go to state 869
    UNSIGNED	shift, and go to state 870



state 819

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 871



state 820

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTDECLARATION	shift, and go to state 872
    CHARDECLARATION	shift, and go to state 873
    UNSIGNED	shift, and go to state 874



state 821

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    OPEN_MPAR	shift, and go to state 875



state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 876



state 823

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 877



state 824

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 878



state 825

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 879



state 826

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    CLOSE_PAR	shift, and go to state 880

    CLOSE_PAR	[reduce using rule 138 (array)]
    $default	reduce using rule 138 (array)



state 827

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 828

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 829

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 830

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 881
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 831

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_MPAR	shift, and go to state 882



state 832

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291
    STRLITERAL	shift, and go to state 95

    array_exp	go to state 883
    option_list_value	go to state 297
    option_struct_list_value	go to state 298
    strliteral	go to state 884



state 833

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)



state 834

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 835

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 836

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 885



state 837

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 886



state 838

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 887



state 839

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 888
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 840

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 348)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 351)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 354)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 358)
    struct_member_exp  ->  identifier . DOT function   (rule 361)
    struct_member_exp  ->  identifier . IMPLY function   (rule 362)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 889
    IMPLY	shift, and go to state 200

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 841

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 842

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 843

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 328)

    OPEN_PAR	shift, and go to state 890



state 844

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 329)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 891
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 845

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 270)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 892



state 846

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 256)

    $default	reduce using rule 256 (option_function_parameter_list)



state 847

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 252)

    $default	reduce using rule 252 (option_function_parameter_list)



state 848

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 849

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 850

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 266)

    CLOSE_MPAR	shift, and go to state 893



state 851

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 67)

    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188

    $default	reduce using rule 67 (empty_statement)



state 852

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 894



state 853

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 281)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 895



state 854

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (inner_option_define_identifier)



state 855

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 285)

    CLOSE_MPAR	shift, and go to state 896



state 856

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 897
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 857

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 898



state 858

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 899
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 859

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 900
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 860

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 819

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 861

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 901
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 862

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 821

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 863

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 822

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 864

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 902
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 903
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 775
    identifier	go to state 840
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 865

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 319)

    error	shift, and go to state 285
    OPEN_BPAR	shift, and go to state 286

    statement_bpar	go to state 904



state 866

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 867

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    OPEN_PAR	shift, and go to state 905



state 868

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 906



state 869

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 907



state 870

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CHARDECLARATION	shift, and go to state 908



state 871

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 909
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 872

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 910



state 873

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    MUL 	shift, and go to state 911



state 874

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CHARDECLARATION	shift, and go to state 912



state 875

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 913
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 876

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 914
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 877

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTDECLARATION	shift, and go to state 915
    CHARDECLARATION	shift, and go to state 916
    UNSIGNED	shift, and go to state 917



state 878

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 918



state 879

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 880

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 919



state 881

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 882

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 880



state 883

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    COMMA	shift, and go to state 353
    CON 	shift, and go to state 452

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 920



state 884

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 353

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 921



state 885

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 922
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 886

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 923
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 887

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 924
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 888

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 925



state 889

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 926



state 890

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 328)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 927
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 891

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 329)

    CLOSE_PAR	shift, and go to state 928
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 892

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 270)

    CLOSE_PAR	shift, and go to state 929



state 893

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 930



state 894

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 895

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 281)

    CLOSE_PAR	shift, and go to state 931



state 896

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 932



state 897

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 284)

    CLOSE_MPAR	shift, and go to state 933



state 898

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (inner_option_define_identifier)



state 899

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 900

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 934
    CHARDECLARATION	shift, and go to state 935
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 211
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 936
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 901

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 937
    CHARDECLARATION	shift, and go to state 938
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 211
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 939
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 902

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 207
    CHARDECLARATION	shift, and go to state 208
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 210
    OPEN_PAR	shift, and go to state 940
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 212
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 903

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 878

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 904

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 319)

    $default	reduce using rule 319 (extend_for_statement)



state 905

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 134)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 941



state 906

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 942



state 907

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 943



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 944



state 909

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 945



state 910

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 946



state 911

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 947



state 912

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 948



state 913

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 117)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 949



state 914

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 950



state 915

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 951



state 916

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 952



state 917

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CHARDECLARATION	shift, and go to state 953



state 918

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 954
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 919

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 414
    UNSIGNED	shift, and go to state 328
    ID  	shift, and go to state 415
    STRUCT_TYPE	shift, and go to state 416

    $default	reduce using rule 271 (option_function_parameter_list)

    type_define	go to state 329
    sign_type_define	go to state 331
    all_type_define	go to state 417
    option_function_parameter_list	go to state 955



state 920

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 921

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 922

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 956



state 923

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 957



state 924

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 958



state 925

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 959
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 926

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 960
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 927

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 328)

    CLOSE_PAR	shift, and go to state 961
    CHOP	shift, and go to state 185
    OR  	shift, and go to state 186
    PARALLEL	shift, and go to state 187
    AND 	shift, and go to state 188



state 928

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 329)

    $default	reduce using rule 329 (case_par)



state 929

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 962



state 930

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 931

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 963



state 932

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (inner_option_define_identifier)



state 933

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 265

    $default	reduce using rule 282 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 964



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 965



state 935

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 966



state 936

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)

    INTDECLARATION	shift, and go to state 540
    CHARDECLARATION	shift, and go to state 967



state 937

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 968



state 938

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 969



state 939

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)

    INTDECLARATION	shift, and go to state 540
    CHARDECLARATION	shift, and go to state 970



state 940

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 184)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 213)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 302)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 356)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 360)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 364)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 206
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 971
    CHARDECLARATION	shift, and go to state 972
    VOIDDECLARATION	shift, and go to state 209
    FLOATDECLARATION	shift, and go to state 393
    OPEN_PAR	shift, and go to state 211
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 973
    SIGNED	shift, and go to state 213
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 214
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 215
    array_cast_exp	go to state 216
    point_exp	go to state 217
    ari_exp	go to state 218
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 219
    type_cast	go to state 107
    identifier	go to state 220
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 221



state 941

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 134)

    CLOSE_PAR	shift, and go to state 974



state 942

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 975



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 976



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 977



state 945

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 978



state 946

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 979



state 947

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    INTLITERAL	shift, and go to state 980



state 948

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 981



state 949

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 117)

    CLOSE_MPAR	shift, and go to state 982



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 983



state 951

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 984



state 952

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 985



state 953

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 986



state 954

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 987



state 955

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 988



state 956

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 989



state 957

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 990



state 958

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 991



state 959

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 992



state 960

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 993



state 961

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 328)

    CASE	shift, and go to state 676
    BREAK	shift, and go to state 994
    DEFAULT	shift, and go to state 677

    $default	reduce using rule 332 (init_case_par)

    case_par	go to state 995
    init_case_par	go to state 996



state 962

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 963

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (inner_option_define_identifier)



state 964

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (inner_option_define_identifier)



state 965

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 997
    MUL 	shift, and go to state 528



state 966

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 998
    MUL 	shift, and go to state 531



state 967

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 544
    MUL 	shift, and go to state 999



state 968

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1000
    MUL 	shift, and go to state 528



state 969

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1001
    MUL 	shift, and go to state 531



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 544
    MUL 	shift, and go to state 1002



state 971

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 384
    MUL 	shift, and go to state 1003



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 1004



state 973

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)

    INTDECLARATION	shift, and go to state 540
    CHARDECLARATION	shift, and go to state 1005



state 974

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 134)

    OPEN_PAR	shift, and go to state 1006
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 1007

    function	go to state 1008
    array	go to state 1009



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1010



state 976

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1011



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1012



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1013



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1014



state 981

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 1015



state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 117)

    $default	reduce using rule 117 (leftaddrshift)



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1016



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1017



state 986

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1018



state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 1019



state 988

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 87)

    ASS_P	shift, and go to state 1020

    $default	reduce using rule 86 (declaration)



state 989

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array_cast_exp)



state 990

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array_cast_exp)



state 991

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array_cast_exp)



state 992

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1021



state 993

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1022



state 994

    init_case_par  ->  BREAK . case_par   (rule 330)

    CASE	shift, and go to state 676
    DEFAULT	shift, and go to state 677

    case_par	go to state 1023



state 995

    init_case_par  ->  case_par .   (rule 331)

    $default	reduce using rule 331 (init_case_par)



state 996

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 328)

    $default	reduce using rule 328 (case_par)



state 997

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1024
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 653
    identifier	go to state 768
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1025
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 655
    identifier	go to state 769
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 999

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 1026
    MUL 	shift, and go to state 671



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1027
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 653
    identifier	go to state 768
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1028
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 655
    identifier	go to state 769
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 1029
    MUL 	shift, and go to state 671



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1030
    MUL 	shift, and go to state 528



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1031
    MUL 	shift, and go to state 531



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 544
    MUL 	shift, and go to state 1032



state 1006

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 1006
    ID  	shift, and go to state 1033

    array	go to state 505



state 1007

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_PAR	shift, and go to state 179
    OPEN_MPAR	shift, and go to state 180



state 1008

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 134)

    $default	reduce using rule 134 (ass_right)



state 1009

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 195



state 1010

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1034



state 1011

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1035



state 1012

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1036



state 1013

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1037



state 1014

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1038



state 1015

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1039



state 1016

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1040



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1041



state 1018

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1042



state 1019

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)



state 1020

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 290
    OPEN_MPAR	shift, and go to state 291

    array_exp	go to state 1043
    option_list_value	go to state 297
    option_struct_list_value	go to state 298



state 1021

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array_cast_exp)



state 1022

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array_cast_exp)



state 1023

    init_case_par  ->  BREAK case_par .   (rule 330)

    $default	reduce using rule 330 (init_case_par)



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1010

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1011

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1044
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 775
    identifier	go to state 840
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1013

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1014

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1045
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 775
    identifier	go to state 840
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1030

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1046
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 653
    identifier	go to state 768
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1031

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1047
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 655
    identifier	go to state 769
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 1048
    MUL 	shift, and go to state 671



state 1033

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_MPAR	shift, and go to state 180



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1049



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1050



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1051



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1052



state 1038

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 1053



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1054



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1055



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1056



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1057



state 1043

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 87)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    CON 	shift, and go to state 452

    $default	reduce using rule 87 (declaration)



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1036

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1039

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1040

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1041

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1048

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1058
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 526
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    casted_element	go to state 775
    identifier	go to state 840
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1059
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1050

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1060
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1051

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1061



state 1052

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1062
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1063
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1064



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1065



state 1056

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1066



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1067



state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 304)

    CLOSE_PAR	shift, and go to state 1057

    CLOSE_PAR	[reduce using rule 304 (intliteral)]
    $default	reduce using rule 304 (intliteral)



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1068



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1069



state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1070
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1071



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1072



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1073
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1074
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1075
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1076



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1077



state 1069

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1078



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1079



state 1071

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1080



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1081



state 1073

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1082



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1083



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1084



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1085
    simple_ari_exp	go to state 104
    member_in_exp	go to state 105
    address_exp	go to state 106
    type_cast	go to state 107
    identifier	go to state 108
    strliteral	go to state 109
    intliteral	go to state 110
    charliteral	go to state 111
    floatliteral	go to state 112
    struct_member_exp	go to state 113



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1086



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1087



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1088



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1089



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)

    COMMA	shift, and go to state 496

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1090



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1091



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1092

    $   	go to state 1093



state 1093

    $   	go to state 1094



state 1094

    $default	accept
