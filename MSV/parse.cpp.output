Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

<<<<<<< HEAD
#105   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#106   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	;
#108   inner_option_array_declaration :	 COMMA error;


Conflict in state 84 between rule 13 and token CHOP resolved as reduce.
Conflict in state 84 between rule 13 and token IFF resolved as reduce.
Conflict in state 84 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 84 between rule 13 and token OR resolved as reduce.
Conflict in state 84 between rule 13 and token AND resolved as reduce.
Conflict in state 84 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 85 between rule 22 and token CHOP resolved as reduce.
Conflict in state 85 between rule 22 and token IFF resolved as reduce.
Conflict in state 85 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 22 and token OR resolved as reduce.
Conflict in state 85 between rule 22 and token AND resolved as reduce.
Conflict in state 85 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 108 between rule 21 and token CHOP resolved as reduce.
Conflict in state 108 between rule 21 and token IFF resolved as reduce.
Conflict in state 108 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 108 between rule 21 and token OR resolved as reduce.
Conflict in state 108 between rule 21 and token AND resolved as reduce.
Conflict in state 108 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 10 and token CHOP resolved as reduce.
Conflict in state 109 between rule 10 and token IFF resolved as reduce.
Conflict in state 109 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 10 and token OR resolved as reduce.
Conflict in state 109 between rule 10 and token AND resolved as reduce.
Conflict in state 109 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 9 and token CHOP resolved as reduce.
Conflict in state 110 between rule 9 and token IFF resolved as reduce.
Conflict in state 110 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 9 and token OR resolved as reduce.
Conflict in state 110 between rule 9 and token AND resolved as reduce.
Conflict in state 110 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 20 and token CHOP resolved as reduce.
Conflict in state 111 between rule 20 and token IFF resolved as reduce.
Conflict in state 111 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 20 and token OR resolved as reduce.
Conflict in state 111 between rule 20 and token AND resolved as reduce.
Conflict in state 111 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 12 and token CHOP resolved as reduce.
Conflict in state 112 between rule 12 and token IFF resolved as reduce.
Conflict in state 112 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 12 and token OR resolved as reduce.
Conflict in state 112 between rule 12 and token AND resolved as reduce.
Conflict in state 112 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 11 and token CHOP resolved as reduce.
Conflict in state 113 between rule 11 and token IFF resolved as reduce.
Conflict in state 113 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 11 and token OR resolved as reduce.
Conflict in state 113 between rule 11 and token AND resolved as reduce.
Conflict in state 113 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 228 between rule 206 and token IMPLY resolved as reduce.
Conflict in state 231 between rule 205 and token IMPLY resolved as reduce.
Conflict in state 254 between rule 8 and token CHOP resolved as reduce.
Conflict in state 254 between rule 8 and token IFF resolved as shift.
Conflict in state 254 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 254 between rule 8 and token OR resolved as shift.
Conflict in state 254 between rule 8 and token AND resolved as shift.
Conflict in state 254 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 255 between rule 6 and token CHOP resolved as reduce.
Conflict in state 255 between rule 6 and token IFF resolved as reduce.
Conflict in state 255 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 255 between rule 6 and token OR resolved as shift.
Conflict in state 255 between rule 6 and token AND resolved as shift.
Conflict in state 255 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 256 between rule 7 and token CHOP resolved as reduce.
Conflict in state 256 between rule 7 and token IFF resolved as reduce.
Conflict in state 256 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 256 between rule 7 and token OR resolved as shift.
Conflict in state 256 between rule 7 and token AND resolved as shift.
Conflict in state 256 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 5 and token CHOP resolved as reduce.
Conflict in state 257 between rule 5 and token IFF resolved as reduce.
Conflict in state 257 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 5 and token OR resolved as reduce.
Conflict in state 257 between rule 5 and token AND resolved as shift.
Conflict in state 257 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 4 and token CHOP resolved as reduce.
Conflict in state 258 between rule 4 and token IFF resolved as reduce.
Conflict in state 258 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 4 and token OR resolved as reduce.
Conflict in state 258 between rule 4 and token AND resolved as reduce.
Conflict in state 258 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 265 between rule 235 and token OR resolved as reduce.
Conflict in state 265 between rule 235 and token AND resolved as reduce.
Conflict in state 324 between rule 328 and token OR resolved as reduce.
Conflict in state 324 between rule 328 and token AND resolved as reduce.
Conflict in state 375 between rule 32 and token CHOP resolved as reduce.
Conflict in state 375 between rule 32 and token OR resolved as shift.
Conflict in state 375 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 375 between rule 32 and token AND resolved as shift.
Conflict in state 376 between rule 31 and token CHOP resolved as reduce.
Conflict in state 376 between rule 31 and token OR resolved as reduce.
Conflict in state 376 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 376 between rule 31 and token AND resolved as shift.
Conflict in state 377 between rule 54 and token CHOP resolved as reduce.
Conflict in state 377 between rule 54 and token OR resolved as reduce.
Conflict in state 377 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 377 between rule 54 and token AND resolved as shift.
Conflict in state 378 between rule 30 and token CHOP resolved as reduce.
Conflict in state 378 between rule 30 and token OR resolved as reduce.
Conflict in state 378 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 378 between rule 30 and token AND resolved as reduce.
Conflict in state 442 between rule 237 and token OR resolved as reduce.
Conflict in state 442 between rule 237 and token AND resolved as shift.
Conflict in state 443 between rule 236 and token OR resolved as reduce.
Conflict in state 443 between rule 236 and token AND resolved as reduce.
Conflict in state 504 between rule 330 and token OR resolved as reduce.
Conflict in state 504 between rule 330 and token AND resolved as shift.
Conflict in state 505 between rule 329 and token OR resolved as reduce.
Conflict in state 505 between rule 329 and token AND resolved as reduce.
Conflict in state 651 between rule 190 and token CON resolved as reduce.
State 96 contains 2 shift/reduce conflicts.
=======
#106   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	;
#109   inner_option_array_declaration :	 COMMA error;


Conflict in state 85 between rule 13 and token CHOP resolved as reduce.
Conflict in state 85 between rule 13 and token IFF resolved as reduce.
Conflict in state 85 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 13 and token OR resolved as reduce.
Conflict in state 85 between rule 13 and token AND resolved as reduce.
Conflict in state 85 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 86 between rule 22 and token CHOP resolved as reduce.
Conflict in state 86 between rule 22 and token IFF resolved as reduce.
Conflict in state 86 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 22 and token OR resolved as reduce.
Conflict in state 86 between rule 22 and token AND resolved as reduce.
Conflict in state 86 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 21 and token CHOP resolved as reduce.
Conflict in state 109 between rule 21 and token IFF resolved as reduce.
Conflict in state 109 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 21 and token OR resolved as reduce.
Conflict in state 109 between rule 21 and token AND resolved as reduce.
Conflict in state 109 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 10 and token CHOP resolved as reduce.
Conflict in state 110 between rule 10 and token IFF resolved as reduce.
Conflict in state 110 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 10 and token OR resolved as reduce.
Conflict in state 110 between rule 10 and token AND resolved as reduce.
Conflict in state 110 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 9 and token CHOP resolved as reduce.
Conflict in state 111 between rule 9 and token IFF resolved as reduce.
Conflict in state 111 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 9 and token OR resolved as reduce.
Conflict in state 111 between rule 9 and token AND resolved as reduce.
Conflict in state 111 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 20 and token CHOP resolved as reduce.
Conflict in state 112 between rule 20 and token IFF resolved as reduce.
Conflict in state 112 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 20 and token OR resolved as reduce.
Conflict in state 112 between rule 20 and token AND resolved as reduce.
Conflict in state 112 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 12 and token CHOP resolved as reduce.
Conflict in state 113 between rule 12 and token IFF resolved as reduce.
Conflict in state 113 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 12 and token OR resolved as reduce.
Conflict in state 113 between rule 12 and token AND resolved as reduce.
Conflict in state 113 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 11 and token CHOP resolved as reduce.
Conflict in state 114 between rule 11 and token IFF resolved as reduce.
Conflict in state 114 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 11 and token OR resolved as reduce.
Conflict in state 114 between rule 11 and token AND resolved as reduce.
Conflict in state 114 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 230 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 233 between rule 206 and token IMPLY resolved as reduce.
Conflict in state 256 between rule 8 and token CHOP resolved as reduce.
Conflict in state 256 between rule 8 and token IFF resolved as shift.
Conflict in state 256 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 256 between rule 8 and token OR resolved as shift.
Conflict in state 256 between rule 8 and token AND resolved as shift.
Conflict in state 256 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 6 and token CHOP resolved as reduce.
Conflict in state 257 between rule 6 and token IFF resolved as reduce.
Conflict in state 257 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 6 and token OR resolved as shift.
Conflict in state 257 between rule 6 and token AND resolved as shift.
Conflict in state 257 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 7 and token CHOP resolved as reduce.
Conflict in state 258 between rule 7 and token IFF resolved as reduce.
Conflict in state 258 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 7 and token OR resolved as shift.
Conflict in state 258 between rule 7 and token AND resolved as shift.
Conflict in state 258 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 5 and token CHOP resolved as reduce.
Conflict in state 259 between rule 5 and token IFF resolved as reduce.
Conflict in state 259 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 5 and token OR resolved as reduce.
Conflict in state 259 between rule 5 and token AND resolved as shift.
Conflict in state 259 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 4 and token CHOP resolved as reduce.
Conflict in state 260 between rule 4 and token IFF resolved as reduce.
Conflict in state 260 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 4 and token OR resolved as reduce.
Conflict in state 260 between rule 4 and token AND resolved as reduce.
Conflict in state 260 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 267 between rule 236 and token OR resolved as reduce.
Conflict in state 267 between rule 236 and token AND resolved as reduce.
Conflict in state 326 between rule 328 and token OR resolved as reduce.
Conflict in state 326 between rule 328 and token AND resolved as reduce.
Conflict in state 377 between rule 32 and token CHOP resolved as reduce.
Conflict in state 377 between rule 32 and token OR resolved as shift.
Conflict in state 377 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 377 between rule 32 and token AND resolved as shift.
Conflict in state 378 between rule 31 and token CHOP resolved as reduce.
Conflict in state 378 between rule 31 and token OR resolved as reduce.
Conflict in state 378 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 378 between rule 31 and token AND resolved as shift.
Conflict in state 379 between rule 55 and token CHOP resolved as reduce.
Conflict in state 379 between rule 55 and token OR resolved as reduce.
Conflict in state 379 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 379 between rule 55 and token AND resolved as shift.
Conflict in state 380 between rule 30 and token CHOP resolved as reduce.
Conflict in state 380 between rule 30 and token OR resolved as reduce.
Conflict in state 380 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 30 and token AND resolved as reduce.
Conflict in state 444 between rule 238 and token OR resolved as reduce.
Conflict in state 444 between rule 238 and token AND resolved as shift.
Conflict in state 445 between rule 237 and token OR resolved as reduce.
Conflict in state 445 between rule 237 and token AND resolved as reduce.
Conflict in state 506 between rule 330 and token OR resolved as reduce.
Conflict in state 506 between rule 330 and token AND resolved as shift.
Conflict in state 507 between rule 329 and token OR resolved as reduce.
Conflict in state 507 between rule 329 and token AND resolved as reduce.
Conflict in state 653 between rule 191 and token CON resolved as reduce.
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
State 97 contains 2 shift/reduce conflicts.
State 99 contains 14 shift/reduce conflicts.
State 103 contains 2 shift/reduce conflicts.
State 122 contains 2 shift/reduce conflicts.
State 154 contains 3 reduce/reduce conflicts.
State 156 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 157 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 158 contains 1 shift/reduce conflict.
State 160 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 162 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 163 contains 1 shift/reduce conflict.
State 190 contains 1 shift/reduce conflict.
State 221 contains 1 shift/reduce conflict.
State 222 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 231 contains 1 shift/reduce conflict.
State 263 contains 1 shift/reduce conflict.
State 266 contains 2 shift/reduce conflicts.
State 267 contains 2 shift/reduce conflicts.
State 285 contains 1 shift/reduce conflict.
State 286 contains 1 shift/reduce conflict.
State 287 contains 1 shift/reduce conflict.
State 288 contains 1 shift/reduce conflict.
State 305 contains 1 shift/reduce conflict.
State 314 contains 1 shift/reduce conflict.
State 315 contains 1 shift/reduce conflict.
State 316 contains 1 shift/reduce conflict.
State 322 contains 1 shift/reduce conflict.
State 350 contains 1 shift/reduce conflict.
State 351 contains 1 shift/reduce conflict.
State 353 contains 1 shift/reduce conflict.
State 354 contains 1 shift/reduce conflict.
State 358 contains 1 shift/reduce conflict.
State 359 contains 1 shift/reduce conflict.
State 383 contains 2 shift/reduce conflicts.
State 384 contains 2 shift/reduce conflicts.
State 386 contains 2 shift/reduce conflicts.
State 387 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 397 contains 2 shift/reduce conflicts.
State 420 contains 1 shift/reduce conflict.
State 427 contains 8 shift/reduce conflicts.
State 429 contains 2 shift/reduce conflicts.
State 472 contains 1 shift/reduce conflict.
State 473 contains 1 shift/reduce conflict.
State 474 contains 1 shift/reduce conflict.
State 491 contains 1 shift/reduce conflict.
State 492 contains 1 shift/reduce conflict.
State 496 contains 1 shift/reduce conflict.
State 518 contains 1 shift/reduce conflict.
State 519 contains 1 shift/reduce conflict.
State 520 contains 1 shift/reduce conflict.
<<<<<<< HEAD
State 524 contains 1 shift/reduce conflict.
State 545 contains 1 shift/reduce conflict.
State 567 contains 3 shift/reduce conflicts.
State 570 contains 10 shift/reduce conflicts.
State 662 contains 2 shift/reduce conflicts.
State 663 contains 2 shift/reduce conflicts.
State 676 contains 1 shift/reduce conflict.
State 677 contains 1 shift/reduce conflict.
State 692 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 698 contains 2 shift/reduce conflicts.
State 699 contains 2 shift/reduce conflicts.
State 701 contains 2 shift/reduce conflicts.
State 702 contains 2 shift/reduce conflicts.
State 791 contains 1 shift/reduce conflict.
State 792 contains 1 shift/reduce conflict.
State 794 contains 1 shift/reduce conflict.
State 795 contains 1 shift/reduce conflict.
State 796 contains 1 shift/reduce conflict.
State 797 contains 1 shift/reduce conflict.
State 810 contains 2 shift/reduce conflicts.
=======
State 521 contains 1 shift/reduce conflict.
State 522 contains 1 shift/reduce conflict.
State 526 contains 1 shift/reduce conflict.
State 547 contains 1 shift/reduce conflict.
State 569 contains 3 shift/reduce conflicts.
State 572 contains 10 shift/reduce conflicts.
State 664 contains 2 shift/reduce conflicts.
State 665 contains 2 shift/reduce conflicts.
State 678 contains 1 shift/reduce conflict.
State 679 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 694 contains 1 shift/reduce conflict.
State 699 contains 2 shift/reduce conflicts.
State 700 contains 2 shift/reduce conflicts.
State 702 contains 2 shift/reduce conflicts.
State 703 contains 2 shift/reduce conflicts.
State 792 contains 1 shift/reduce conflict.
State 793 contains 1 shift/reduce conflict.
State 795 contains 1 shift/reduce conflict.
State 796 contains 1 shift/reduce conflict.
State 797 contains 1 shift/reduce conflict.
State 798 contains 1 shift/reduce conflict.
State 811 contains 2 shift/reduce conflicts.
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
State 824 contains 1 shift/reduce conflict.
State 830 contains 2 shift/reduce conflicts.
State 833 contains 8 shift/reduce conflicts.
State 892 contains 1 shift/reduce conflict.
State 894 contains 1 shift/reduce conflict.
State 895 contains 1 shift/reduce conflict.
State 897 contains 1 shift/reduce conflict.
<<<<<<< HEAD
State 966 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 967 contains 1 shift/reduce conflict.
State 968 contains 1 shift/reduce conflict.
State 1051 contains 1 shift/reduce conflict.
State 1052 contains 1 shift/reduce conflict.
State 1056 contains 1 shift/reduce conflict.
State 1057 contains 1 shift/reduce conflict.
State 1088 contains 1 shift/reduce conflict.
State 1091 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1094 contains 1 shift/reduce conflict.
State 1119 contains 1 shift/reduce conflict.
=======
State 965 contains 1 shift/reduce conflict.
State 966 contains 1 shift/reduce conflict.
State 1048 contains 1 shift/reduce conflict.
State 1049 contains 1 shift/reduce conflict.
State 1053 contains 1 shift/reduce conflict.
State 1054 contains 1 shift/reduce conflict.
State 1085 contains 1 shift/reduce conflict.
State 1088 contains 1 shift/reduce conflict.
State 1090 contains 1 shift/reduce conflict.
State 1091 contains 1 shift/reduce conflict.
State 1116 contains 1 shift/reduce conflict.
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
<<<<<<< HEAD
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function
rule 63   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 64   statement -> OPEN_PAR statement CLOSE_PAR
rule 65   option_struct_declaration -> sign_declaration
rule 66   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 67   empty_statement -> statement
rule 68   empty_statement ->		/* empty */
rule 69   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 70   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 73   struct_identifier -> STRUCT ID
rule 74   struct_identifier -> UNION ID
rule 75   sign_declaration -> SIGNED declaration
rule 76   sign_declaration -> UNSIGNED declaration
rule 77   sign_declaration -> declaration
rule 78   declaration -> type_define option_identifier_array_declaration
rule 79   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 80   declaration -> STRUCT ID option_identifier_array_declaration
rule 81   declaration -> UNION ID option_identifier_array_declaration
rule 82   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 83   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 85   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 88   type_define -> INTDECLARATION
rule 89   type_define -> FLOATDECLARATION
rule 90   type_define -> CHARDECLARATION
rule 91   type_define -> STRDECLARATION
rule 92   type_define -> VOIDDECLARATION
rule 93   type_define -> FILEDECLARATION
rule 94   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 95   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 102  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA error
rule 104  inner_option_identifier_array_declaration ->		/* empty */
rule 109  ass_statement -> ass_left assign_operator ass_right
rule 110  ass_left -> identifier
rule 111  ass_left -> struct_member_exp
rule 112  ass_left -> array
rule 113  ass_left -> point_exp
rule 114  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 115  ass_left -> NEXT ass_left
rule 116  ass_left -> leftaddrshift
rule 117  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  assign_operator -> ASS_P
rule 131  assign_operator -> ASS_N
rule 132  ass_right -> ari_exp
rule 133  ass_right -> array_exp
rule 134  ass_right -> strliteral
rule 135  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 136  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 137  ass_right -> rightaddrshift
rule 138  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 139  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR array CLOSE_PAR
rule 146  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 147  option_ari_exp -> COMMA error
rule 148  option_ari_exp ->		/* empty */
rule 149  point_exp -> MUL identifier
rule 150  point_exp -> MUL point_exp
rule 151  point_exp -> MUL array
rule 152  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 154  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 155  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 156  ari_exp -> simple_ari_exp
rule 157  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 158  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 159  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 160  type_cast_alg_exp -> simple_ari_exp
rule 161  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 162  option_exp_else_statement -> ELSE ari_exp
rule 163  option_exp_else_statement ->		/* empty */
rule 164  simple_ari_exp -> member_in_exp
rule 165  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 166  member_in_exp -> intliteral
rule 167  member_in_exp -> SUB member_in_exp
rule 168  member_in_exp -> BNE member_in_exp
rule 169  member_in_exp -> POINTERNULL
rule 170  member_in_exp -> floatliteral
rule 171  member_in_exp -> identifier
rule 172  member_in_exp -> array
rule 173  member_in_exp -> point_exp
rule 174  member_in_exp -> function
rule 175  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 176  member_in_exp -> charliteral
rule 177  member_in_exp -> address_exp
rule 178  member_in_exp -> type_cast
rule 179  member_in_exp -> struct_member_exp
rule 180  bi_operator -> MUL
rule 181  bi_operator -> DIV
rule 182  bi_operator -> MOD
rule 183  bi_operator -> LST
rule 184  bi_operator -> RST
rule 185  bi_operator -> ADDRESS
rule 186  bi_operator -> INTER_OR
rule 187  bi_operator -> CON
rule 188  ari_operator -> ADD
rule 189  ari_operator -> SUB
rule 190  array_exp -> array_exp CON array_exp
rule 191  array_exp -> option_list_value
rule 192  array_exp -> option_struct_list_value
rule 193  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 194  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 195  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 197  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 198  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 200  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 201  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 202  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 203  inner_option_list_value ->		/* empty */
rule 204  inner_option_list_value -> COMMA error
rule 205  address_exp -> ADDRESS identifier
rule 206  address_exp -> ADDRESS array
rule 207  address_exp -> ADDRESS struct_member_exp
rule 208  address_exp -> ADDRESS address_exp
rule 209  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 210  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 211  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 218  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  casted_element -> type_cast_alg_exp
rule 234  bool_exp -> prime_bool_exp
rule 235  bool_exp -> NEGATION bool_exp
rule 236  bool_exp -> bool_exp AND bool_exp
rule 237  bool_exp -> bool_exp OR bool_exp
rule 238  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 239  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 240  prime_bool_exp -> MY_TRUE
rule 241  prime_bool_exp -> MY_FALSE
rule 242  prime_bool_exp -> ari_exp
rule 243  prime_bool_exp -> ari_exp EQ strliteral
rule 244  prime_bool_exp -> ari_exp NE strliteral
rule 245  prime_bool_exp -> strliteral EQ ari_exp
rule 246  prime_bool_exp -> strliteral NE ari_exp
rule 247  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 248  prime_bool_exp -> ari_exp NE POINTERNULL
rule 249  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 250  prime_bool_exp -> POINTERNULL NE ari_exp
rule 251  prime_bool_exp -> ari_exp EQ charliteral
rule 252  prime_bool_exp -> ari_exp NE charliteral
rule 253  relation_operator -> GE
rule 254  relation_operator -> LE
rule 255  relation_operator -> NE
rule 256  relation_operator -> GT
rule 257  relation_operator -> LT
rule 258  relation_operator -> EQ
rule 259  sign_type_define -> UNSIGNED INTDECLARATION
rule 260  sign_type_define -> UNSIGNED CHARDECLARATION
rule 261  all_type_define -> sign_type_define
rule 262  all_type_define -> type_define
rule 263  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 264  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 265  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 269  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> ID inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 285  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 286  option_function_parameter_list ->		/* empty */
rule 287  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 288  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 289  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 297  inner_option_define_identifier ->		/* empty */
rule 298  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA error
rule 304  option_function_identifier -> ass_right inner_option_function_identifier
rule 305  option_function_identifier -> all_type_define
rule 306  option_function_identifier ->		/* empty */
rule 307  option_function_identifier -> ADDRESS error
rule 308  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 309  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
=======
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 61   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 62   statement -> struct_define_statement
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
rule 70   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 74   struct_identifier -> STRUCT ID
rule 75   struct_identifier -> UNION ID
rule 76   sign_declaration -> SIGNED declaration
rule 77   sign_declaration -> UNSIGNED declaration
rule 78   sign_declaration -> declaration
rule 79   declaration -> type_define option_identifier_array_declaration
rule 80   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 81   declaration -> STRUCT ID option_identifier_array_declaration
rule 82   declaration -> UNION ID option_identifier_array_declaration
rule 83   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 89   type_define -> INTDECLARATION
rule 90   type_define -> FLOATDECLARATION
rule 91   type_define -> CHARDECLARATION
rule 92   type_define -> STRDECLARATION
rule 93   type_define -> VOIDDECLARATION
rule 94   type_define -> FILEDECLARATION
rule 95   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA error
rule 105  inner_option_identifier_array_declaration ->		/* empty */
rule 110  ass_statement -> ass_left assign_operator ass_right
rule 111  ass_left -> identifier
rule 112  ass_left -> struct_member_exp
rule 113  ass_left -> array
rule 114  ass_left -> point_exp
rule 115  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 116  ass_left -> NEXT ass_left
rule 117  ass_left -> leftaddrshift
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  assign_operator -> ASS_P
rule 132  assign_operator -> ASS_N
rule 133  ass_right -> ari_exp
rule 134  ass_right -> array_exp
rule 135  ass_right -> strliteral
rule 136  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 137  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 138  ass_right -> rightaddrshift
rule 139  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 140  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR array CLOSE_PAR
rule 147  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 148  option_ari_exp -> COMMA error
rule 149  option_ari_exp ->		/* empty */
rule 150  point_exp -> MUL identifier
rule 151  point_exp -> MUL point_exp
rule 152  point_exp -> MUL array
rule 153  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 155  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 156  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 157  ari_exp -> simple_ari_exp
rule 158  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 159  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 160  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 161  type_cast_alg_exp -> simple_ari_exp
rule 162  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 163  option_exp_else_statement -> ELSE ari_exp
rule 164  option_exp_else_statement ->		/* empty */
rule 165  simple_ari_exp -> member_in_exp
rule 166  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 167  member_in_exp -> intliteral
rule 168  member_in_exp -> SUB member_in_exp
rule 169  member_in_exp -> BNE member_in_exp
rule 170  member_in_exp -> POINTERNULL
rule 171  member_in_exp -> floatliteral
rule 172  member_in_exp -> identifier
rule 173  member_in_exp -> array
rule 174  member_in_exp -> point_exp
rule 175  member_in_exp -> function
rule 176  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 177  member_in_exp -> charliteral
rule 178  member_in_exp -> address_exp
rule 179  member_in_exp -> type_cast
rule 180  member_in_exp -> struct_member_exp
rule 181  bi_operator -> MUL
rule 182  bi_operator -> DIV
rule 183  bi_operator -> MOD
rule 184  bi_operator -> LST
rule 185  bi_operator -> RST
rule 186  bi_operator -> ADDRESS
rule 187  bi_operator -> INTER_OR
rule 188  bi_operator -> CON
rule 189  ari_operator -> ADD
rule 190  ari_operator -> SUB
rule 191  array_exp -> array_exp CON array_exp
rule 192  array_exp -> option_list_value
rule 193  array_exp -> option_struct_list_value
rule 194  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 195  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 198  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 201  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 202  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 203  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 204  inner_option_list_value ->		/* empty */
rule 205  inner_option_list_value -> COMMA error
rule 206  address_exp -> ADDRESS identifier
rule 207  address_exp -> ADDRESS array
rule 208  address_exp -> ADDRESS struct_member_exp
rule 209  address_exp -> ADDRESS address_exp
rule 210  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 211  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  casted_element -> type_cast_alg_exp
rule 235  bool_exp -> prime_bool_exp
rule 236  bool_exp -> NEGATION bool_exp
rule 237  bool_exp -> bool_exp AND bool_exp
rule 238  bool_exp -> bool_exp OR bool_exp
rule 239  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 240  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 241  prime_bool_exp -> MY_TRUE
rule 242  prime_bool_exp -> MY_FALSE
rule 243  prime_bool_exp -> ari_exp
rule 244  prime_bool_exp -> ari_exp EQ strliteral
rule 245  prime_bool_exp -> ari_exp NE strliteral
rule 246  prime_bool_exp -> strliteral EQ ari_exp
rule 247  prime_bool_exp -> strliteral NE ari_exp
rule 248  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 249  prime_bool_exp -> ari_exp NE POINTERNULL
rule 250  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 251  prime_bool_exp -> POINTERNULL NE ari_exp
rule 252  prime_bool_exp -> ari_exp EQ charliteral
rule 253  prime_bool_exp -> ari_exp NE charliteral
rule 254  relation_operator -> GE
rule 255  relation_operator -> LE
rule 256  relation_operator -> NE
rule 257  relation_operator -> GT
rule 258  relation_operator -> LT
rule 259  relation_operator -> EQ
rule 260  sign_type_define -> UNSIGNED INTDECLARATION
rule 261  sign_type_define -> UNSIGNED CHARDECLARATION
rule 262  all_type_define -> sign_type_define
rule 263  all_type_define -> type_define
rule 264  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 265  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 270  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> ID inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 286  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 287  option_function_parameter_list ->		/* empty */
rule 288  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 289  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 298  inner_option_define_identifier ->		/* empty */
rule 299  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA error
rule 305  option_function_identifier -> ass_right inner_option_function_identifier
rule 306  option_function_identifier -> all_type_define
rule 307  option_function_identifier ->		/* empty */
rule 308  option_function_identifier -> ADDRESS error
rule 309  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
rule 310  inner_option_function_identifier ->		/* empty */
rule 311  inner_option_function_identifier -> COMMA error
rule 312  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 313  statement_bpar -> error CLOSE_BPAR
rule 314  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 315  bool_par -> error CLOSE_PAR
rule 316  identifier -> ID
rule 317  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 318  strliteral -> STRLITERAL
rule 319  intliteral -> INTLITERAL
rule 320  charliteral -> CHARLITERAL
rule 321  floatliteral -> FLOATLITERAL
rule 322  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 323  option_frame_identifier ->		/* empty */
rule 324  option_frame_identifier -> COMMA error
rule 325  option_projection ->		/* empty */
rule 326  option_projection -> COMMA statement option_projection
rule 327  imply_pre -> prime_bool_exp
rule 328  imply_pre -> NEGATION imply_pre
rule 329  imply_pre -> imply_pre AND imply_pre
rule 330  imply_pre -> imply_pre OR imply_pre
rule 331  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 332  while_statement -> WHILE bool_par statement_bpar
rule 333  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 334  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 335  for_sta_init -> ass_statement
rule 336  for_sta_init -> declaration
rule 337  for_sta_init ->		/* empty */
rule 338  for_sta_condition -> bool_exp
rule 339  for_sta_condition ->		/* empty */
rule 340  for_sta_control -> ass_statement
rule 341  for_sta_control ->		/* empty */
rule 342  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 343  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 344  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 345  init_case_par -> BREAK case_par
rule 346  init_case_par -> case_par
rule 347  init_case_par ->		/* empty */
rule 348  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 349  option_else_statement -> ELSE statement_bpar
rule 350  option_else_statement ->		/* empty */
rule 351  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 352  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 353  option_output ->		/* empty */
rule 354  option_output -> COMMA ass_right option_output
rule 355  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 356  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 357  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 360  option_input ->		/* empty */
rule 361  option_input -> COMMA identifier option_input
rule 362  option_input -> COMMA array option_input
rule 363  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 364  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 365  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 367  struct_member_exp -> array DOT array option_struct_member_exp
rule 368  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 369  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 370  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 371  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 374  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> identifier DOT function
rule 377  struct_member_exp -> identifier IMPLY function
rule 378  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 379  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 380  option_struct_member_exp ->		/* empty */
rule 381  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 382  option_struct_member_exp -> DOT array option_struct_member_exp
rule 383  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 384  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 385  option_struct_member_exp -> DOT function
rule 386  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
<<<<<<< HEAD
error (256) 103 108 147 204 303 307 311 313 315 324
=======
error (256) 104 109 148 205 304 308 311 313 315 324
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
SWITCH (258) 342
CASE (259) 343
BREAK (260) 345
DEFAULT (261) 344
<<<<<<< HEAD
IF (262) 159 348
ELSE (263) 162 349
EMPTY (264) 18 46
AWAIT (265) 43
PROJECTION (266) 23 57 58
PBEGIN (267) 2
PEND (268) 2
POINTERNULL (269) 169 247 248 249 250
ARRAY (270) 97 98 268 272 279 280 281 292 293 294 295 300
STRUCT (271) 73 80 82 229 231
DOT (272) 363 364 365 366 367 368 376 381 382 385
UNION (273) 74 81 83
FILEDECLARATION (274) 93
MORE (275) 19 47
DEFINE (276) 25 60
MY_TRUE (277) 15 240
MY_FALSE (278) 16 241
EXIST (279) 63
FRAME (280) 56
FOR (281) 333 334
WHILE (282) 332
DO (283) 333
TRUE (284) 51
FALSE (285) 52
REPEAT (286) 44
UNTIL (287) 44
DISPLAY (288) 351 352
SKIP (289) 14 45
THEN (290) 159 348
COMMA (291) 28 102 103 106 108 146 147 200 201 202 204 287 288 289
    290 291 292 293 294 295 296 298 299 300 301 302 303 308 309 311
    322 324 326 334 354 361 362
COLON (292) 25 63 343 344
INTDECLARATION (293) 88 119 123 126 127 128 129 140 141 210 213 215
    217 218 223 224 259
STRDECLARATION (294) 91
POINTERDECLARATION (295)
CHARDECLARATION (296) 90 117 118 121 122 123 124 125 126 127 128 143
    144 212 214 216 220 221 226 227 260
VOIDDECLARATION (297) 92 222 228
FLOATDECLARATION (298) 89 120 142 211 219 225
LISTDECLARATION (299)
OPEN_PAR (300) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84 85
    86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129 135
    136 138 140 141 142 143 144 145 152 153 154 155 175 193 209 210
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 238 285 296 309 314 317 331 334 342 343
    344 351 352 355 356 357 358 359 371 375 379
CLOSE_PAR (301) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84
    85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129
    135 136 138 140 141 142 143 144 145 152 153 154 155 175 193 209
    210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 238 285 296 309 314 315 317 331 334
    342 343 344 351 352 355 356 357 358 359 371 375 379
TIMES (302) 333
OPEN_BPAR (303) 23 44 57 58 59 60 63 72 197 198 199 312 342
CLOSE_BPAR (304) 23 44 57 58 59 60 63 72 197 198 199 312 313 342
OPEN_MPAR (305) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 140 141 142 143 144 152 194 195
    196 281 298 299 300
CLOSE_MPAR (306) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 140 141 142 143 144 152 194 195
    196 281 298 299 300
FUNCTION (307) 59
OVER (308)
CYLINDER (309)
OVEREP (310)
INTER_OR (311) 186
NON_DETERMINED (312)
SEND (313)
RECEIVE (314)
PROCESS (315)
CHANNEL (316)
PUT (317)
GET (318)
ERROR_TOKEN (319)
STRFUNCHEAD (320)
STRFUNCTAIL (321)
STRFUNCCAT (322)
STRFUNCCMP (323)
STRFUNCCPY (324)
STRFUNCLEN (325)
EXTERN (326) 70
UNSIGNED (327) 76 118 122 124 125 126 128 141 144 215 216 218 221 224
    227 259 260
SIGNED (328) 75 213 214
CHOP (329) 8 32
IMPLY (330) 55 369 370 371 372 373 374 375 377 378 383 384 386
IFF (331) 6
PROPIMPLY (332) 7
OR (333) 5 31 237 330
PARALLEL (334) 54
AND (335) 4 30 56 66 236 329
ASS_P (336) 60 87 96 97 98 99 100 130
ASS_N (337) 131
CON (338) 187 190
ADDRESS (339) 185 205 206 207 208 307
NE (340) 244 246 248 250 252 255
EQ (341) 243 245 247 249 251 258
GE (342) 253
LE (343) 254
GT (344) 256
LT (345) 257
LST (346) 183
RST (347) 184
ADD (348) 188
SUB (349) 167 189
MUL (350) 84 85 86 87 101 117 118 119 120 121 122 123 124 125 126 127
    128 129 138 140 141 142 143 144 149 150 151 153 154 180 217 218
    219 220 221 222 223 224 225 226 227 228 229 230 231 232 266 267
    270 271 274 275 277 278 280 282 283 284 285 291 295 296 301 302
DIV (351) 181
MOD (352) 182
BNE (353) 168
CHOPSTAR (354) 26
NEXT (355) 13 40 115
NEGATION (356) 22 235 328
LENGTH (357) 17 48
REQUEST (358) 355 356 357 358 359
FINAL (359) 21 53
KEEP (360) 10 41
ALWAYS (361) 9 42
HALT (362) 20
W_NEXT (363) 12
PREFIX (364)
SOMETIMES (365) 11
ID (366) 24 25 59 60 69 70 73 74 80 81 86 87 95 97 98 99 100 105 106
    139 140 141 142 143 144 269 270 271 272 276 277 278 289 292 309
    316
STRLITERAL (367) 318
STRUCT_TYPE (368) 79 82 83 229 230 231 232 265 266 267 268 273 274
    275 290 291 293
INTLITERAL (369) 117 118 119 120 121 122 123 124 125 126 127 128 129
    319
FLOATLITERAL (370) 321
CHARLITERAL (371) 320
=======
RETURN (262) 36
IF (263) 160 348
ELSE (264) 163 349
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 170 248 249 250 251
ARRAY (271) 98 99 269 273 280 281 282 293 294 295 296 301
STRUCT (272) 74 81 83 230 232
DOT (273) 363 364 365 366 367 368 376 381 382 385
UNION (274) 75 82 84
FILEDECLARATION (275) 94
MORE (276) 19 48
DEFINE (277) 25 61
MY_TRUE (278) 15 241
MY_FALSE (279) 16 242
EXIST (280) 64
FRAME (281) 57
FOR (282) 333 334
WHILE (283) 332
DO (284) 333
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 351 352
SKIP (290) 14 46
THEN (291) 160 348
COMMA (292) 28 103 104 107 109 147 148 201 202 203 205 288 289 290
    291 292 293 294 295 296 297 299 300 301 302 303 304 309 311 322
    324 326 334 354 361 362
COLON (293) 25 64 343 344
INTDECLARATION (294) 89 120 124 127 128 129 130 141 142 211 214 216
    218 219 224 225 260
STRDECLARATION (295) 92
POINTERDECLARATION (296)
CHARDECLARATION (297) 91 118 119 122 123 124 125 126 127 128 129 144
    145 213 215 217 221 222 227 228 261
VOIDDECLARATION (298) 93 223 229
FLOATDECLARATION (299) 90 121 143 212 220 226
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 61 65 70 71 72 85 86
    87 88 115 118 119 120 121 122 123 124 125 126 127 128 129 130 136
    137 139 141 142 143 144 145 146 153 154 155 156 176 194 210 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 239 286 297 314 317 331 334 342 343 344
    351 352 355 356 357 358 359 371 375 379
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 61 65 70 71 72 85
    86 87 88 115 118 119 120 121 122 123 124 125 126 127 128 129 130
    136 137 139 141 142 143 144 145 146 153 154 155 156 176 194 210
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 239 286 297 314 315 317 331 334 342
    343 344 351 352 355 356 357 358 359 371 375 379
TIMES (303) 333
OPEN_BPAR (304) 23 45 58 59 60 61 64 73 198 199 200 312 342
CLOSE_BPAR (305) 23 45 58 59 60 61 64 73 198 199 200 312 313 342
OPEN_MPAR (306) 56 87 88 96 100 101 106 107 118 119 120 121 122 123
    124 125 126 127 128 129 130 140 141 142 143 144 145 153 195 196
    197 282 299 300 301
CLOSE_MPAR (307) 56 87 88 96 100 101 106 107 118 119 120 121 122 123
    124 125 126 127 128 129 130 140 141 142 143 144 145 153 195 196
    197 282 299 300 301
FUNCTION (308) 60
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 187
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 71
UNSIGNED (328) 77 119 123 125 126 127 129 142 145 216 217 219 222 225
    228 260 261
SIGNED (329) 76 214 215
CHOP (330) 8 32
IMPLY (331) 56 369 370 371 372 373 374 375 377 378 383 384 386
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 238 330
PARALLEL (335) 55
AND (336) 4 30 57 67 237 329
ASS_P (337) 61 88 97 98 99 100 101 131
ASS_N (338) 132
CON (339) 188 191
ADDRESS (340) 186 206 207 208 209 308
NE (341) 245 247 249 251 253 256
EQ (342) 244 246 248 250 252 259
GE (343) 254
LE (344) 255
GT (345) 257
LT (346) 258
LST (347) 184
RST (348) 185
ADD (349) 189
SUB (350) 168 190
MUL (351) 85 86 87 88 102 118 119 120 121 122 123 124 125 126 127 128
    129 130 139 141 142 143 144 145 150 151 152 154 155 181 218 219
    220 221 222 223 224 225 226 227 228 229 230 231 232 233 267 268
    271 272 275 276 278 279 281 283 284 285 286 292 296 297 302 303
DIV (352) 182
MOD (353) 183
BNE (354) 169
CHOPSTAR (355) 26
NEXT (356) 13 41 116
NEGATION (357) 22 236 328
LENGTH (358) 17 49
REQUEST (359) 355 356 357 358 359
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 61 70 71 74 75 81 82 87 88 96 98 99 100 101 106
    107 140 141 142 143 144 145 270 271 272 273 277 278 279 290 293
    316
STRLITERAL (368) 318
STRUCT_TYPE (369) 80 83 84 230 231 232 233 266 267 268 269 274 275
    276 291 292 294
INTLITERAL (370) 118 119 120 121 122 123 124 125 126 127 128 129 130
    319
FLOATLITERAL (371) 321
CHARLITERAL (372) 320
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

Nonterminals, with rules where they appear

program (117)
    on left: 1
gComplexProposition (118)
    on left: 2 3, on right: 1
complexProposition (119)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (120)
    on left: 28 29, on right: 23 28
statement (121)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
<<<<<<< HEAD
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 59 63 64 67
    312 326 343 344
option_struct_declaration (122)
    on left: 65 66, on right: 66 72
empty_statement (123)
    on left: 67 68, on right: 60
function (124)
    on left: 69 70 71, on right: 62 135 174 376 377 385 386
struct_define_statement (125)
    on left: 72, on right: 61
struct_identifier (126)
    on left: 73 74, on right: 72
sign_declaration (127)
    on left: 75 76 77, on right: 34 65 66
declaration (128)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 75 76 77 336
type_define (129)
    on left: 88 89 90 91 92 93, on right: 78 135 262
option_identifier_array_declaration (130)
    on left: 94 95 96 97 98 99 100 101, on right: 78 79 80 81 82 83
    101 102
inner_option_identifier_array_declaration (131)
    on left: 102 103 104, on right: 94 95 96 97 98 99 100
ass_statement (132)
    on left: 109, on right: 33 335 340
ass_left (133)
    on left: 110 111 112 113 114 115 116, on right: 109 114 115
leftaddrshift (134)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129,
    on right: 116 138
assign_operator (135)
    on left: 130 131, on right: 109
ass_right (136)
    on left: 132 133 134 135 136 137, on right: 96 109 136 304 308
    351 352 354
rightaddrshift (137)
    on left: 138, on right: 137
array (138)
    on left: 139 140 141 142 143 144 145, on right: 71 112 145 151
    172 206 357 358 362 364 366 367 368 370 373 374 375 378 382 384
option_ari_exp (139)
    on left: 146 147 148, on right: 86 87 95 99 100 105 106 117 118
    119 120 121 122 123 124 125 126 127 128 129 139 140 141 142 143
    144 146 152
point_exp (140)
    on left: 149 150 151 152 153 154 155, on right: 113 150 152 155
    173 365 368 372 378
ari_exp (141)
    on left: 156 157 158 159, on right: 17 48 86 87 95 99 100 105 106
    117 118 119 120 121 122 123 124 125 126 127 128 129 132 139 140
    141 142 143 144 146 152 153 154 157 158 159 162 175 194 197 200
    239 242 243 244 245 246 247 248 249 250 251 252 281 298 299 300
    333
type_cast_alg_exp (142)
    on left: 160 161, on right: 210 211 212 213 214 215 216 233
option_exp_else_statement (143)
    on left: 162 163, on right: 159
simple_ari_exp (144)
    on left: 164 165, on right: 156 157 158 160 161 165
member_in_exp (145)
    on left: 166 167 168 169 170 171 172 173 174 175 176 177 178 179
   , on right: 164 165 167 168 342 343
bi_operator (146)
    on left: 180 181 182 183 184 185 186 187, on right: 165
ari_operator (147)
    on left: 188 189, on right: 158 161
array_exp (148)
    on left: 190 191 192 193, on right: 87 97 99 133 190 193 196 199
    202
option_list_value (149)
    on left: 194 195 196, on right: 191
option_struct_list_value (150)
    on left: 197 198 199, on right: 192
inner_option_list_value (151)
    on left: 200 201 202 203 204, on right: 194 195 196 197 198 199
    200 201 202
address_exp (152)
    on left: 205 206 207 208 209, on right: 177 208 209 371 375
type_cast (153)
    on left: 210 211 212 213 214 215 216 217 218 219 220 221 222 223
    224 225 226 227 228 229 230 231 232, on right: 178
casted_element (154)
    on left: 233, on right: 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232
bool_exp (155)
    on left: 234 235 236 237 238, on right: 43 44 159 235 236 237 238
    314 338 348
prime_bool_exp (156)
    on left: 239 240 241 242 243 244 245 246 247 248 249 250 251 252
   , on right: 25 234 327
relation_operator (157)
    on left: 253 254 255 256 257 258, on right: 157 239
sign_type_define (158)
    on left: 259 260, on right: 261
all_type_define (159)
    on left: 261 262, on right: 153 263 264 279 280 281 282 283 284
    287 288 294 295 298 299 300 301 302 305
option_function_parameter_list (160)
    on left: 263 264 265 266 267 268 269 270 271 272 273 274 275 276
    277 278 279 280 281 282 283 284 285 286, on right: 59 60 84 85
    86 87 135 285 296
inner_option_define_identifier (161)
    on left: 287 288 289 290 291 292 293 294 295 296 297 298 299 300
    301 302 303, on right: 63 263 264 265 266 267 268 269 270 271 272
    273 274 275 276 277 278 279 280 281 282 283 284 285 287 288 289
    290 291 292 293 294 295 296 298 299 300 301 302
option_function_identifier (162)
    on left: 304 305 306 307, on right: 69 70 71 309
inner_option_function_identifier (163)
    on left: 308 309 310 311, on right: 304 308 309
statement_bpar (164)
    on left: 312 313, on right: 57 58 332 333 334 348 349
bool_par (165)
    on left: 314 315, on right: 332
identifier (166)
    on left: 316 317, on right: 56 63 84 85 94 96 110 149 171 205 263
    265 266 267 268 269 270 271 272 279 280 281 282 284 285 287 289
    290 291 292 293 294 295 296 298 299 300 301 317 322 355 356 361
    363 364 365 366 369 370 371 372 373 376 377 381 383
strliteral (167)
    on left: 318, on right: 98 100 134 135 195 198 201 243 244 245
    246
intliteral (168)
    on left: 319, on right: 166
charliteral (169)
    on left: 320, on right: 176 251 252
floatliteral (170)
    on left: 321, on right: 170
option_frame_identifier (171)
    on left: 322 323 324, on right: 56 322
option_projection (172)
    on left: 325 326, on right: 57 326
imply_pre (173)
    on left: 327 328 329 330 331, on right: 55 328 329 330 331
while_statement (174)
    on left: 332, on right: 37
for_statement (175)
    on left: 333, on right: 38
extend_for_statement (176)
    on left: 334, on right: 39
for_sta_init (177)
    on left: 335 336 337, on right: 334
for_sta_condition (178)
    on left: 338 339, on right: 334
for_sta_control (179)
    on left: 340 341, on right: 334
switch_statement (180)
    on left: 342, on right: 35
case_par (181)
    on left: 343 344, on right: 342 345 346
init_case_par (182)
    on left: 345 346 347, on right: 343
if_statement (183)
    on left: 348, on right: 36
option_else_statement (184)
    on left: 349 350, on right: 348
output_statement (185)
    on left: 351 352, on right: 50
option_output (186)
    on left: 353 354, on right: 352 354
input_statement (187)
    on left: 355 356 357 358 359, on right: 49
option_input (188)
    on left: 360 361 362, on right: 356 358 361 362
struct_member_exp (189)
    on left: 363 364 365 366 367 368 369 370 371 372 373 374 375 376
    377 378 379, on right: 111 179 207 359 379
option_struct_member_exp (190)
=======
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 60 64 65 68
    312 326 343 344
option_struct_declaration (123)
    on left: 66 67, on right: 67 73
empty_statement (124)
    on left: 68 69, on right: 61
function (125)
    on left: 70 71 72, on right: 63 136 175 376 377 385 386
struct_define_statement (126)
    on left: 73, on right: 62
struct_identifier (127)
    on left: 74 75, on right: 73
sign_declaration (128)
    on left: 76 77 78, on right: 34 66 67
declaration (129)
    on left: 79 80 81 82 83 84 85 86 87 88, on right: 76 77 78 336
type_define (130)
    on left: 89 90 91 92 93 94, on right: 79 136 263
option_identifier_array_declaration (131)
    on left: 95 96 97 98 99 100 101 102, on right: 79 80 81 82 83 84
    102 103
inner_option_identifier_array_declaration (132)
    on left: 103 104 105, on right: 95 96 97 98 99 100 101
ass_statement (133)
    on left: 110, on right: 33 335 340
ass_left (134)
    on left: 111 112 113 114 115 116 117, on right: 110 115 116
leftaddrshift (135)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129 130,
    on right: 117 139
assign_operator (136)
    on left: 131 132, on right: 110
ass_right (137)
    on left: 133 134 135 136 137 138, on right: 97 110 137 305 309
    351 352 354
rightaddrshift (138)
    on left: 139, on right: 138
array (139)
    on left: 140 141 142 143 144 145 146, on right: 72 113 146 152
    173 207 357 358 362 364 366 367 368 370 373 374 375 378 382 384
option_ari_exp (140)
    on left: 147 148 149, on right: 87 88 96 100 101 106 107 118 119
    120 121 122 123 124 125 126 127 128 129 130 140 141 142 143 144
    145 147 153
point_exp (141)
    on left: 150 151 152 153 154 155 156, on right: 114 151 153 156
    174 365 368 372 378
ari_exp (142)
    on left: 157 158 159 160, on right: 17 49 87 88 96 100 101 106
    107 118 119 120 121 122 123 124 125 126 127 128 129 130 133 140
    141 142 143 144 145 147 153 154 155 158 159 160 163 176 195 198
    201 240 243 244 245 246 247 248 249 250 251 252 253 282 299 300
    301 333
type_cast_alg_exp (143)
    on left: 161 162, on right: 211 212 213 214 215 216 217 234
option_exp_else_statement (144)
    on left: 163 164, on right: 160
simple_ari_exp (145)
    on left: 165 166, on right: 157 158 159 161 162 166
member_in_exp (146)
    on left: 167 168 169 170 171 172 173 174 175 176 177 178 179 180
   , on right: 165 166 168 169 342 343
bi_operator (147)
    on left: 181 182 183 184 185 186 187 188, on right: 166
ari_operator (148)
    on left: 189 190, on right: 159 162
array_exp (149)
    on left: 191 192 193 194, on right: 88 98 100 134 191 194 197 200
    203
option_list_value (150)
    on left: 195 196 197, on right: 192
option_struct_list_value (151)
    on left: 198 199 200, on right: 193
inner_option_list_value (152)
    on left: 201 202 203 204 205, on right: 195 196 197 198 199 200
    201 202 203
address_exp (153)
    on left: 206 207 208 209 210, on right: 178 209 210 371 375
type_cast (154)
    on left: 211 212 213 214 215 216 217 218 219 220 221 222 223 224
    225 226 227 228 229 230 231 232 233, on right: 179
casted_element (155)
    on left: 234, on right: 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233
bool_exp (156)
    on left: 235 236 237 238 239, on right: 44 45 160 236 237 238 239
    314 338 348
prime_bool_exp (157)
    on left: 240 241 242 243 244 245 246 247 248 249 250 251 252 253
   , on right: 25 235 327
relation_operator (158)
    on left: 254 255 256 257 258 259, on right: 158 240
sign_type_define (159)
    on left: 260 261, on right: 262
all_type_define (160)
    on left: 262 263, on right: 154 264 265 280 281 282 283 284 285
    288 289 295 296 299 300 301 302 303 306
option_function_parameter_list (161)
    on left: 264 265 266 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287, on right: 60 61 85 86
    87 88 136 286 297
inner_option_define_identifier (162)
    on left: 288 289 290 291 292 293 294 295 296 297 298 299 300 301
    302 303 304, on right: 64 264 265 266 267 268 269 270 271 272 273
    274 275 276 277 278 279 280 281 282 283 284 285 286 288 289 290
    291 292 293 294 295 296 297 299 300 301 302 303
option_function_identifier (163)
    on left: 305 306 307 308, on right: 70 71 72
inner_option_function_identifier (164)
    on left: 309 310 311, on right: 305 309
statement_bpar (165)
    on left: 312 313, on right: 58 59 332 333 334 348 349
bool_par (166)
    on left: 314 315, on right: 332
identifier (167)
    on left: 316 317, on right: 57 64 85 86 95 97 111 150 172 206 264
    266 267 268 269 270 271 272 273 280 281 282 283 285 286 288 290
    291 292 293 294 295 296 297 299 300 301 302 317 322 355 356 361
    363 364 365 366 369 370 371 372 373 376 377 381 383
strliteral (168)
    on left: 318, on right: 99 101 135 136 196 199 202 244 245 246
    247
intliteral (169)
    on left: 319, on right: 167
charliteral (170)
    on left: 320, on right: 177 252 253
floatliteral (171)
    on left: 321, on right: 171
option_frame_identifier (172)
    on left: 322 323 324, on right: 57 322
option_projection (173)
    on left: 325 326, on right: 58 326
imply_pre (174)
    on left: 327 328 329 330 331, on right: 56 328 329 330 331
while_statement (175)
    on left: 332, on right: 38
for_statement (176)
    on left: 333, on right: 39
extend_for_statement (177)
    on left: 334, on right: 40
for_sta_init (178)
    on left: 335 336 337, on right: 334
for_sta_condition (179)
    on left: 338 339, on right: 334
for_sta_control (180)
    on left: 340 341, on right: 334
switch_statement (181)
    on left: 342, on right: 35
case_par (182)
    on left: 343 344, on right: 342 345 346
init_case_par (183)
    on left: 345 346 347, on right: 343
if_statement (184)
    on left: 348, on right: 37
option_else_statement (185)
    on left: 349 350, on right: 348
output_statement (186)
    on left: 351 352, on right: 51
option_output (187)
    on left: 353 354, on right: 352 354
input_statement (188)
    on left: 355 356 357 358 359, on right: 50
option_input (189)
    on left: 360 361 362, on right: 356 358 361 362
struct_member_exp (190)
    on left: 363 364 365 366 367 368 369 370 371 372 373 374 375 376
    377 378 379, on right: 112 180 208 359 379
option_struct_member_exp (191)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    on left: 380 381 382 383 384 385 386, on right: 363 364 365 366
    367 368 369 370 371 372 373 374 375 378 381 382 383 384


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

<<<<<<< HEAD
    program	go to state 1169
=======
    program	go to state 1166
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 60
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 81



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 82



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 98
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 108



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 114
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    OPEN_PAR	shift, and go to state 121



state 23

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 348)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 129
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 24

<<<<<<< HEAD
    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)
=======
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 348)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 131
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 25

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 132



state 26

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 133
    STRUCT_TYPE	shift, and go to state 134



state 27

    struct_identifier  ->  UNION . ID   (rule 74)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 136



state 28

    type_define  ->  FILEDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 29

    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)



state 30

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 137



state 31

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    identifier	go to state 140



state 32

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 141



state 33

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 333)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 142
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 143
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 34

<<<<<<< HEAD
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 332)
=======
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 333)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 144
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 145
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    error	shift, and go to state 144
    OPEN_PAR	shift, and go to state 145

    bool_par	go to state 146



<<<<<<< HEAD
state 35
=======
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 332)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 36

    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 147



state 38

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 352)

    OPEN_PAR	shift, and go to state 148



state 39

<<<<<<< HEAD
    statement  ->  SKIP .   (rule 45)
=======
    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 352)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 45 (statement)



state 40

    type_define  ->  INTDECLARATION .   (rule 88)

    $default	reduce using rule 88 (type_define)



state 41

    type_define  ->  STRDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 42

    type_define  ->  CHARDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 43

    type_define  ->  VOIDDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  FLOATDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)



state 45

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 149
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 150
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 151
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 152
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 153
    function	go to state 154
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 155
    leftaddrshift	go to state 69
    array	go to state 156
    point_exp	go to state 157
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 158
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 160
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 161
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 162



state 46

<<<<<<< HEAD
    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 163
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 47

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 164



state 48

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    ID  	shift, and go to state 165



state 49

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 169
    type_define	go to state 66



state 50

    sign_declaration  ->  SIGNED . declaration   (rule 75)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 170
    type_define	go to state 66



state 51

    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 171
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 173
    point_exp	go to state 174
    identifier	go to state 175



state 52

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 176
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 172

    ass_left	go to state 178
    leftaddrshift	go to state 69
    array	go to state 179
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 53

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 180



state 54

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 359)

    OPEN_PAR	shift, and go to state 181



state 55

<<<<<<< HEAD
    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)
=======
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 359)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 182



state 56

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 183



state 57

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 184



state 58

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 185
    OPEN_MPAR	shift, and go to state 186

    $default	reduce using rule 316 (identifier)



state 59

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

<<<<<<< HEAD
    option_identifier_array_declaration	go to state 189
    identifier	go to state 190
=======
    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 60

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194

    $default	reduce using rule 1 (program)



state 61

    statement  ->  function .   (rule 62)

    $default	reduce using rule 62 (statement)



state 62

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 63

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 195



state 64

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 65

    sign_declaration  ->  declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 66

    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 196
    identifier	go to state 190



state 67

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 68

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)

    ASS_P	shift, and go to state 197
    ASS_N	shift, and go to state 198

    assign_operator	go to state 199



state 69

    ass_left  ->  leftaddrshift .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 70

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    OPEN_PAR	shift, and go to state 201
    IMPLY	shift, and go to state 202

    $default	reduce using rule 112 (ass_left)



state 71

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 113)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 203
    IMPLY	shift, and go to state 204

    $default	reduce using rule 113 (ass_left)



state 72

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 110)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
=======
    ass_left  ->  point_exp .   (rule 114)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206

    $default	reduce using rule 110 (ass_left)



state 73

<<<<<<< HEAD
    statement  ->  while_statement .   (rule 37)
=======
    ass_left  ->  identifier .   (rule 111)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 37 (statement)



state 74

    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 77

    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 78

    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 79

    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 80

    ass_left  ->  struct_member_exp .   (rule 111)

    $default	reduce using rule 111 (ass_left)



state 81

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 207



state 82

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 208
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 209
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 210



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 86

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 159)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 211
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 87

    member_in_exp  ->  POINTERNULL .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 88

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 89

<<<<<<< HEAD
    address_exp  ->  ADDRESS . identifier   (rule 205)
    address_exp  ->  ADDRESS . array   (rule 206)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 207)
    address_exp  ->  ADDRESS . address_exp   (rule 208)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 227
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 228
    point_exp	go to state 229
    address_exp	go to state 230
    identifier	go to state 231
    struct_member_exp	go to state 232



state 90

    member_in_exp  ->  SUB . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 233
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 91

    member_in_exp  ->  BNE . member_in_exp   (rule 168)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 234
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 92

    intliteral  ->  INTLITERAL .   (rule 319)

    $default	reduce using rule 319 (intliteral)



state 93

<<<<<<< HEAD
    floatliteral  ->  FLOATLITERAL .   (rule 321)

    $default	reduce using rule 321 (floatliteral)
=======
    intliteral  ->  INTLITERAL .   (rule 319)

    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 94

<<<<<<< HEAD
    charliteral  ->  CHARLITERAL .   (rule 320)

    $default	reduce using rule 320 (charliteral)
=======
    floatliteral  ->  FLOATLITERAL .   (rule 321)

    $default	reduce using rule 321 (floatliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 95

<<<<<<< HEAD
    member_in_exp  ->  function .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)
=======
    charliteral  ->  CHARLITERAL .   (rule 320)

    $default	reduce using rule 320 (charliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 96

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    OPEN_PAR	shift, and go to state 201
    IMPLY	shift, and go to state 202

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 97

<<<<<<< HEAD
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 203
    IMPLY	shift, and go to state 204

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 98

<<<<<<< HEAD
    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 237



state 99

    ari_exp  ->  simple_ari_exp .   (rule 156)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 157)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 238
    CON 	shift, and go to state 239
    ADDRESS	shift, and go to state 240
    NE  	shift, and go to state 241
    EQ  	shift, and go to state 242
    GE  	shift, and go to state 243
    LE  	shift, and go to state 244
    GT  	shift, and go to state 245
    LT  	shift, and go to state 246
    LST 	shift, and go to state 247
    RST 	shift, and go to state 248
    MUL 	shift, and go to state 249
    DIV 	shift, and go to state 250
    MOD 	shift, and go to state 251

    INTER_OR	[reduce using rule 156 (ari_exp)]
    CON 	[reduce using rule 156 (ari_exp)]
    ADDRESS	[reduce using rule 156 (ari_exp)]
    NE  	[reduce using rule 156 (ari_exp)]
    EQ  	[reduce using rule 156 (ari_exp)]
    GE  	[reduce using rule 156 (ari_exp)]
    LE  	[reduce using rule 156 (ari_exp)]
    GT  	[reduce using rule 156 (ari_exp)]
    LT  	[reduce using rule 156 (ari_exp)]
    LST 	[reduce using rule 156 (ari_exp)]
    RST 	[reduce using rule 156 (ari_exp)]
    MUL 	[reduce using rule 156 (ari_exp)]
    DIV 	[reduce using rule 156 (ari_exp)]
    MOD 	[reduce using rule 156 (ari_exp)]
    $default	reduce using rule 156 (ari_exp)

    bi_operator	go to state 252
    relation_operator	go to state 253



state 100

    simple_ari_exp  ->  member_in_exp .   (rule 164)

    $default	reduce using rule 164 (simple_ari_exp)



state 101

    member_in_exp  ->  address_exp .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 102

    member_in_exp  ->  type_cast .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 103

    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206

    DOT 	[reduce using rule 171 (member_in_exp)]
    IMPLY	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 104

<<<<<<< HEAD
    member_in_exp  ->  intliteral .   (rule 166)
=======
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 166 (member_in_exp)



state 105

    member_in_exp  ->  charliteral .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 106

    member_in_exp  ->  floatliteral .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 107

    member_in_exp  ->  struct_member_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 108

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 114

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 115

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 254



state 116

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 255



state 117

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 256



state 118

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 257



state 119

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 258



state 120

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 121

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 259
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 122

<<<<<<< HEAD
    member_in_exp  ->  POINTERNULL .   (rule 169)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 249)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 250)

    NE  	shift, and go to state 260
    EQ  	shift, and go to state 261

    NE  	[reduce using rule 169 (member_in_exp)]
    EQ  	[reduce using rule 169 (member_in_exp)]
    $default	reduce using rule 169 (member_in_exp)
=======
    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 261
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 123

    prime_bool_exp  ->  MY_TRUE .   (rule 240)

    $default	reduce using rule 240 (prime_bool_exp)



state 124

    prime_bool_exp  ->  MY_FALSE .   (rule 241)

    $default	reduce using rule 241 (prime_bool_exp)



state 125

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 238)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 212
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 262
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 263
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    bool_exp	go to state 264
    prime_bool_exp	go to state 130
    identifier	go to state 225
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 126

    bool_exp  ->  NEGATION . bool_exp   (rule 235)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 265
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 127

<<<<<<< HEAD
    strliteral  ->  STRLITERAL .   (rule 318)

    $default	reduce using rule 318 (strliteral)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 132
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 128

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 239)
    prime_bool_exp  ->  ari_exp .   (rule 242)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 252)

    NE  	shift, and go to state 266
    EQ  	shift, and go to state 267
    GE  	shift, and go to state 243
    LE  	shift, and go to state 244
    GT  	shift, and go to state 245
    LT  	shift, and go to state 246
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 242 (prime_bool_exp)

    ari_operator	go to state 237
    relation_operator	go to state 268



state 129

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 348)

    THEN	shift, and go to state 269
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271
=======
    strliteral  ->  STRLITERAL .   (rule 318)

    $default	reduce using rule 318 (strliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 130

    bool_exp  ->  prime_bool_exp .   (rule 234)

    $default	reduce using rule 234 (bool_exp)



state 131

<<<<<<< HEAD
    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 245)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 246)
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 348)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    NE  	shift, and go to state 272
    EQ  	shift, and go to state 273



state 132

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 274
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 133

    struct_identifier  ->  STRUCT ID .   (rule 73)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    $default	reduce using rule 73 (struct_identifier)

    option_identifier_array_declaration	go to state 275
    identifier	go to state 190



state 134

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 276
    identifier	go to state 190



state 135

    struct_identifier  ->  UNION ID .   (rule 74)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 277
    identifier	go to state 190



state 136

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 278
    identifier	go to state 190



state 137

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 279



state 138

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    identifier	go to state 280



state 139

    identifier  ->  ID .   (rule 316)

    $default	reduce using rule 316 (identifier)



state 140

<<<<<<< HEAD
    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COMMA	shift, and go to state 281
=======
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 282



state 141

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139
=======
    identifier  ->  ID .   (rule 316)

    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    identifier	go to state 283



state 142

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 284
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 285
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 286
    VOIDDECLARATION	shift, and go to state 287
    FLOATDECLARATION	shift, and go to state 288
    OPEN_PAR	shift, and go to state 289
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 337 (for_sta_init)

    function	go to state 95
    declaration	go to state 291
    type_define	go to state 66
    ass_statement	go to state 292
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 156
    point_exp	go to state 157
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 160
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    for_sta_init	go to state 293
    struct_member_exp	go to state 162



state 143

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 333)

    TIMES	shift, and go to state 294
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ari_operator	go to state 237



state 144

<<<<<<< HEAD
    bool_par  ->  error . CLOSE_PAR   (rule 315)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 286
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 287
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 288
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 290
    OPEN_PAR	shift, and go to state 291
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 337 (for_sta_init)

    function	go to state 96
    declaration	go to state 293
    type_define	go to state 67
    ass_statement	go to state 294
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_init	go to state 295
    struct_member_exp	go to state 164

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 295


<<<<<<< HEAD
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 333)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 145

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 314)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 296
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 146

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par . statement_bpar   (rule 332)
=======
    bool_par  ->  error . CLOSE_PAR   (rule 315)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298

    statement_bpar	go to state 299



<<<<<<< HEAD
state 147
=======
    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 314)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 298
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 300
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80


<<<<<<< HEAD
=======
    while_statement  ->  WHILE bool_par . statement_bpar   (rule 332)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 148

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 352)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 305
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 149

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 159)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 348)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 312
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 150

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 149
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 313
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 314
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 315
    VOIDDECLARATION	shift, and go to state 287
    FLOATDECLARATION	shift, and go to state 316
    OPEN_PAR	shift, and go to state 150
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 317
    SIGNED	shift, and go to state 318
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 151
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 152
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 153
    function	go to state 154
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 155
    leftaddrshift	go to state 69
    array	go to state 156
    point_exp	go to state 157
    ari_exp	go to state 263
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 160
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 319
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 162
=======
    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 352)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 307
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 151

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)
=======
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 348)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 314
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 171
    MUL 	shift, and go to state 320
    ID  	shift, and go to state 321

    array	go to state 173
    point_exp	go to state 174
    identifier	go to state 322


<<<<<<< HEAD
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 152

    imply_pre  ->  NEGATION . imply_pre   (rule 328)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 323
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 152
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 324
    struct_member_exp	go to state 107



state 153

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 325
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 154

<<<<<<< HEAD
    statement  ->  function .   (rule 62)
    member_in_exp  ->  function .   (rule 174)

    CLOSE_PAR	reduce using rule 62 (statement)
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    CHOP	reduce using rule 62 (statement)
    OR  	reduce using rule 62 (statement)
    OR  	[reduce using rule 174 (member_in_exp)]
    PARALLEL	reduce using rule 62 (statement)
    AND 	reduce using rule 62 (statement)
    AND 	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)
=======
    imply_pre  ->  NEGATION . imply_pre   (rule 328)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 326
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 155

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 326
    ASS_P	shift, and go to state 197
    ASS_N	shift, and go to state 198

    assign_operator	go to state 199



state 156

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    OPEN_PAR	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 327
    IMPLY	shift, and go to state 202

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 172 (member_in_exp)



state 157

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 158

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 177)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)

=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    CLOSE_PAR	shift, and go to state 329

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 159

<<<<<<< HEAD
    imply_pre  ->  prime_bool_exp .   (rule 327)
=======
    ass_left  ->  point_exp .   (rule 114)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 327 (imply_pre)



state 160

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 110)
    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
=======
    member_in_exp  ->  address_exp .   (rule 178)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    ASS_P	reduce using rule 110 (ass_left)
    ASS_N	reduce using rule 110 (ass_left)
    $default	reduce using rule 171 (member_in_exp)



state 161

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)

    CLOSE_PAR	shift, and go to state 331
    OR  	shift, and go to state 332
    AND 	shift, and go to state 333
=======
    imply_pre  ->  prime_bool_exp .   (rule 327)

    $default	reduce using rule 327 (imply_pre)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 162

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 111)
    member_in_exp  ->  struct_member_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
=======
    ass_left  ->  identifier .   (rule 111)
    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 334

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 179 (member_in_exp)



state 163

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
=======
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	shift, and go to state 335
    CLOSE_BPAR	shift, and go to state 336
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194

    CLOSE_BPAR	[reduce using rule 325 (option_projection)]
    $default	reduce using rule 325 (option_projection)

    option_projection	go to state 337



<<<<<<< HEAD
state 164
=======
    ass_left  ->  struct_member_exp .   (rule 112)
    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 338



state 165

<<<<<<< HEAD
    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 337
    CLOSE_BPAR	shift, and go to state 338
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    CLOSE_BPAR	[reduce using rule 325 (option_projection)]
    $default	reduce using rule 325 (option_projection)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 339



state 166

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 340
    STRUCT_TYPE	shift, and go to state 134



state 167

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 341
    STRUCT_TYPE	shift, and go to state 136



state 168

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    MUL 	shift, and go to state 342



state 169

    sign_declaration  ->  UNSIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)



state 170

    sign_declaration  ->  SIGNED declaration .   (rule 75)

    $default	reduce using rule 75 (sign_declaration)



state 171

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 343
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    type_define	go to state 344
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 345
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 346
    all_type_define	go to state 347
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 172

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 186

    $default	reduce using rule 316 (identifier)



state 173

<<<<<<< HEAD
    point_exp  ->  MUL array .   (rule 151)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 346
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 347
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 349
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 151 (point_exp)



<<<<<<< HEAD
state 174
=======
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    point_exp  ->  MUL point_exp .   (rule 150)

<<<<<<< HEAD
    $default	reduce using rule 150 (point_exp)
=======
    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 175

    point_exp  ->  MUL identifier .   (rule 149)

    $default	reduce using rule 149 (point_exp)



state 176

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 348
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 349
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 155
    leftaddrshift	go to state 69
    array	go to state 350
    point_exp	go to state 351
    address_exp	go to state 352
    identifier	go to state 353
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 354



state 177

    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 355
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 172

    ass_left	go to state 178
    leftaddrshift	go to state 69
    array	go to state 179
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 178

<<<<<<< HEAD
    ass_left  ->  NEXT ass_left .   (rule 115)
=======
    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 115 (ass_left)



state 179

    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    IMPLY	shift, and go to state 202

    $default	reduce using rule 112 (ass_left)



state 180

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 356
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 181

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
=======
    ass_left  ->  array .   (rule 113)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 357
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 358
    point_exp	go to state 229
    identifier	go to state 359
    struct_member_exp	go to state 360



state 182

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 361
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



<<<<<<< HEAD
state 183
=======
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 362
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 184

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 363
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 185

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 343
    ADDRESS	shift, and go to state 364
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 306 (option_function_identifier)

    function	go to state 95
    type_define	go to state 344
    ass_right	go to state 365
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 346
    all_type_define	go to state 366
    option_function_identifier	go to state 367
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 186

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 368
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 187

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 369
    identifier	go to state 190



state 188

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 316)

    ARRAY	shift, and go to state 370
    OPEN_MPAR	shift, and go to state 371

    $default	reduce using rule 316 (identifier)



state 189

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 190

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 94)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 96)
=======
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)
    identifier  ->  ID .   (rule 316)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	shift, and go to state 372
    ASS_P	shift, and go to state 373

<<<<<<< HEAD
    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 374
=======
    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 191

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 375
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 192

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 376
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 193

    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 377
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 194

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 378
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 195

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 72)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 379
    sign_declaration	go to state 380
    declaration	go to state 65
    type_define	go to state 66



state 196

    declaration  ->  type_define option_identifier_array_declaration .   (rule 78)

    $default	reduce using rule 78 (declaration)



state 197

    assign_operator  ->  ASS_P .   (rule 130)

    $default	reduce using rule 130 (assign_operator)



state 198

    assign_operator  ->  ASS_N .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 199

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 109)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 381
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 200

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 367)

    OPEN_PAR	shift, and go to state 382
    ID  	shift, and go to state 172

    array	go to state 383
    identifier	go to state 384



state 201

<<<<<<< HEAD
    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 343
    ADDRESS	shift, and go to state 364
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94
=======
    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 367)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 306 (option_function_identifier)

    function	go to state 95
    type_define	go to state 344
    ass_right	go to state 365
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 346
    all_type_define	go to state 366
    option_function_identifier	go to state 385
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 202

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 374)

    OPEN_PAR	shift, and go to state 382
    ID  	shift, and go to state 172

    array	go to state 386
    identifier	go to state 387



state 203

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 368)
=======
    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 382
    ID  	shift, and go to state 172

    array	go to state 388
    identifier	go to state 389



state 204

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 378)
=======
    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 368)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 382
    ID  	shift, and go to state 172

    array	go to state 390
    identifier	go to state 391



<<<<<<< HEAD
state 205
=======
state 206

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 378)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 392
    identifier	go to state 393



state 207
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier DOT . function   (rule 376)

    OPEN_PAR	shift, and go to state 382
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 392
    array	go to state 393
    identifier	go to state 394



state 206

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier IMPLY . function   (rule 377)

    OPEN_PAR	shift, and go to state 382
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 395
    array	go to state 396
    identifier	go to state 397



state 207

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 398
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 208

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 209

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 399



state 210

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 400



state 211

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 159)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    THEN	shift, and go to state 401
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271



state 212

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    STRUCT_TYPE	shift, and go to state 402



state 213

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 404



state 214

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 406



state 215

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    MUL 	shift, and go to state 407



state 216

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 409



state 217

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 218

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415



state 219

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)

    INTDECLARATION	shift, and go to state 416
    CHARDECLARATION	shift, and go to state 417
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 220

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 418



state 221

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    OPEN_PAR	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 327
    IMPLY	shift, and go to state 202

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 222

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 223

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 419
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ari_operator	go to state 237



state 224

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 177)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
=======
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 420

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 225

    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 226

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
=======
    member_in_exp  ->  address_exp .   (rule 178)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 334

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 227

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    OPEN_PAR	shift, and go to state 421
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 422
    point_exp	go to state 423
    address_exp	go to state 424
    identifier	go to state 425
    struct_member_exp	go to state 426
=======
    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 228

<<<<<<< HEAD
    address_exp  ->  ADDRESS array .   (rule 206)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
=======
    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 200

    DOT 	[reduce using rule 206 (address_exp)]
    $default	reduce using rule 206 (address_exp)



state 229

<<<<<<< HEAD
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    OPEN_PAR	shift, and go to state 423
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 426
    identifier	go to state 427
    struct_member_exp	go to state 428
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 203
    IMPLY	shift, and go to state 204



<<<<<<< HEAD
state 230
=======
    address_exp  ->  ADDRESS array .   (rule 207)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    address_exp  ->  ADDRESS address_exp .   (rule 208)

    $default	reduce using rule 208 (address_exp)



state 231

<<<<<<< HEAD
    address_exp  ->  ADDRESS identifier .   (rule 205)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
=======
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 205

    DOT 	[reduce using rule 205 (address_exp)]
    $default	reduce using rule 205 (address_exp)



state 232

    address_exp  ->  ADDRESS struct_member_exp .   (rule 207)

    $default	reduce using rule 207 (address_exp)



state 233

<<<<<<< HEAD
    member_in_exp  ->  SUB member_in_exp .   (rule 167)
=======
    address_exp  ->  ADDRESS identifier .   (rule 206)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 167 (member_in_exp)



state 234

    member_in_exp  ->  BNE member_in_exp .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 235

    ari_operator  ->  ADD .   (rule 188)

    $default	reduce using rule 188 (ari_operator)



state 236

    ari_operator  ->  SUB .   (rule 189)

    $default	reduce using rule 189 (ari_operator)



state 237

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 158)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    simple_ari_exp	go to state 427
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 238

    bi_operator  ->  INTER_OR .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 239

    bi_operator  ->  CON .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 240

    bi_operator  ->  ADDRESS .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 241

    relation_operator  ->  NE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



state 242

    relation_operator  ->  EQ .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 243

    relation_operator  ->  GE .   (rule 253)

    $default	reduce using rule 253 (relation_operator)



state 244

    relation_operator  ->  LE .   (rule 254)

    $default	reduce using rule 254 (relation_operator)



state 245

    relation_operator  ->  GT .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



state 246

    relation_operator  ->  LT .   (rule 257)

    $default	reduce using rule 257 (relation_operator)



state 247

    bi_operator  ->  LST .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 248

    bi_operator  ->  RST .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 249

    bi_operator  ->  MUL .   (rule 180)

    $default	reduce using rule 180 (bi_operator)



state 250

    bi_operator  ->  DIV .   (rule 181)

    $default	reduce using rule 181 (bi_operator)



state 251

    bi_operator  ->  MOD .   (rule 182)

    $default	reduce using rule 182 (bi_operator)



state 252

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 165)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 428
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 253

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 157)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 429
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 254

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 8 (complexProposition)



state 255

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 6 (complexProposition)



state 256

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 7 (complexProposition)



state 257

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 5 (complexProposition)



state 258

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 4 (complexProposition)



state 259

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 430
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 260

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 250)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 431
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 261

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 249)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 432
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 262

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 238)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 212
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 262
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 263
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    bool_exp	go to state 264
    prime_bool_exp	go to state 130
    identifier	go to state 225
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 263

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 239)
    prime_bool_exp  ->  ari_exp .   (rule 242)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 252)

    CLOSE_PAR	shift, and go to state 419
    NE  	shift, and go to state 266
    EQ  	shift, and go to state 267
    GE  	shift, and go to state 243
    LE  	shift, and go to state 244
    GT  	shift, and go to state 245
    LT  	shift, and go to state 246
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    CLOSE_PAR	[reduce using rule 242 (prime_bool_exp)]
    $default	reduce using rule 242 (prime_bool_exp)

    ari_operator	go to state 237
    relation_operator	go to state 268



state 264

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 238)

    CLOSE_PAR	shift, and go to state 433
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 132
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 265

    bool_exp  ->  NEGATION bool_exp .   (rule 235)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)


    $default	reduce using rule 235 (bool_exp)



state 266

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 252)
    relation_operator  ->  NE .   (rule 255)

    POINTERNULL	shift, and go to state 434
    STRLITERAL	shift, and go to state 127
    CHARLITERAL	shift, and go to state 94

    POINTERNULL	[reduce using rule 255 (relation_operator)]
    CHARLITERAL	[reduce using rule 255 (relation_operator)]
    $default	reduce using rule 255 (relation_operator)

    strliteral	go to state 435
    charliteral	go to state 436



state 267

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 251)
    relation_operator  ->  EQ .   (rule 258)

    POINTERNULL	shift, and go to state 437
    STRLITERAL	shift, and go to state 127
    CHARLITERAL	shift, and go to state 94

    POINTERNULL	[reduce using rule 258 (relation_operator)]
    CHARLITERAL	[reduce using rule 258 (relation_operator)]
    $default	reduce using rule 258 (relation_operator)

    strliteral	go to state 438
    charliteral	go to state 439



state 268

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 239)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 440
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 269

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 348)

    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298

    statement_bpar	go to state 441



state 270

    bool_exp  ->  bool_exp OR . bool_exp   (rule 237)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 442
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 271

<<<<<<< HEAD
    bool_exp  ->  bool_exp AND . bool_exp   (rule 236)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 443
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 348)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 443
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 272

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 246)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 444
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 273

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 245)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 445
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 274

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    CLOSE_PAR	shift, and go to state 446
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271



state 275

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 276

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 277

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 278

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 279

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449

    $default	reduce using rule 286 (option_function_parameter_list)

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 451



state 280

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 330



state 281

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 287)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . error   (rule 303)

    error	shift, and go to state 452
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 453
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 454
    STRUCT_TYPE	shift, and go to state 455

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 456



state 282

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COLON	shift, and go to state 457


<<<<<<< HEAD
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 283

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 458

    $default	reduce using rule 323 (option_frame_identifier)

    option_frame_identifier	go to state 459



state 284

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    ID  	shift, and go to state 340
    STRUCT_TYPE	shift, and go to state 460



state 285

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 404
=======
    $default	reduce using rule 323 (option_frame_identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 286

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 406

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 287

    type_define  ->  VOIDDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    MUL 	shift, and go to state 407

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 288

    type_define  ->  FLOATDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 409

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 289

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 461
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 151
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_left	go to state 462
    leftaddrshift	go to state 69
    array	go to state 156
    point_exp	go to state 157
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 160
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 162



state 290

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 463
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 189
    identifier	go to state 190



state 291

<<<<<<< HEAD
    for_sta_init  ->  declaration .   (rule 336)
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 463
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 336 (for_sta_init)



state 292

    for_sta_init  ->  ass_statement .   (rule 335)

    $default	reduce using rule 335 (for_sta_init)



state 293

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    COMMA	shift, and go to state 464
=======
    for_sta_init  ->  declaration .   (rule 336)

    $default	reduce using rule 336 (for_sta_init)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 294

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 333)

    DO  	shift, and go to state 465
=======
    for_sta_init  ->  ass_statement .   (rule 335)

    $default	reduce using rule 335 (for_sta_init)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 295

<<<<<<< HEAD
    bool_par  ->  error CLOSE_PAR .   (rule 315)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 315 (bool_par)



state 296

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 314)
=======
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 333)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 466
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271



state 297

<<<<<<< HEAD
    statement_bpar  ->  error . CLOSE_BPAR   (rule 313)

    CLOSE_BPAR	shift, and go to state 467
=======
    bool_par  ->  error CLOSE_PAR .   (rule 315)

    $default	reduce using rule 315 (bool_par)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 298

<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 312)
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 314)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 468
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 299

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 332)
=======
    statement_bpar  ->  error . CLOSE_BPAR   (rule 313)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 332 (while_statement)



state 300

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)
=======
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 312)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_BPAR	shift, and go to state 469
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 301

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 470
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 471
    rightaddrshift	go to state 306
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 472
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 473
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    strliteral	go to state 474
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 332)

    $default	reduce using rule 332 (while_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 302

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 198)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 199)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 476
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 477
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 478
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 303

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 194)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 195)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 196)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 479
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 480
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 481
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 472
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 473
    rightaddrshift	go to state 308
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 474
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 475
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 476
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 304

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 138)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 482
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 173
    point_exp	go to state 174
    identifier	go to state 175



state 305

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 352)

    COMMA	shift, and go to state 483
    CLOSE_PAR	shift, and go to state 484

    CLOSE_PAR	[reduce using rule 353 (option_output)]
    $default	reduce using rule 353 (option_output)

    option_output	go to state 485



state 306

    ass_right  ->  rightaddrshift .   (rule 137)

    $default	reduce using rule 137 (ass_right)



state 307

<<<<<<< HEAD
    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 352)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    $default	reduce using rule 132 (ass_right)
=======
    CLOSE_PAR	[reduce using rule 353 (option_output)]
    $default	reduce using rule 353 (option_output)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ari_operator	go to state 237



state 308

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    CON 	shift, and go to state 486

    $default	reduce using rule 133 (ass_right)



state 309

    array_exp  ->  option_list_value .   (rule 191)

    $default	reduce using rule 191 (array_exp)



state 310

    array_exp  ->  option_struct_list_value .   (rule 192)

    $default	reduce using rule 192 (array_exp)



state 311

    ass_right  ->  strliteral .   (rule 134)

    $default	reduce using rule 134 (ass_right)



state 312

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 159)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 348)

    THEN	shift, and go to state 487
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271



state 313

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    ID  	shift, and go to state 133
    STRUCT_TYPE	shift, and go to state 460



state 314

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 488
=======
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 348)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 315

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 489

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 316

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 490

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 317

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 491
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 492
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 169
    type_define	go to state 66



state 318

    sign_declaration  ->  SIGNED . declaration   (rule 75)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 493
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 494
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 170
    type_define	go to state 66



state 319

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 331)

    CLOSE_PAR	shift, and go to state 495
    OR  	shift, and go to state 332
    AND 	shift, and go to state 333



state 320

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 171
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 173
    point_exp	go to state 174
    identifier	go to state 496



state 321

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 316)
=======
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 331)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_MPAR	shift, and go to state 497

    $default	reduce using rule 316 (identifier)



state 322

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 323

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 212
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 499
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 152
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 263
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 225
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 500
    struct_member_exp	go to state 226
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 499

    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 324

    imply_pre  ->  NEGATION imply_pre .   (rule 328)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)


    $default	reduce using rule 328 (imply_pre)



state 325

<<<<<<< HEAD
    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 64)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 501
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 502
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 64 (statement)



<<<<<<< HEAD
state 326
=======
    imply_pre  ->  NEGATION imply_pre .   (rule 328)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 114)

<<<<<<< HEAD
    $default	reduce using rule 114 (ass_left)
=======
    $default	reduce using rule 328 (imply_pre)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 327

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 328

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 155)

    OPEN_MPAR	shift, and go to state 501

    $default	reduce using rule 155 (point_exp)



state 329

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 375)

    IMPLY	shift, and go to state 502



state 330

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (identifier)



state 331

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    IMPLY	shift, and go to state 503



state 332

<<<<<<< HEAD
    imply_pre  ->  imply_pre OR . imply_pre   (rule 330)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 323
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 152
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 504
    struct_member_exp	go to state 107
=======
    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 333

    imply_pre  ->  imply_pre AND . imply_pre   (rule 329)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 323
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 152
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 505
    struct_member_exp	go to state 107



state 334

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)
=======
    imply_pre  ->  imply_pre OR . imply_pre   (rule 330)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 506
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 335

<<<<<<< HEAD
    option_projection  ->  COMMA . statement option_projection   (rule 326)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 506
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80
=======
    imply_pre  ->  imply_pre AND . imply_pre   (rule 329)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 507
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 336

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 507
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 337

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
=======
    option_projection  ->  COMMA . statement option_projection   (rule 326)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_BPAR	shift, and go to state 508



state 338

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449

    $default	reduce using rule 286 (option_function_parameter_list)

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 509



state 339

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 343
    ADDRESS	shift, and go to state 364
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 306 (option_function_identifier)

    function	go to state 95
    type_define	go to state 344
    ass_right	go to state 365
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 346
    all_type_define	go to state 366
    option_function_identifier	go to state 510
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 340

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 275
    identifier	go to state 190



state 341

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 277
    identifier	go to state 190



state 342

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 511
    ID  	shift, and go to state 512

    identifier	go to state 513



state 343

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 259)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 260)

    INTDECLARATION	shift, and go to state 514
    CHARDECLARATION	shift, and go to state 515



state 344

    all_type_define  ->  type_define .   (rule 262)

    $default	reduce using rule 262 (all_type_define)



state 345

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    CLOSE_PAR	shift, and go to state 516
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ari_operator	go to state 237



state 346

    all_type_define  ->  sign_type_define .   (rule 261)

    $default	reduce using rule 261 (all_type_define)



state 347

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 153)

    MUL 	shift, and go to state 517



state 348

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 149
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 518
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 519
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 520
    OPEN_PAR	shift, and go to state 150
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 521
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 151
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 152
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 153
    function	go to state 154
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 155
    leftaddrshift	go to state 69
    array	go to state 156
    point_exp	go to state 157
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 160
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 161
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 162



state 349

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 522
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 350

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 200
    OPEN_PAR	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 327
    IMPLY	shift, and go to state 202

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 351

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 352

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 329



state 353

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 110)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
=======
    ass_left  ->  point_exp .   (rule 114)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    $default	reduce using rule 110 (ass_left)



state 354

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 111)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
=======
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 334

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 355

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    OPEN_PAR	shift, and go to state 523
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 172

    ass_left	go to state 462
    leftaddrshift	go to state 69
    array	go to state 524
    point_exp	go to state 351
    address_exp	go to state 352
    identifier	go to state 353
    struct_member_exp	go to state 354
=======
    ass_left  ->  identifier .   (rule 111)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 356

<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
    ass_left  ->  struct_member_exp .   (rule 112)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 525
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ari_operator	go to state 237



state 357

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 421
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 422
    point_exp	go to state 423
    address_exp	go to state 352
    identifier	go to state 425
    struct_member_exp	go to state 426
=======
    OPEN_PAR	shift, and go to state 525
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 526
    point_exp	go to state 353
    address_exp	go to state 354
    identifier	go to state 355
    struct_member_exp	go to state 356
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 358

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 358)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    COMMA	shift, and go to state 526
    CLOSE_PAR	shift, and go to state 527
    IMPLY	shift, and go to state 202

    CLOSE_PAR	[reduce using rule 360 (option_input)]
    $default	reduce using rule 360 (option_input)

    option_input	go to state 528



<<<<<<< HEAD
state 359
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 356)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 205
    COMMA	shift, and go to state 526
    CLOSE_PAR	shift, and go to state 529
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 360 (option_input)]
    $default	reduce using rule 360 (option_input)

    option_input	go to state 530


<<<<<<< HEAD
=======
    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 358)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 360

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)
=======
    CLOSE_PAR	[reduce using rule 360 (option_input)]
    $default	reduce using rule 360 (option_input)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 531



state 361

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 356)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    COMMA	shift, and go to state 528
    CLOSE_PAR	shift, and go to state 531
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 360 (option_input)]
    $default	reduce using rule 360 (option_input)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 532
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 362

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)
=======
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 533
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 363

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 534
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 364

    address_exp  ->  ADDRESS . identifier   (rule 205)
    address_exp  ->  ADDRESS . array   (rule 206)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 207)
    address_exp  ->  ADDRESS . address_exp   (rule 208)
    option_function_identifier  ->  ADDRESS . error   (rule 307)

    error	shift, and go to state 535
    OPEN_PAR	shift, and go to state 227
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 228
    point_exp	go to state 229
    address_exp	go to state 230
    identifier	go to state 231
    struct_member_exp	go to state 232



state 365

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 304)

    COMMA	shift, and go to state 536

    $default	reduce using rule 310 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 537



state 366

    option_function_identifier  ->  all_type_define .   (rule 305)

    $default	reduce using rule 305 (option_function_identifier)



state 367

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 538

<<<<<<< HEAD
=======
    $default	reduce using rule 310 (inner_option_function_identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 368

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 540
    ari_operator	go to state 237



state 369

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 370

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)

    ASS_P	shift, and go to state 541



state 371

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 542
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 372

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 102)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 103)

    error	shift, and go to state 543
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 544
    identifier	go to state 190



state 373

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 96)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 545
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 374

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 94)

    $default	reduce using rule 94 (option_identifier_array_declaration)



state 375

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194

    $default	reduce using rule 32 (statement)



state 376

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 194

    $default	reduce using rule 31 (statement)



state 377

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 194

    $default	reduce using rule 54 (statement)



state 378

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)



state 379

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 546



state 380

    option_struct_declaration  ->  sign_declaration .   (rule 65)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 66)

    AND 	shift, and go to state 547

    $default	reduce using rule 65 (option_struct_declaration)



state 381

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 109)

    $default	reduce using rule 109 (ass_statement)



state 382

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    OPEN_PAR	shift, and go to state 548
    ID  	shift, and go to state 172

    array	go to state 549
    identifier	go to state 280



state 383

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 552


<<<<<<< HEAD
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 384

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 364)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 553

<<<<<<< HEAD
=======
    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 367)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 385
=======
    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 554



state 386

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 374)
=======
    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 364)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 555



state 387

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 556



state 388

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 368)
=======
    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 557



state 389

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 365)
=======
    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 370)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 558



state 390

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 378)
=======
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 368)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 559



state 391

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 372)
=======
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 365)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 560



state 392

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT function .   (rule 376)
=======
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 376 (struct_member_exp)



state 393

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 366)
=======
    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 372)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 201
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 561



state 394

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551
=======
    struct_member_exp  ->  identifier DOT function .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 562


<<<<<<< HEAD
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 366)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 395

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY function .   (rule 377)
=======
    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 377 (struct_member_exp)



state 396

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 373)
=======
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 363)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 201
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 397

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551
=======
    struct_member_exp  ->  identifier IMPLY function .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 564


<<<<<<< HEAD
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 373)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 398

<<<<<<< HEAD
    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)
=======
    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 25 (complexProposition)



state 399

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)
=======
    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 369)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	shift, and go to state 209
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

<<<<<<< HEAD
    $default	reduce using rule 29 (poptional_projection)
=======
    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    poptional_projection	go to state 565



state 400

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 566



state 401

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 159)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 567
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 402

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 231)

    MUL 	shift, and go to state 568



state 403

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 210)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 569
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 404

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 571
    MUL 	shift, and go to state 572



state 405

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 573
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 406

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 574
    MUL 	shift, and go to state 575



state 407

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 576
    MUL 	shift, and go to state 577



state 408

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 211)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 578
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 409

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 579
    MUL 	shift, and go to state 580



state 410

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 581



state 411

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 582



state 412

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 583



state 413

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 585



state 414

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 415

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 416

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)

    CLOSE_PAR	shift, and go to state 590



state 417

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 591



state 418

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 593



state 419

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 420

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 375)

    IMPLY	shift, and go to state 502

    IMPLY	[reduce using rule 209 (address_exp)]
    $default	reduce using rule 209 (address_exp)



state 421

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 421
    UNSIGNED	shift, and go to state 597
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 172

    array	go to state 422
    point_exp	go to state 423
    address_exp	go to state 424
    identifier	go to state 425
    struct_member_exp	go to state 426



state 422

<<<<<<< HEAD
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
=======
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 375)

    IMPLY	shift, and go to state 504
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 327
    IMPLY	shift, and go to state 202



state 423

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 204
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 423
    UNSIGNED	shift, and go to state 599
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 426
    identifier	go to state 427
    struct_member_exp	go to state 428
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 424

<<<<<<< HEAD
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
=======
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 420



state 425

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
=======
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206



state 426

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
=======
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 334



state 427

<<<<<<< HEAD
    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 158)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 238
    CON 	shift, and go to state 239
    ADDRESS	shift, and go to state 240
    LST 	shift, and go to state 247
    RST 	shift, and go to state 248
    MUL 	shift, and go to state 249
    DIV 	shift, and go to state 250
    MOD 	shift, and go to state 251

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    bi_operator	go to state 252



state 428

<<<<<<< HEAD
    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 165)
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 165 (simple_ari_exp)



state 429

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 157)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ADD 	[reduce using rule 157 (ari_exp)]
    SUB 	[reduce using rule 157 (ari_exp)]
    $default	reduce using rule 157 (ari_exp)

    ari_operator	go to state 237



state 430

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    OPEN_BPAR	shift, and go to state 598



state 431

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 250)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 250 (prime_bool_exp)

    ari_operator	go to state 237



state 432

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 249)
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 342)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 237



state 433

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 238)

    $default	reduce using rule 238 (bool_exp)



state 434

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 435

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 244)

    $default	reduce using rule 244 (prime_bool_exp)



state 436

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 252)

    $default	reduce using rule 252 (prime_bool_exp)



state 437

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 247)

    $default	reduce using rule 247 (prime_bool_exp)



state 438

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)



state 439

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 251)

    $default	reduce using rule 251 (prime_bool_exp)



state 440

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 239)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 239 (prime_bool_exp)

    ari_operator	go to state 237



state 441

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 348)

    ELSE	shift, and go to state 599

    $default	reduce using rule 350 (option_else_statement)

    option_else_statement	go to state 600



state 442

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 237)

    AND 	shift, and go to state 271

    $default	reduce using rule 237 (bool_exp)



state 443

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

=======
    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 348)

    ELSE	shift, and go to state 601

    $default	reduce using rule 350 (option_else_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 236 (bool_exp)



state 444

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 246)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 237



state 445

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 245)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 245 (prime_bool_exp)

    ari_operator	go to state 237



state 446

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 447

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 285)

    MUL 	shift, and go to state 601



state 448

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 602
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 603
    identifier	go to state 604



state 449

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 605
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 606
    identifier	go to state 607



state 450

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 608
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 609
    identifier	go to state 610



state 451

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 611



state 452

    inner_option_define_identifier  ->  COMMA error .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 453

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 296)

    MUL 	shift, and go to state 612



state 454

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    identifier	go to state 613



state 455

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 614
    ID  	shift, and go to state 139

    identifier	go to state 615



state 456

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 287)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 616
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 617
    identifier	go to state 618



state 457

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_BPAR	shift, and go to state 619



state 458

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 322)
    option_frame_identifier  ->  COMMA . error   (rule 324)

    error	shift, and go to state 620
    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    identifier	go to state 621



state 459

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 622



state 460

<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 231)
=======
    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 322)
    option_frame_identifier  ->  COMMA . error   (rule 324)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 623
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 276
    identifier	go to state 190



state 461

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 624
    CHARDECLARATION	shift, and go to state 625
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 626
    OPEN_PAR	shift, and go to state 461
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 627
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_left	go to state 462
    leftaddrshift	go to state 69
    array	go to state 156
    point_exp	go to state 157
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 160
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 162



state 462

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 326



state 463

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 138
    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 628
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 369
    identifier	go to state 190
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 626
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 628
    OPEN_PAR	shift, and go to state 463
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 629
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 464

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 339 (for_sta_condition)

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 629
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    for_sta_condition	go to state 630
    struct_member_exp	go to state 107



state 465

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 333)

    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298

    statement_bpar	go to state 631



state 466

<<<<<<< HEAD
    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 314)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 339 (for_sta_condition)

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 631
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_condition	go to state 632
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 314 (bool_par)



<<<<<<< HEAD
state 467
=======
    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 333)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    statement_bpar  ->  error CLOSE_BPAR .   (rule 313)

    $default	reduce using rule 313 (statement_bpar)



state 468

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 312)

    CLOSE_BPAR	shift, and go to state 632
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194
=======
    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 314)

    $default	reduce using rule 314 (bool_par)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 469

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 633
=======
    statement_bpar  ->  error CLOSE_BPAR .   (rule 313)

    $default	reduce using rule 313 (statement_bpar)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 470

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 470
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 471
    rightaddrshift	go to state 306
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 472
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 473
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    strliteral	go to state 474
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 312)

    CLOSE_BPAR	shift, and go to state 634
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 471

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 136)

    CLOSE_PAR	shift, and go to state 634



state 472

<<<<<<< HEAD
    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)
=======
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 472
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 473
    rightaddrshift	go to state 308
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 474
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 475
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 476
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 419
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    CLOSE_PAR	[reduce using rule 132 (ass_right)]
    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 237



state 473

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 193)

    CLOSE_PAR	shift, and go to state 635
    CON 	shift, and go to state 486

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)



state 474

    ass_right  ->  strliteral .   (rule 134)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 636

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)



state 475

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 637
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 638
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 476

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 197)

    COMMA	shift, and go to state 639
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 237
    inner_option_list_value	go to state 640



state 477

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 639
    CON 	shift, and go to state 486

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 641
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 639
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 478

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 198)

    COMMA	shift, and go to state 639

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 642



state 479

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 194)

    COMMA	shift, and go to state 639
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 237
    inner_option_list_value	go to state 643



state 480

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 639
    CON 	shift, and go to state 486

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 644



state 481

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 195)

    COMMA	shift, and go to state 639

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 645



state 482

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 646
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 343
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    type_define	go to state 344
    leftaddrshift	go to state 647
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 345
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 346
    all_type_define	go to state 347
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 483

    option_output  ->  COMMA . ass_right option_output   (rule 354)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 648
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 484

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 351)

    $default	reduce using rule 351 (output_statement)
=======
    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 648
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 346
    leftaddrshift	go to state 649
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 347
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 349
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 485

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 352)

    CLOSE_PAR	shift, and go to state 649
=======
    option_output  ->  COMMA . ass_right option_output   (rule 354)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 650
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 486

<<<<<<< HEAD
    array_exp  ->  array_exp CON . array_exp   (rule 190)

    OPEN_PAR	shift, and go to state 650
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 351)

    $default	reduce using rule 351 (output_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    array_exp	go to state 651
    option_list_value	go to state 309
    option_struct_list_value	go to state 310



<<<<<<< HEAD
state 487
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 352)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 159)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 348)

    error	shift, and go to state 297
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    OPEN_BPAR	shift, and go to state 298
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 567
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    statement_bpar	go to state 441
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 488

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 652
    MUL 	shift, and go to state 572



state 489

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 653
    MUL 	shift, and go to state 575
=======
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 348)

    error	shift, and go to state 299
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    OPEN_BPAR	shift, and go to state 300
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 569
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    statement_bpar	go to state 443
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 490

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 654
    MUL 	shift, and go to state 580



state 491

    type_define  ->  INTDECLARATION .   (rule 88)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 655

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 492

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 656

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 493

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)

    CLOSE_PAR	shift, and go to state 590

    $default	reduce using rule 88 (type_define)



state 494

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 591

    $default	reduce using rule 90 (type_define)



state 495

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 331)

    IMPLY	shift, and go to state 503

    $default	reduce using rule 331 (imply_pre)



state 496

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 657

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 497

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 658
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 331)

    IMPLY	shift, and go to state 505

    $default	reduce using rule 331 (imply_pre)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 498

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    OPEN_PAR	shift, and go to state 659



state 499

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    STRUCT	shift, and go to state 212
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 499
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 152
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 263
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    prime_bool_exp	go to state 159
    identifier	go to state 225
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 500
    struct_member_exp	go to state 226



state 500

    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 331)

    CLOSE_PAR	shift, and go to state 660
    OR  	shift, and go to state 332
    AND 	shift, and go to state 333



state 501

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 661
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 501
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 502
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 502

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 375)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 331)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 382
    ID  	shift, and go to state 172

    array	go to state 662
    identifier	go to state 663



state 503

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 664



state 504

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 330)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    AND 	shift, and go to state 333

    $default	reduce using rule 330 (imply_pre)



state 505

    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)


    $default	reduce using rule 329 (imply_pre)



state 506

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 326)

    COMMA	shift, and go to state 335
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 330)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 325 (option_projection)

<<<<<<< HEAD
    option_projection	go to state 665
=======
    $default	reduce using rule 330 (imply_pre)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 507

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298

<<<<<<< HEAD
    statement_bpar	go to state 666
=======
    $default	reduce using rule 329 (imply_pre)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 508

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 326)

    COMMA	shift, and go to state 337
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    $default	reduce using rule 325 (option_projection)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    PROJECTION	shift, and go to state 667



state 509

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 668



state 510

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 669



state 511

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    identifier	go to state 670



state 512

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 671

    $default	reduce using rule 316 (identifier)



state 513

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 498



state 514

<<<<<<< HEAD
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 259)

    $default	reduce using rule 259 (sign_type_define)
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 673

    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 515

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 260)

    $default	reduce using rule 260 (sign_type_define)



state 516

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 517

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 153)

    CLOSE_PAR	shift, and go to state 672



state 518

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 673

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 519

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 674

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 520

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 675

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 521

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 676
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 677
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 169
    type_define	go to state 66



state 522

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 523

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    INTDECLARATION	shift, and go to state 678
    CHARDECLARATION	shift, and go to state 679
    FLOATDECLARATION	shift, and go to state 680
    OPEN_PAR	shift, and go to state 523
    UNSIGNED	shift, and go to state 681
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 172

    ass_left	go to state 462
    leftaddrshift	go to state 69
    array	go to state 524
    point_exp	go to state 351
    address_exp	go to state 424
    identifier	go to state 353
    struct_member_exp	go to state 354



state 524

    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 327
    IMPLY	shift, and go to state 202

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 525

<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    INTDECLARATION	shift, and go to state 680
    CHARDECLARATION	shift, and go to state 681
    FLOATDECLARATION	shift, and go to state 682
    OPEN_PAR	shift, and go to state 525
    UNSIGNED	shift, and go to state 683
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 526
    point_exp	go to state 353
    address_exp	go to state 426
    identifier	go to state 355
    struct_member_exp	go to state 356
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 526

<<<<<<< HEAD
    option_input  ->  COMMA . identifier option_input   (rule 361)
    option_input  ->  COMMA . array option_input   (rule 362)
=======
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 382
    ID  	shift, and go to state 172

    array	go to state 682
    identifier	go to state 683



state 527

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)



state 528

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 358)
=======
    option_input  ->  COMMA . identifier option_input   (rule 361)
    option_input  ->  COMMA . array option_input   (rule 362)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 684



state 529

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (input_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 530

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 356)
=======
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 358)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 685



state 531

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (input_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 532

<<<<<<< HEAD
    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 356)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 53 (statement)



state 533

<<<<<<< HEAD
    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)
=======
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 534

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 535

    option_function_identifier  ->  ADDRESS error .   (rule 307)

    $default	reduce using rule 307 (option_function_identifier)



state 536

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 308)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)
    inner_option_function_identifier  ->  COMMA . error   (rule 311)

    error	shift, and go to state 686
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 687
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 688
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 537

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 304)

    $default	reduce using rule 304 (option_function_identifier)



state 538

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)
=======
    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 309)
    inner_option_function_identifier  ->  COMMA . error   (rule 311)

    error	shift, and go to state 688
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 689
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 69 (function)



state 539

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 146)
    option_ari_exp  ->  COMMA . error   (rule 147)

    error	shift, and go to state 689
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 690
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 540

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 691



state 541

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 98)
=======
    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 147)
    option_ari_exp  ->  COMMA . error   (rule 148)

    error	shift, and go to state 690
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 691
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 650
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    STRLITERAL	shift, and go to state 127

    array_exp	go to state 692
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    strliteral	go to state 693



<<<<<<< HEAD
state 542
=======
    CLOSE_MPAR	shift, and go to state 692
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 694
    ari_operator	go to state 237


<<<<<<< HEAD
=======
    array_exp	go to state 693
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 694
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 543

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 544

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 102)

<<<<<<< HEAD
    $default	reduce using rule 102 (inner_option_identifier_array_declaration)
=======
    option_ari_exp	go to state 695
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 545

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 372

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 695



state 546

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (struct_define_statement)



state 547

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 66)

    STRUCT	shift, and go to state 166
    UNION	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 168
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

<<<<<<< HEAD
    option_struct_declaration	go to state 696
    sign_declaration	go to state 380
    declaration	go to state 65
    type_define	go to state 66
=======
    inner_option_identifier_array_declaration	go to state 696
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 548

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 548
    UNSIGNED	shift, and go to state 597
    ID  	shift, and go to state 172

    array	go to state 549
    identifier	go to state 280



state 549

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 327
=======
    option_struct_declaration	go to state 697
    sign_declaration	go to state 382
    declaration	go to state 66
    type_define	go to state 67
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 550

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 381)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 382)
    option_struct_member_exp  ->  DOT . function   (rule 385)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 382
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 697
    array	go to state 698
    identifier	go to state 699



state 551

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  IMPLY . function   (rule 386)

    OPEN_PAR	shift, and go to state 382
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 700
    array	go to state 701
    identifier	go to state 702



<<<<<<< HEAD
state 552
=======
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 381)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 382)
    option_struct_member_exp  ->  DOT . function   (rule 385)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 367)

<<<<<<< HEAD
    $default	reduce using rule 367 (struct_member_exp)
=======
    function	go to state 698
    array	go to state 699
    identifier	go to state 700
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 553

<<<<<<< HEAD
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)
=======
    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  IMPLY . function   (rule 386)

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 701
    array	go to state 702
    identifier	go to state 703
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 554

<<<<<<< HEAD
    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)
=======
    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 555

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)
=======
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 556

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 557

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)
=======
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 558

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)
=======
    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 559

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 560

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 561

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 562

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 363)

    $default	reduce using rule 363 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 563

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)
=======
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 564

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)
=======
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 363)

    $default	reduce using rule 363 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 565

<<<<<<< HEAD
    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)
=======
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 566

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 703
=======
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 567

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 159)

    ELSE	shift, and go to state 704
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ELSE	[reduce using rule 163 (option_exp_else_statement)]
    ADD 	[reduce using rule 163 (option_exp_else_statement)]
    SUB 	[reduce using rule 163 (option_exp_else_statement)]
    $default	reduce using rule 163 (option_exp_else_statement)

    option_exp_else_statement	go to state 705
    ari_operator	go to state 237



<<<<<<< HEAD
state 568
=======
    OPEN_BPAR	shift, and go to state 704
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 706
    MUL 	shift, and go to state 707



<<<<<<< HEAD
state 569
=======
    ELSE	shift, and go to state 705
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 210)

<<<<<<< HEAD
    $default	reduce using rule 210 (type_cast)
=======
    option_exp_else_statement	go to state 706
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 570

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp .   (rule 160)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 161)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 238
    CON 	shift, and go to state 239
    ADDRESS	shift, and go to state 240
    LST 	shift, and go to state 247
    RST 	shift, and go to state 248
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
    MUL 	shift, and go to state 249
    DIV 	shift, and go to state 250
    MOD 	shift, and go to state 251

    INTER_OR	[reduce using rule 160 (type_cast_alg_exp)]
    CON 	[reduce using rule 160 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 160 (type_cast_alg_exp)]
    LST 	[reduce using rule 160 (type_cast_alg_exp)]
    RST 	[reduce using rule 160 (type_cast_alg_exp)]
    ADD 	[reduce using rule 160 (type_cast_alg_exp)]
    SUB 	[reduce using rule 160 (type_cast_alg_exp)]
    MUL 	[reduce using rule 160 (type_cast_alg_exp)]
    DIV 	[reduce using rule 160 (type_cast_alg_exp)]
    MOD 	[reduce using rule 160 (type_cast_alg_exp)]
    $default	reduce using rule 160 (type_cast_alg_exp)

    bi_operator	go to state 252
    ari_operator	go to state 708
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 708
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 571

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 710
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 572

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 223)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 711
=======
    bi_operator	go to state 254
    ari_operator	go to state 709
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 573

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 212 (type_cast)



state 574

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 712
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    CLOSE_PAR	shift, and go to state 712
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 575

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 713



state 576

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 714
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 577

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 714



state 578

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 211)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 211 (type_cast)



state 579

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 716
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    CLOSE_PAR	shift, and go to state 716
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 580

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 717



state 581

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 718
    MUL 	shift, and go to state 572
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 582

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 575
=======
    CLOSE_PAR	shift, and go to state 718
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 583

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 580
=======
    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 574
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 584

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 655
=======
    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 577
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 585

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 721
=======
    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 582
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 586

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 722
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 587

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 723
    MUL 	shift, and go to state 724
=======
    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 722
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 588

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 725
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 723
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 589

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 727
=======
    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 590

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 726
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 591

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 729
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 728
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 592

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 730
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 729
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 593

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 731
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 730
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 594

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 732
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 731
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 595

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    MUL 	shift, and go to state 733
=======
    CLOSE_PAR	shift, and go to state 732
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 596

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 733



state 597

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 735
    CHARDECLARATION	shift, and go to state 736
=======
    MUL 	shift, and go to state 734
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 598

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 342)

    CASE	shift, and go to state 737
    DEFAULT	shift, and go to state 738

<<<<<<< HEAD
    case_par	go to state 739
=======
    MUL 	shift, and go to state 735
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 599

    option_else_statement  ->  ELSE . statement_bpar   (rule 349)

<<<<<<< HEAD
    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298
=======
    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 737
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    statement_bpar	go to state 740



<<<<<<< HEAD
state 600

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 348)

    $default	reduce using rule 348 (if_statement)
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 342)

    CASE	shift, and go to state 738
    DEFAULT	shift, and go to state 739

    case_par	go to state 740
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 601

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 285)
=======
    option_else_statement  ->  ELSE . statement_bpar   (rule 349)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

<<<<<<< HEAD
    identifier	go to state 741
=======
    statement_bpar	go to state 741
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 602

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 742
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 743
    identifier	go to state 744
=======
    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 348)

    $default	reduce using rule 348 (if_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 603

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 276)

<<<<<<< HEAD
    $default	reduce using rule 276 (option_function_parameter_list)
=======
    identifier	go to state 742
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 604

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 272)

<<<<<<< HEAD
    ARRAY	shift, and go to state 745
    COMMA	shift, and go to state 281
=======
    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 743
    ID  	shift, and go to state 141
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 746
=======
    inner_option_define_identifier	go to state 744
    identifier	go to state 745
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 605

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 747
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 748
    identifier	go to state 749



<<<<<<< HEAD
state 606
=======
    ARRAY	shift, and go to state 746
    COMMA	shift, and go to state 283
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 273)

<<<<<<< HEAD
    $default	reduce using rule 273 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 747
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 607

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 268)

<<<<<<< HEAD
    ARRAY	shift, and go to state 750
    COMMA	shift, and go to state 281
=======
    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 748
    ID  	shift, and go to state 141
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 751
=======
    inner_option_define_identifier	go to state 749
    identifier	go to state 750
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 608

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    MUL 	shift, and go to state 752
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 753
    identifier	go to state 754



<<<<<<< HEAD
state 609
=======
    ARRAY	shift, and go to state 751
    COMMA	shift, and go to state 283
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 264)

<<<<<<< HEAD
    $default	reduce using rule 264 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 752
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 610

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)

<<<<<<< HEAD
    ARRAY	shift, and go to state 755
    COMMA	shift, and go to state 281
=======
    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 753
    ID  	shift, and go to state 141
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 756
=======
    inner_option_define_identifier	go to state 754
    identifier	go to state 755
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 611

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 757



state 612

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 296)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    identifier	go to state 758
=======
    ARRAY	shift, and go to state 756
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 757
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 613

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 292)

    ARRAY	shift, and go to state 759
    COMMA	shift, and go to state 281

<<<<<<< HEAD
    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 760
=======
    ASS_P	shift, and go to state 758
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 614

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 291)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

<<<<<<< HEAD
    identifier	go to state 761
=======
    identifier	go to state 759
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 615

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 293)

<<<<<<< HEAD
    ARRAY	shift, and go to state 762
    COMMA	shift, and go to state 281
=======
    ARRAY	shift, and go to state 760
    COMMA	shift, and go to state 283
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 763
=======
    inner_option_define_identifier	go to state 761
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 616

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 302)

<<<<<<< HEAD
    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139
=======
    identifier	go to state 762
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 764
    identifier	go to state 765



<<<<<<< HEAD
state 617
=======
    ARRAY	shift, and go to state 763
    COMMA	shift, and go to state 283
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 288)

<<<<<<< HEAD
    $default	reduce using rule 288 (inner_option_define_identifier)
=======
    inner_option_define_identifier	go to state 764
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 618

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 287)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    ARRAY	shift, and go to state 766
    COMMA	shift, and go to state 281
    OPEN_MPAR	shift, and go to state 767

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 768
=======
    inner_option_define_identifier	go to state 765
    identifier	go to state 766
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 619

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 63)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 769
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 620

    option_frame_identifier  ->  COMMA error .   (rule 324)

<<<<<<< HEAD
    $default	reduce using rule 324 (option_frame_identifier)
=======
    ARRAY	shift, and go to state 767
    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 768
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 769
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 621

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 322)

    COMMA	shift, and go to state 458

    $default	reduce using rule 323 (option_frame_identifier)

<<<<<<< HEAD
    option_frame_identifier	go to state 770
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 770
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 622

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 771
=======
    option_frame_identifier  ->  COMMA error .   (rule 324)

    $default	reduce using rule 324 (option_frame_identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 623

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 138
    CLOSE_PAR	shift, and go to state 706
    MUL 	shift, and go to state 772
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 369
    identifier	go to state 190
=======
    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 322)

    COMMA	shift, and go to state 460

    $default	reduce using rule 323 (option_frame_identifier)

    option_frame_identifier	go to state 771
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 624

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 488
=======
    AND 	shift, and go to state 772
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 625

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 489
=======
    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 773
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 490



state 627

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 773



state 628

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 138
    CLOSE_PAR	shift, and go to state 731
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 369
    identifier	go to state 190



state 629

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    for_sta_condition  ->  bool_exp .   (rule 338)

<<<<<<< HEAD
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271
=======
    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 774
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 338 (for_sta_condition)



state 630

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)
=======
    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	shift, and go to state 774



state 631

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 333)

    $default	reduce using rule 333 (for_statement)
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    for_sta_condition  ->  bool_exp .   (rule 338)

    OR  	shift, and go to state 272
    AND 	shift, and go to state 273

    $default	reduce using rule 338 (for_sta_condition)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 632

<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 312)

    $default	reduce using rule 312 (statement_bpar)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    COMMA	shift, and go to state 775
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 633

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 775
=======
    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 333)

    $default	reduce using rule 333 (for_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 634

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 136)

    $default	reduce using rule 136 (ass_right)
=======
    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 312)

    $default	reduce using rule 312 (statement_bpar)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 635

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 193)

<<<<<<< HEAD
    $default	reduce using rule 193 (array_exp)
=======
    OPEN_PAR	shift, and go to state 776
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 636

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 776



state 637

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 637
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 638
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 638

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 193)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 635
    CON 	shift, and go to state 486
=======
    OPEN_PAR	shift, and go to state 777
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 639

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 200)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 201)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . error   (rule 204)

    error	shift, and go to state 777
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 778
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 779
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 780
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 639
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 640

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 197)

    CLOSE_BPAR	shift, and go to state 781



state 641

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 782
=======
    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 201)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . error   (rule 205)

    error	shift, and go to state 778
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 779
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 780
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 781
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 642

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 198)

    CLOSE_BPAR	shift, and go to state 782



state 643

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 194)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 784
=======
    CLOSE_BPAR	shift, and go to state 783
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 644

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 785
=======
    CLOSE_BPAR	shift, and go to state 784
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 645

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 195)

    CLOSE_MPAR	shift, and go to state 785



state 646

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 410
    CHARDECLARATION	shift, and go to state 411
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 787
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 413
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 786
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 647

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 138)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 788
=======
    CLOSE_MPAR	shift, and go to state 787
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 648

<<<<<<< HEAD
    option_output  ->  COMMA ass_right . option_output   (rule 354)

    COMMA	shift, and go to state 483

    $default	reduce using rule 353 (option_output)

    option_output	go to state 789
=======
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 788
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 649

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 352)

<<<<<<< HEAD
    $default	reduce using rule 352 (output_statement)
=======
    CLOSE_PAR	shift, and go to state 789
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 650

<<<<<<< HEAD
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 650
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303

    array_exp	go to state 638
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
=======
    option_output  ->  COMMA ass_right . option_output   (rule 354)

    COMMA	shift, and go to state 485

    $default	reduce using rule 353 (option_output)

    option_output	go to state 790
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 651

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  array_exp CON array_exp .   (rule 190)
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (output_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


    $default	reduce using rule 190 (array_exp)



state 652

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 790
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 791
    INTLITERAL	shift, and go to state 792
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 710
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 653

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 793
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 794
    INTLITERAL	shift, and go to state 795
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 712
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 654

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 797
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 716
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 791
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 793
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 655

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 798
    MUL 	shift, and go to state 724
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 794
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 796
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 656

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 799
    MUL 	shift, and go to state 727
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 797
    INTLITERAL	shift, and go to state 798
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 657

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 800
=======
    CLOSE_PAR	shift, and go to state 799
    MUL 	shift, and go to state 725
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 658

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 801
    ari_operator	go to state 237
=======
    CLOSE_PAR	shift, and go to state 800
    MUL 	shift, and go to state 728
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 659

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 84)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449
=======
    OPEN_PAR	shift, and go to state 801
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 286 (option_function_parameter_list)

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 802



state 660

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 331)

<<<<<<< HEAD
    $default	reduce using rule 331 (imply_pre)
=======
    option_ari_exp	go to state 802
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 661

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 803
    ari_operator	go to state 237
=======
    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 803
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 662

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551
=======
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 331)

    $default	reduce using rule 331 (imply_pre)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 804



state 663

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 371)

<<<<<<< HEAD
    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551
=======
    option_ari_exp	go to state 804
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 805


<<<<<<< HEAD
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 375)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 664

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 806
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80
=======
    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 805
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 665

<<<<<<< HEAD
    option_projection  ->  COMMA statement option_projection .   (rule 326)

    $default	reduce using rule 326 (option_projection)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 806
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 666

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

<<<<<<< HEAD
    $default	reduce using rule 58 (statement)
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 807
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 667

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298

    statement_bpar	go to state 807
=======
    option_projection  ->  COMMA statement option_projection .   (rule 326)

    $default	reduce using rule 326 (option_projection)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 668

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 808



state 669

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

<<<<<<< HEAD
    $default	reduce using rule 70 (function)
=======
    statement_bpar	go to state 808
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 670

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 657
=======
    OPEN_BPAR	shift, and go to state 809
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 671

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 809
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 672

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 153)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 810
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 673

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 811
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 810
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 674

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 812
=======
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 154)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 811
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 675

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 812



state 676

    type_define  ->  INTDECLARATION .   (rule 88)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    MUL 	shift, and go to state 814

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)
=======
    CLOSE_PAR	shift, and go to state 813
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 677

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    MUL 	shift, and go to state 815
=======
    CLOSE_PAR	shift, and go to state 814
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 678

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
=======
    MUL 	shift, and go to state 815
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    MUL 	shift, and go to state 673



state 679

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
=======
    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 816
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    MUL 	shift, and go to state 674



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 675



state 681

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    INTDECLARATION	shift, and go to state 735
    CHARDECLARATION	shift, and go to state 816



state 682

    option_input  ->  COMMA array . option_input   (rule 362)

    COMMA	shift, and go to state 526

    $default	reduce using rule 360 (option_input)

    option_input	go to state 817



<<<<<<< HEAD
state 683
=======
    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 817
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_input  ->  COMMA identifier . option_input   (rule 361)

    COMMA	shift, and go to state 526

    $default	reduce using rule 360 (option_input)

<<<<<<< HEAD
    option_input	go to state 818
=======
    option_input  ->  COMMA array . option_input   (rule 362)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD

state 684
=======
    $default	reduce using rule 360 (option_input)

    option_input	go to state 818
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)


<<<<<<< HEAD
=======
    option_input  ->  COMMA identifier . option_input   (rule 361)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 685

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (input_statement)
=======
    $default	reduce using rule 360 (option_input)

    option_input	go to state 819
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 686

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA error .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)
=======
    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 687

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 819
    OPEN_MPAR	shift, and go to state 186

    $default	reduce using rule 316 (identifier)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (input_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 688

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 308)

    COMMA	shift, and go to state 536

    $default	reduce using rule 310 (inner_option_function_identifier)
=======
    inner_option_function_identifier  ->  COMMA error .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    inner_option_function_identifier	go to state 820



<<<<<<< HEAD
state 689

    option_ari_exp  ->  COMMA error .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 690

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 309)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 821
    ari_operator	go to state 237
=======
    $default	reduce using rule 310 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 820
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 690

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (array)



state 691

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 97)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    COMMA	shift, and go to state 372
    CON 	shift, and go to state 486

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 822
=======
    option_ari_exp	go to state 821
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 692

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 372

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 823

<<<<<<< HEAD
=======
state 693
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 694

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 824
=======
    inner_option_identifier_array_declaration	go to state 822
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 694

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 96)

<<<<<<< HEAD
    $default	reduce using rule 96 (option_identifier_array_declaration)
=======
    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 823
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 695

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 66)

<<<<<<< HEAD
    $default	reduce using rule 66 (option_struct_declaration)
=======
    CLOSE_MPAR	shift, and go to state 824
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 696

    option_struct_member_exp  ->  DOT function .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 697

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 201
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 825



state 698

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551
=======
    option_struct_member_exp  ->  DOT function .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 826

<<<<<<< HEAD

=======
state 699

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 382)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 700

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY function .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)
=======
    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 825
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 700

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 384)
=======
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 381)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 201
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 827
=======
    option_struct_member_exp	go to state 826
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 701

<<<<<<< HEAD
=======
    option_struct_member_exp  ->  IMPLY function .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 702

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 827



state 703

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 828



<<<<<<< HEAD
state 703
=======
state 704
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 829
<<<<<<< HEAD



state 704

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 162)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 830
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 705

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 159)

    $default	reduce using rule 159 (ari_exp)
=======
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 705

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 831
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 163)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 830
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 706

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 832



state 707

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 161)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    simple_ari_exp	go to state 833
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 831
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 708

    casted_element  ->  type_cast_alg_exp .   (rule 233)

<<<<<<< HEAD
    $default	reduce using rule 233 (casted_element)
=======
    CLOSE_PAR	shift, and go to state 832
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 709

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 217)

    $default	reduce using rule 217 (type_cast)
=======
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 162)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 833
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 710

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 834
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 711

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 712

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 835
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 834
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 713

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 714

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 836
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 835
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 715

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 716

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 837
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 836
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 717

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 791
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 710
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 718

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 794
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 712
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 837
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 719

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 716
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 720

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 838
    MUL 	shift, and go to state 727
=======
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 721

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 797
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 215 (type_cast)


<<<<<<< HEAD
=======
state 722
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 723

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 839
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    CLOSE_PAR	shift, and go to state 838
    MUL 	shift, and go to state 728
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 723

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 840



state 724

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 839
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 216 (type_cast)


<<<<<<< HEAD
=======
state 725
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 726

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 841
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    CLOSE_PAR	shift, and go to state 840
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 726

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 842



state 727

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 728

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

<<<<<<< HEAD
    $default	reduce using rule 214 (type_cast)
=======
    CLOSE_PAR	shift, and go to state 842
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 729

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 730

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 843
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 731

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 844



state 732

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 845
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 733

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 844



state 734

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    MUL 	shift, and go to state 814
=======
    CLOSE_PAR	shift, and go to state 845
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 735

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    MUL 	shift, and go to state 847
=======
    CLOSE_PAR	shift, and go to state 846
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 736

<<<<<<< HEAD
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 848
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 815
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 737

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 344)

<<<<<<< HEAD
    COLON	shift, and go to state 849
=======
    MUL 	shift, and go to state 847
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 738

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 342)

    CLOSE_BPAR	shift, and go to state 850
=======
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 848
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 739

<<<<<<< HEAD
    option_else_statement  ->  ELSE statement_bpar .   (rule 349)

    $default	reduce using rule 349 (option_else_statement)
=======
    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 344)

    COLON	shift, and go to state 849
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 740

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 285)

    CLOSE_PAR	shift, and go to state 851
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 342)

    CLOSE_BPAR	shift, and go to state 850
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 741

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 852
    identifier	go to state 853
=======
    option_else_statement  ->  ELSE statement_bpar .   (rule 349)

    $default	reduce using rule 349 (option_else_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 742

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 277)

<<<<<<< HEAD
    $default	reduce using rule 277 (option_function_parameter_list)
=======
    CLOSE_PAR	shift, and go to state 851
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 743

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 854
=======
    inner_option_define_identifier	go to state 852
    identifier	go to state 853
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 744

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 855

<<<<<<< HEAD
=======
state 745
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 746

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 269)

<<<<<<< HEAD
    $default	reduce using rule 269 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 854
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 746

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 281
    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 856
    identifier	go to state 857
=======
    inner_option_define_identifier	go to state 855
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 747

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 748

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 858
=======
    inner_option_define_identifier	go to state 856
    identifier	go to state 857
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 749

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 859

<<<<<<< HEAD
=======
state 750
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 751

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 265)

<<<<<<< HEAD
    $default	reduce using rule 265 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 858
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 751

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 284)

    OPEN_PAR	shift, and go to state 138
    ID  	shift, and go to state 139

<<<<<<< HEAD
    identifier	go to state 860
=======
    inner_option_define_identifier	go to state 859
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 752

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 753

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 282)

    ARRAY	shift, and go to state 861
    COMMA	shift, and go to state 281

<<<<<<< HEAD
    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 862
=======
    identifier	go to state 860
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 754

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 281
    OPEN_MPAR	shift, and go to state 863

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 864

<<<<<<< HEAD
=======
state 755
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 756
=======
    ARRAY	shift, and go to state 861
    COMMA	shift, and go to state 283
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 263)

<<<<<<< HEAD
    $default	reduce using rule 263 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 862
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 756

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 865
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 863

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 864
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 757

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 296)

    CLOSE_PAR	shift, and go to state 866



state 758

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 292)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 867
=======
    OPEN_BPAR	shift, and go to state 865
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 759

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 289)

<<<<<<< HEAD
    $default	reduce using rule 289 (inner_option_define_identifier)
=======
    CLOSE_PAR	shift, and go to state 866
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 760

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 868
=======
    inner_option_define_identifier	go to state 867
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 761

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 869

<<<<<<< HEAD
=======
state 762
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 763

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 290)

<<<<<<< HEAD
    $default	reduce using rule 290 (inner_option_define_identifier)
=======
    inner_option_define_identifier	go to state 868
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 763

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 869
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 765

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 301)

<<<<<<< HEAD
    ARRAY	shift, and go to state 870
    COMMA	shift, and go to state 281
=======
state 764
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 871



state 765

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 281
    OPEN_MPAR	shift, and go to state 872

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 873
=======
state 766
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
=======
    ARRAY	shift, and go to state 870
    COMMA	shift, and go to state 283
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 767

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 874
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    inner_option_define_identifier	go to state 871
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 767

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (inner_option_define_identifier)
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 872

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 873
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 768

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 63)

    CLOSE_BPAR	shift, and go to state 875
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 874
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 769

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 322)

    $default	reduce using rule 322 (option_frame_identifier)



state 770

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 876
=======
    CLOSE_BPAR	shift, and go to state 875
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 771

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 138
    CLOSE_PAR	shift, and go to state 832
    MUL 	shift, and go to state 187
    ID  	shift, and go to state 188

    option_identifier_array_declaration	go to state 369
    identifier	go to state 190
=======
    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 322)

    $default	reduce using rule 322 (option_frame_identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 772

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 656
=======
    OPEN_PAR	shift, and go to state 876
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 773

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    OPEN_PAR	shift, and go to state 355
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 177
    ID  	shift, and go to state 172

<<<<<<< HEAD
    $default	reduce using rule 341 (for_sta_control)
=======
    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 832
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ass_statement	go to state 877
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 179
    point_exp	go to state 71
    identifier	go to state 72
    for_sta_control	go to state 878
    struct_member_exp	go to state 80



state 774

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 122
    MY_TRUE	shift, and go to state 123
    MY_FALSE	shift, and go to state 124
    OPEN_PAR	shift, and go to state 125
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 126
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 128
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 879
    prime_bool_exp	go to state 130
    identifier	go to state 103
    strliteral	go to state 131
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 775

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44

    type_define	go to state 880
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    OPEN_PAR	shift, and go to state 357
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    $default	reduce using rule 341 (for_sta_control)

    ass_statement	go to state 877
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    for_sta_control	go to state 878
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 776

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA error .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 879
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 777

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 200)

    COMMA	shift, and go to state 639
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 203 (inner_option_list_value)

<<<<<<< HEAD
    ari_operator	go to state 237
    inner_option_list_value	go to state 881
=======
    type_define	go to state 880
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 778

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 639
    CON 	shift, and go to state 486

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 882



state 779

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 201)

    COMMA	shift, and go to state 639

    $default	reduce using rule 203 (inner_option_list_value)

<<<<<<< HEAD
    inner_option_list_value	go to state 883
=======
    ari_operator	go to state 239
    inner_option_list_value	go to state 881
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 780

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 197)

<<<<<<< HEAD
    $default	reduce using rule 197 (option_struct_list_value)
=======
    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 882
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 781

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

<<<<<<< HEAD
    $default	reduce using rule 199 (option_struct_list_value)
=======
    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 883
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 782

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 198)

    $default	reduce using rule 198 (option_struct_list_value)



state 783

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 194)

    $default	reduce using rule 194 (option_list_value)



state 784

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 785

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 195)

    $default	reduce using rule 195 (option_list_value)



state 786

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 624
    CHARDECLARATION	shift, and go to state 625
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 626
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 627
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 787

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (rightaddrshift)



state 788

<<<<<<< HEAD
    option_output  ->  COMMA ass_right option_output .   (rule 354)

    $default	reduce using rule 354 (option_output)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 626
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 628
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 629
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 789

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 884
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 790

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 185
    CLOSE_PAR	shift, and go to state 885
    OPEN_MPAR	shift, and go to state 186

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)
=======
    option_output  ->  COMMA ass_right option_output .   (rule 354)

    $default	reduce using rule 354 (option_output)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 791

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 319)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 884
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 886

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)

<<<<<<< HEAD


state 793

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 887
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
state 792

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 885
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 793

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 185
    CLOSE_PAR	shift, and go to state 888
    OPEN_MPAR	shift, and go to state 186

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 886

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 794

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 889

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 887
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 795

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 185
    CLOSE_PAR	shift, and go to state 890
    OPEN_MPAR	shift, and go to state 186
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 888
    OPEN_MPAR	shift, and go to state 188
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 796

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 889

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 797

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 892
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 839
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 890
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 798

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 893
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 895
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 841
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107


=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 891

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 800

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449
=======
state 799
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 286 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 896
=======
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 892
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 839
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 800

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 893
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 895
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_MPAR	shift, and go to state 897

<<<<<<< HEAD
=======
state 801
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 802

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 84)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 898
=======
    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 896
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 802

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 897



state 803

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 375)

<<<<<<< HEAD
    $default	reduce using rule 375 (struct_member_exp)
=======
    CLOSE_PAR	shift, and go to state 898
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 804

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 371)

<<<<<<< HEAD
    $default	reduce using rule 371 (struct_member_exp)
=======
    CLOSE_MPAR	shift, and go to state 899
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 805

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 900
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 806

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 807

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 59)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 901
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80
=======
    CLOSE_MPAR	shift, and go to state 900
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 808

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 902
    ari_operator	go to state 237

<<<<<<< HEAD
=======
state 809
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 810
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 901
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    ADD 	[reduce using rule 153 (point_exp)]
    SUB 	[reduce using rule 153 (point_exp)]
    $default	reduce using rule 153 (point_exp)
=======
state 810
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ari_operator	go to state 237



<<<<<<< HEAD
state 811
=======
    option_ari_exp	go to state 902
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 903
    ID  	shift, and go to state 904
    INTLITERAL	shift, and go to state 905

<<<<<<< HEAD
=======
state 811
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 812

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_PAR	shift, and go to state 906
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 908



state 812

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    ID  	shift, and go to state 909
    INTLITERAL	shift, and go to state 910
=======
    OPEN_PAR	shift, and go to state 903
    ID  	shift, and go to state 904
    INTLITERAL	shift, and go to state 905
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 813

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 911
=======
    OPEN_PAR	shift, and go to state 906
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 908
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 814

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 912
=======
    ID  	shift, and go to state 909
    INTLITERAL	shift, and go to state 910
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 815

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    MUL 	shift, and go to state 815
=======
    CLOSE_PAR	shift, and go to state 911
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 816

    option_input  ->  COMMA array option_input .   (rule 362)

<<<<<<< HEAD
    $default	reduce using rule 362 (option_input)
=======
    CLOSE_PAR	shift, and go to state 912
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 817

    option_input  ->  COMMA identifier option_input .   (rule 361)

<<<<<<< HEAD
    $default	reduce using rule 361 (option_input)
=======
    MUL 	shift, and go to state 816



state 818

    option_input  ->  COMMA array option_input .   (rule 362)

    $default	reduce using rule 362 (option_input)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 819

<<<<<<< HEAD
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 343
    ADDRESS	shift, and go to state 364
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 304
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 127
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 306 (option_function_identifier)

    function	go to state 95
    type_define	go to state 344
    ass_right	go to state 365
    rightaddrshift	go to state 306
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 307
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 308
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 346
    all_type_define	go to state 366
    option_function_identifier	go to state 913
    identifier	go to state 103
    strliteral	go to state 311
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    option_input  ->  COMMA identifier option_input .   (rule 361)

    $default	reduce using rule 361 (option_input)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 820

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 308)

    $default	reduce using rule 308 (inner_option_function_identifier)
=======
    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_function_identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 821

<<<<<<< HEAD
    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 146)

    $default	reduce using rule 146 (option_ari_exp)



state 822

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 823

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 98)
=======
    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 147)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 822

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 372
    ASS_P	shift, and go to state 914

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 915

<<<<<<< HEAD
=======
state 823
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 825

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)

<<<<<<< HEAD
=======
state 824
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 826
=======
    COMMA	shift, and go to state 374
    ASS_P	shift, and go to state 913
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 381)

<<<<<<< HEAD
    $default	reduce using rule 381 (option_struct_member_exp)
=======
    inner_option_identifier_array_declaration	go to state 914
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 825

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)
=======
    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 826

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)
=======
    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 827

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 916
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120
=======
    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 828

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 162)

    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ADD 	[reduce using rule 162 (option_exp_else_statement)]
    SUB 	[reduce using rule 162 (option_exp_else_statement)]
    $default	reduce using rule 162 (option_exp_else_statement)

    ari_operator	go to state 237
=======
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 829

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 229)

<<<<<<< HEAD
    $default	reduce using rule 229 (type_cast)
=======
    CLOSE_BPAR	shift, and go to state 915
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 830

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 917
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 833

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 161)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

<<<<<<< HEAD
    INTER_OR	shift, and go to state 238
    CON 	shift, and go to state 239
    ADDRESS	shift, and go to state 240
    LST 	shift, and go to state 247
    RST 	shift, and go to state 248
    MUL 	shift, and go to state 249
    DIV 	shift, and go to state 250
    MOD 	shift, and go to state 251
=======
state 831
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    INTER_OR	[reduce using rule 161 (type_cast_alg_exp)]
    CON 	[reduce using rule 161 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 161 (type_cast_alg_exp)]
    LST 	[reduce using rule 161 (type_cast_alg_exp)]
    RST 	[reduce using rule 161 (type_cast_alg_exp)]
    MUL 	[reduce using rule 161 (type_cast_alg_exp)]
    DIV 	[reduce using rule 161 (type_cast_alg_exp)]
    MOD 	[reduce using rule 161 (type_cast_alg_exp)]
    $default	reduce using rule 161 (type_cast_alg_exp)

    bi_operator	go to state 252



state 832

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 223)
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 916
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 223 (type_cast)

<<<<<<< HEAD
=======
state 833
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 835

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 834

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 835

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 836

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 841
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 837

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 838

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 918
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 839

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 840

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 919
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 917
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 841

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 842

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    ID  	shift, and go to state 904
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 918
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 843

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 907



state 844

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    ID  	shift, and go to state 909
=======
    ID  	shift, and go to state 904
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 845

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 920
=======
    ID  	shift, and go to state 907
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 846

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

<<<<<<< HEAD
    COLON	shift, and go to state 921
=======
    ID  	shift, and go to state 909
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 847

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 344)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 922
=======
    CLOSE_PAR	shift, and go to state 919
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 848

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 342)

    $default	reduce using rule 342 (switch_statement)
=======
    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    COLON	shift, and go to state 920
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 849

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 285)

    OPEN_PAR	shift, and go to state 923
=======
    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 344)

    OPEN_PAR	shift, and go to state 921
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 850

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 342)

    $default	reduce using rule 342 (switch_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 851

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 271)

<<<<<<< HEAD
    COMMA	shift, and go to state 281
=======
    OPEN_PAR	shift, and go to state 922
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 924

<<<<<<< HEAD
=======
state 852
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 854

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)

<<<<<<< HEAD
=======
state 853
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 855

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 272)

<<<<<<< HEAD
    $default	reduce using rule 272 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 923
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 854

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 855

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 267)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 925



state 856

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 857

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 924
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 860

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 284)

<<<<<<< HEAD
    COMMA	shift, and go to state 281
=======
state 858
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 926



state 859

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 927

<<<<<<< HEAD
=======
state 860
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 862

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 282)

<<<<<<< HEAD
    $default	reduce using rule 282 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 925
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 861

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 928
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



<<<<<<< HEAD
state 864
=======
    inner_option_define_identifier	go to state 926
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)

<<<<<<< HEAD
=======
state 862
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 865

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

<<<<<<< HEAD
    $default	reduce using rule 68 (empty_statement)

    statement	go to state 929
    empty_statement	go to state 930
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80
=======
state 863

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 927
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 864

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 296)

    OPEN_PAR	shift, and go to state 931



state 865

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 292)

<<<<<<< HEAD
    $default	reduce using rule 292 (inner_option_define_identifier)
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 69 (empty_statement)

    statement	go to state 928
    empty_statement	go to state 929
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 866

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 291)

<<<<<<< HEAD
    $default	reduce using rule 291 (inner_option_define_identifier)
=======
    OPEN_PAR	shift, and go to state 930
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 867

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 868

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 932
=======
state 869
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 871

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 301)

<<<<<<< HEAD
    $default	reduce using rule 301 (inner_option_define_identifier)
=======
state 870
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 872

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 933
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    inner_option_define_identifier	go to state 931
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 871

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 872

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 934
    CLOSE_MPAR	shift, and go to state 935
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ari_operator	go to state 237
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 932
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 873

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 874

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 936
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80
=======
    COMMA	shift, and go to state 933
    CLOSE_MPAR	shift, and go to state 934
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 875

    for_sta_control  ->  ass_statement .   (rule 340)

    $default	reduce using rule 340 (for_sta_control)



state 876

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 334)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 937
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 935
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 877

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    CLOSE_PAR	shift, and go to state 938
    OR  	shift, and go to state 270
    AND 	shift, and go to state 271
=======
    for_sta_control  ->  ass_statement .   (rule 340)

    $default	reduce using rule 340 (for_sta_control)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 878

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 334)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 936



state 879

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 200)

<<<<<<< HEAD
    $default	reduce using rule 200 (inner_option_list_value)
=======
    CLOSE_PAR	shift, and go to state 937
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 880

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 202)

<<<<<<< HEAD
    $default	reduce using rule 202 (inner_option_list_value)
=======
    CLOSE_PAR	shift, and go to state 938
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 881

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 201)

    $default	reduce using rule 201 (inner_option_list_value)



state 882

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 940
    CHARDECLARATION	shift, and go to state 941
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 942
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226



state 883

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 943



state 884

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 939
    CHARDECLARATION	shift, and go to state 940
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 941
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_MPAR	shift, and go to state 944


<<<<<<< HEAD
=======
state 885
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 887

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 945
    CHARDECLARATION	shift, and go to state 946
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 947
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
    OPEN_MPAR	shift, and go to state 942
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 886

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 948
=======
    OPEN_MPAR	shift, and go to state 943
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 887

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    OPEN_MPAR	shift, and go to state 949
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 944
    CHARDECLARATION	shift, and go to state 945
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 946
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 888

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 947



state 889

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 948



state 890

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 316)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 185
    CLOSE_PAR	shift, and go to state 952
    OPEN_MPAR	shift, and go to state 186
=======
    OPEN_MPAR	shift, and go to state 949
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)


<<<<<<< HEAD
=======
state 891
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 893

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 213
    CHARDECLARATION	shift, and go to state 214
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 216
    OPEN_PAR	shift, and go to state 953
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 218
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
    OPEN_MPAR	shift, and go to state 950
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 892

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 185
    CLOSE_PAR	shift, and go to state 954
    OPEN_MPAR	shift, and go to state 186
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 951
    OPEN_MPAR	shift, and go to state 188
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 893

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 955

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 952
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 894

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 956
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 953
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 895

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 319)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 954

<<<<<<< HEAD
    CLOSE_PAR	[reduce using rule 139 (array)]
    $default	reduce using rule 139 (array)
=======
    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 896

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 84)

<<<<<<< HEAD
    $default	reduce using rule 84 (declaration)
=======
    CLOSE_PAR	shift, and go to state 955
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 897

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

<<<<<<< HEAD
    $default	reduce using rule 152 (point_exp)
=======
    CLOSE_PAR	shift, and go to state 956

    CLOSE_PAR	[reduce using rule 140 (array)]
    $default	reduce using rule 140 (array)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 898

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 899

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 958
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 900

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_MPAR	shift, and go to state 959



state 901

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 960
=======
    CLOSE_BPAR	shift, and go to state 957
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 902

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 885
=======
    CLOSE_MPAR	shift, and go to state 958
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 903

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 886
=======
    OPEN_PAR	shift, and go to state 959
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 904

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 961
=======
    CLOSE_PAR	shift, and go to state 885
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 905

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 886



state 906

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 889
=======
    OPEN_PAR	shift, and go to state 960
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 907

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 888



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 889



state 909

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    ID  	shift, and go to state 962
=======
    CLOSE_PAR	shift, and go to state 890
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 910

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 963
    ID  	shift, and go to state 964
    INTLITERAL	shift, and go to state 965
=======
    CLOSE_PAR	shift, and go to state 891
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 911

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 309)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 966
=======
    ID  	shift, and go to state 961
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 912

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 650
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303
    STRLITERAL	shift, and go to state 127

<<<<<<< HEAD
    array_exp	go to state 967
    option_list_value	go to state 309
    option_struct_list_value	go to state 310
    strliteral	go to state 968



state 915

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)
=======
    OPEN_PAR	shift, and go to state 962
    ID  	shift, and go to state 963
    INTLITERAL	shift, and go to state 964
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 913

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

<<<<<<< HEAD
    $default	reduce using rule 23 (complexProposition)
=======
    array_exp	go to state 965
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 966
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 914

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 915

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 916

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 917

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 964



state 918

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    OPEN_PAR	shift, and go to state 969



state 919

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 344)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 970
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80
=======
    ID  	shift, and go to state 963
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 920

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 285)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449
=======
    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    OPEN_PAR	shift, and go to state 967
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 286 (option_function_parameter_list)

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 971

<<<<<<< HEAD


state 924
=======
state 921

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 344)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 968
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)

<<<<<<< HEAD
=======
state 922
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 925

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 267)

<<<<<<< HEAD
    $default	reduce using rule 267 (option_function_parameter_list)
=======
    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 969
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 923

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 924

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 925

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 281)

    CLOSE_MPAR	shift, and go to state 972
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    ari_operator	go to state 237



state 926

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 67)

    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194

    $default	reduce using rule 67 (empty_statement)



state 927

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 973
=======
    CLOSE_MPAR	shift, and go to state 970
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 928

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 296)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449

    $default	reduce using rule 286 (option_function_parameter_list)

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 974



state 929

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 295)

<<<<<<< HEAD
    $default	reduce using rule 295 (inner_option_define_identifier)
=======
    CLOSE_BPAR	shift, and go to state 971
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 930

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)

    CLOSE_MPAR	shift, and go to state 975
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    ari_operator	go to state 237
=======
    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 972
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 931

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 976
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 932

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 281

<<<<<<< HEAD
    $default	reduce using rule 297 (inner_option_define_identifier)
=======
    CLOSE_MPAR	shift, and go to state 973
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    inner_option_define_identifier	go to state 977



state 933

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 978
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 974
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 934

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 334)

    error	shift, and go to state 297
    OPEN_BPAR	shift, and go to state 298

<<<<<<< HEAD
    statement_bpar	go to state 979
=======
    inner_option_define_identifier	go to state 975
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 935

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

<<<<<<< HEAD
    $default	reduce using rule 44 (statement)
=======
    CLOSE_PAR	shift, and go to state 976
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 936

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 980
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 334)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 977
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 937

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 981



state 938

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 982
=======
    OPEN_PAR	shift, and go to state 978
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 939

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 983
=======
    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 979
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 940

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 984
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 980
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 941

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 985
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 981
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 942

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 986
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 982
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 943

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 987
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 983
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 988
=======
    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 984
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 945

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 989
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 985
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 946

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 990
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 986
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 947

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 991
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 987
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 948

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 992
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 988
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 949

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 993
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 989
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 950

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 212
    INTDECLARATION	shift, and go to state 994
    CHARDECLARATION	shift, and go to state 995
    VOIDDECLARATION	shift, and go to state 215
    FLOATDECLARATION	shift, and go to state 412
    OPEN_PAR	shift, and go to state 217
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 996
    SIGNED	shift, and go to state 219
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 220
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 221
    point_exp	go to state 222
    ari_exp	go to state 223
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 224
    type_cast	go to state 102
    identifier	go to state 225
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 226
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 990
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 951

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 997
=======
    OPEN_MPAR	shift, and go to state 991
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 952

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 998
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 992
    CHARDECLARATION	shift, and go to state 993
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 994
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 953

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

<<<<<<< HEAD
    $default	reduce using rule 85 (declaration)
=======
    OPEN_MPAR	shift, and go to state 995
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 954

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 999
=======
    OPEN_MPAR	shift, and go to state 996
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 955

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 956

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 957
=======
    OPEN_PAR	shift, and go to state 997
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 957

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTDECLARATION	shift, and go to state 1000
    CHARDECLARATION	shift, and go to state 1001
    UNSIGNED	shift, and go to state 1002



state 958

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1003
    CHARDECLARATION	shift, and go to state 1004
    UNSIGNED	shift, and go to state 1005
=======
    CLOSE_PAR	shift, and go to state 956
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 959

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 952
=======
    INTDECLARATION	shift, and go to state 998
    CHARDECLARATION	shift, and go to state 999
    UNSIGNED	shift, and go to state 1000
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 960

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1006
=======
    INTDECLARATION	shift, and go to state 1001
    CHARDECLARATION	shift, and go to state 1002
    UNSIGNED	shift, and go to state 1003
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 961

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 951



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 955
=======
    OPEN_PAR	shift, and go to state 1004
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 963

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 309)

<<<<<<< HEAD
    COMMA	shift, and go to state 536
=======
    CLOSE_PAR	shift, and go to state 953
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	[reduce using rule 69 (function)]
    CLOSE_PAR	reduce using rule 69 (function)
    CLOSE_PAR	[reduce using rule 310 (inner_option_function_identifier)]
    $default	reduce using rule 69 (function)

    inner_option_function_identifier	go to state 1007

<<<<<<< HEAD
=======
state 964
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 967

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    COMMA	shift, and go to state 372
    CON 	shift, and go to state 486

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1008



state 968
=======
    CLOSE_PAR	shift, and go to state 954
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 372

<<<<<<< HEAD
    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)
=======
state 965
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    inner_option_identifier_array_declaration	go to state 1009



<<<<<<< HEAD
state 969
=======
    inner_option_identifier_array_declaration	go to state 1005
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 343)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1010
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80

<<<<<<< HEAD
=======
state 966
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 970

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 344)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1011
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194
=======
    inner_option_identifier_array_declaration	go to state 1006
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 967

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 285)

    CLOSE_PAR	shift, and go to state 1012
=======
    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 343)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1007
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 968

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1013
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 344)

    CLOSE_PAR	shift, and go to state 1008
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 969

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

<<<<<<< HEAD
    $default	reduce using rule 60 (statement)
=======
    CLOSE_PAR	shift, and go to state 1009
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 970

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 296)

    CLOSE_PAR	shift, and go to state 1014


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 1010
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 975

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

<<<<<<< HEAD
    COMMA	shift, and go to state 281
=======
state 971
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1015



state 972

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 299)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1016
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
=======
    CLOSE_PAR	shift, and go to state 1011
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    ari_operator	go to state 237


<<<<<<< HEAD
=======
state 973
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 977

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 1012

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 974

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)

    CLOSE_MPAR	shift, and go to state 1013
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 56 (statement)



state 975

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 334)

    $default	reduce using rule 334 (extend_for_statement)



state 976

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449

    $default	reduce using rule 286 (option_function_parameter_list)

    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 1017

<<<<<<< HEAD


state 981
=======
state 977

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 334)

    $default	reduce using rule 334 (extend_for_statement)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1018
    MUL 	shift, and go to state 572

<<<<<<< HEAD
=======
state 978
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1019
    MUL 	shift, and go to state 575
=======
    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 1014
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1020
=======
    CLOSE_PAR	shift, and go to state 1015
    MUL 	shift, and go to state 574
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 980

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
=======
    CLOSE_PAR	shift, and go to state 1016
    MUL 	shift, and go to state 577
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1021
    ari_operator	go to state 237

<<<<<<< HEAD
=======
state 981
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 985
=======
    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1017
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)
=======
state 982
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_ari_exp	go to state 1022
    ari_operator	go to state 237



<<<<<<< HEAD
state 986
=======
    option_ari_exp	go to state 1018
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1023
    MUL 	shift, and go to state 572

<<<<<<< HEAD
=======
state 983
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1024
    MUL 	shift, and go to state 575
=======
    option_ari_exp	go to state 1019
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1025
=======
    CLOSE_PAR	shift, and go to state 1020
    MUL 	shift, and go to state 574
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 985

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1026
    ari_operator	go to state 237
=======
    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 577
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 986

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 117)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1027
    ari_operator	go to state 237
=======
    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1022
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 987

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1028
    ari_operator	go to state 237
=======
    option_ari_exp	go to state 1023
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1029
    ari_operator	go to state 237
=======
    option_ari_exp	go to state 1024
    ari_operator	go to state 239



state 989
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 993

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1030
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    option_ari_exp	go to state 1025
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 403
    MUL 	shift, and go to state 1031
=======
    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1026
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 991

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 1032
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1027
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 1033
=======
    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 1028
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 993

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1034
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 1029
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 994

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1035
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 1030
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 995

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1031
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 447
    UNSIGNED	shift, and go to state 343
    ID  	shift, and go to state 448
    STRUCT_TYPE	shift, and go to state 449

    $default	reduce using rule 286 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 344
    sign_type_define	go to state 346
    all_type_define	go to state 450
    option_function_parameter_list	go to state 1036

=======
state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1032
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 1000

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
=======
state 997
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    MUL 	shift, and go to state 1037



<<<<<<< HEAD
state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1038
=======
    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 1033
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1039
=======
    MUL 	shift, and go to state 1034
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 999

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1035



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    MUL 	shift, and go to state 1041
=======
    CHARDECLARATION	shift, and go to state 1036
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1042
=======
    MUL 	shift, and go to state 1037
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1043
    CHARDECLARATION	shift, and go to state 1044
    UNSIGNED	shift, and go to state 1045
=======
    MUL 	shift, and go to state 1038
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1003

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 309)

<<<<<<< HEAD
    $default	reduce using rule 309 (inner_option_function_identifier)
=======
    CHARDECLARATION	shift, and go to state 1039
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1004

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

<<<<<<< HEAD
    $default	reduce using rule 99 (option_identifier_array_declaration)



state 1009

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)
=======
    INTDECLARATION	shift, and go to state 1040
    CHARDECLARATION	shift, and go to state 1041
    UNSIGNED	shift, and go to state 1042
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1005

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 343)

    CLOSE_PAR	shift, and go to state 1046
    CHOP	shift, and go to state 191
    OR  	shift, and go to state 192
    PARALLEL	shift, and go to state 193
    AND 	shift, and go to state 194



state 1006

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 344)

    $default	reduce using rule 344 (case_par)



state 1007

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1047
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 343)

    CLOSE_PAR	shift, and go to state 1043
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1008

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)
=======
    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 344)

    $default	reduce using rule 344 (case_par)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1009

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 296)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1048
=======
    inner_option_define_identifier	go to state 1044
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1010

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 1011

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 281

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1049
=======
    inner_option_define_identifier	go to state 1045
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1012

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 1050



state 1013

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 791
    INTLITERAL	shift, and go to state 1051
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 710
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1046
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1014

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 794
    INTLITERAL	shift, and go to state 1052
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 712
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 1047
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1015

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1053
    MUL 	shift, and go to state 727
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 1048
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1016

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1054
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 1049
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1055
=======
    CLOSE_PAR	shift, and go to state 1050
    MUL 	shift, and go to state 728
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1018

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 791
    INTLITERAL	shift, and go to state 1056
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 710
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1051
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1019

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 794
    INTLITERAL	shift, and go to state 1057
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 712
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1052
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1020

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1058
    MUL 	shift, and go to state 727
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 1053
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1021

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1059
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 1054
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 117)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1060
=======
    CLOSE_PAR	shift, and go to state 1055
    MUL 	shift, and go to state 728
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1023

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1056



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1057



state 1025

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
=======
    CLOSE_MPAR	shift, and go to state 1058
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1063
    ari_operator	go to state 237

<<<<<<< HEAD
=======
state 1026
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 1031
=======
    CLOSE_MPAR	shift, and go to state 1059
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1064
    MUL 	shift, and go to state 572

<<<<<<< HEAD
=======
state 1027
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1065
    MUL 	shift, and go to state 575
=======
    option_ari_exp	go to state 1060
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1066
=======
    CLOSE_PAR	shift, and go to state 1061
    MUL 	shift, and go to state 574
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1029

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
=======
    CLOSE_PAR	shift, and go to state 1062
    MUL 	shift, and go to state 577
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1067
    ari_operator	go to state 237

<<<<<<< HEAD
=======
state 1030
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 1035
=======
    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1063
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)
=======
state 1031
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_ari_exp	go to state 1068
    ari_operator	go to state 237



<<<<<<< HEAD
state 1036
=======
    option_ari_exp	go to state 1064
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 1069

<<<<<<< HEAD
=======
state 1032
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1070
=======
    option_ari_exp	go to state 1065
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1066



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    MUL 	shift, and go to state 1072
=======
    CLOSE_PAR	shift, and go to state 1067
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1068



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1074
=======
    MUL 	shift, and go to state 1069
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    MUL 	shift, and go to state 1075
=======
    CLOSE_PAR	shift, and go to state 1070
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1038

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    MUL 	shift, and go to state 1076
=======
    CLOSE_PAR	shift, and go to state 1071
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1072



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1078
=======
    MUL 	shift, and go to state 1073
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1041

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 343)

<<<<<<< HEAD
    CASE	shift, and go to state 737
    BREAK	shift, and go to state 1079
    DEFAULT	shift, and go to state 738
=======
    MUL 	shift, and go to state 1074
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 347 (init_case_par)

    case_par	go to state 1080
    init_case_par	go to state 1081

<<<<<<< HEAD
=======
state 1042
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 1047
=======
    CHARDECLARATION	shift, and go to state 1075
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)

<<<<<<< HEAD


state 1048

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)
=======
state 1043

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 343)

    CASE	shift, and go to state 738
    BREAK	shift, and go to state 1076
    DEFAULT	shift, and go to state 739

    $default	reduce using rule 347 (init_case_par)

    case_par	go to state 1077
    init_case_par	go to state 1078
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1044

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 1045

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 135)

    OPEN_PAR	shift, and go to state 1082
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 1083

    function	go to state 1084
    array	go to state 1085



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1086

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 319)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1087

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
=======
    OPEN_PAR	shift, and go to state 1079
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1080

    function	go to state 1081
    array	go to state 1082
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1048

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1088
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 841
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1083

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1049

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1084

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1050

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1085
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1051

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1089

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)


<<<<<<< HEAD
=======
state 1052
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1090

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)

<<<<<<< HEAD


state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1091
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 841
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1086

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1054

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1087

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1055

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 117)

    $default	reduce using rule 117 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1088
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1056

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1058

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1092



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 791
    INTLITERAL	shift, and go to state 1093
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 710
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1060

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 794
    INTLITERAL	shift, and go to state 1094
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 712
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1089
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1061

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1095
    MUL 	shift, and go to state 727
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 1090
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1062

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1096
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 1091
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1097
=======
    CLOSE_PAR	shift, and go to state 1092
    MUL 	shift, and go to state 728
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1064

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 87)

<<<<<<< HEAD
    ASS_P	shift, and go to state 1098

    $default	reduce using rule 86 (declaration)
=======
    CLOSE_MPAR	shift, and go to state 1093
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1099
=======
    CLOSE_MPAR	shift, and go to state 1094
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1100
=======
    ASS_P	shift, and go to state 1095

    $default	reduce using rule 87 (declaration)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1101
=======
    INTLITERAL	shift, and go to state 1096
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1097



state 1069

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1103
=======
    CLOSE_PAR	shift, and go to state 1098
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1104
=======
    INTLITERAL	shift, and go to state 1099
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1071

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1105
=======
    INTLITERAL	shift, and go to state 1100
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1101



state 1073

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    MUL 	shift, and go to state 1107
=======
    CLOSE_PAR	shift, and go to state 1102
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1074

    init_case_par  ->  BREAK . case_par   (rule 345)

<<<<<<< HEAD
    CASE	shift, and go to state 737
    DEFAULT	shift, and go to state 738

    case_par	go to state 1108
=======
    CLOSE_PAR	shift, and go to state 1103
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1075

    init_case_par  ->  case_par .   (rule 346)

<<<<<<< HEAD
    $default	reduce using rule 346 (init_case_par)
=======
    MUL 	shift, and go to state 1104
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1076

<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 343)

    $default	reduce using rule 343 (case_par)
=======
    init_case_par  ->  BREAK . case_par   (rule 345)

    CASE	shift, and go to state 738
    DEFAULT	shift, and go to state 739

    case_par	go to state 1105
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1077

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)

    OPEN_PAR	shift, and go to state 1109
    ID  	shift, and go to state 1110

    array	go to state 549
=======
    init_case_par  ->  case_par .   (rule 346)

    $default	reduce using rule 346 (init_case_par)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1078

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_PAR	shift, and go to state 185
    OPEN_MPAR	shift, and go to state 186
=======
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 343)

    $default	reduce using rule 343 (case_par)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1079

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 135)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)

    OPEN_PAR	shift, and go to state 1106
    ID  	shift, and go to state 1107
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 135 (ass_right)



state 1080

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 201



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1111



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1112



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1108

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1109



state 1085

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 319)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	shift, and go to state 1110

<<<<<<< HEAD
=======
    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1111

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1087

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

<<<<<<< HEAD
    $default	reduce using rule 141 (array)
=======
    CLOSE_PAR	shift, and go to state 1112
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1088

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1117
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1113
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1118

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)

<<<<<<< HEAD


state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1119
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 709
    simple_ari_exp	go to state 570
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 841
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1114

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1091

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1115

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1092

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1116
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1093

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 650
    OPEN_BPAR	shift, and go to state 302
    OPEN_MPAR	shift, and go to state 303

    array_exp	go to state 1120
    option_list_value	go to state 309
    option_struct_list_value	go to state 310



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1086



state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1087
=======
    array_exp	go to state 1117
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1121
=======
    CLOSE_PAR	shift, and go to state 1083
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1084



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1090
=======
    INTLITERAL	shift, and go to state 1118
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1122
=======
    CLOSE_PAR	shift, and go to state 1086
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1123
=======
    CLOSE_PAR	shift, and go to state 1087
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1119



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1125
=======
    INTLITERAL	shift, and go to state 1120
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1103

    init_case_par  ->  BREAK case_par .   (rule 345)

<<<<<<< HEAD
    $default	reduce using rule 345 (init_case_par)
=======
    INTLITERAL	shift, and go to state 1121
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1104

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 1109
    UNSIGNED	shift, and go to state 597
    ID  	shift, and go to state 1110

<<<<<<< HEAD
    array	go to state 549
=======
    CLOSE_PAR	shift, and go to state 1122
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1105

<<<<<<< HEAD
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 186
=======
    init_case_par  ->  BREAK case_par .   (rule 345)

    $default	reduce using rule 345 (init_case_par)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1106

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 1106
    UNSIGNED	shift, and go to state 599
    ID  	shift, and go to state 1107
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    OPEN_MPAR	shift, and go to state 1126



state 1107

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1127



state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1128
=======
    OPEN_MPAR	shift, and go to state 1123
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1124



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1130
=======
    CLOSE_PAR	shift, and go to state 1125
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1131
=======
    OPEN_MPAR	shift, and go to state 1126
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1132
=======
    OPEN_MPAR	shift, and go to state 1127
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1128



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1129

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1115

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 87)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    CON 	shift, and go to state 486

<<<<<<< HEAD
    $default	reduce using rule 87 (declaration)
=======
    CLOSE_PAR	shift, and go to state 1130
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1116

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1113
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1131

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1116



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1117
=======
    CLOSE_PAR	shift, and go to state 1110
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1113



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1135
=======
    CLOSE_PAR	shift, and go to state 1114
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1121

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1136
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1115
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1122

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1137
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1132
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1123

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1138
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1133
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1124

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1139
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1134
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1125

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1140
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1135
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1126

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1141
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1136
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1127

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1142
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1137
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1138



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1144
=======
    OPEN_MPAR	shift, and go to state 1139
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1134
=======
    OPEN_MPAR	shift, and go to state 1140
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
=======
    CLOSE_PAR	shift, and go to state 1141
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1145
    ari_operator	go to state 237

<<<<<<< HEAD
=======
state 1132
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc


<<<<<<< HEAD
state 1137
=======
    CLOSE_PAR	shift, and go to state 1131
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1146
    ari_operator	go to state 237
=======
state 1133
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1138

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1147
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    option_ari_exp	go to state 1142
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1148
    ari_operator	go to state 237
=======
    option_ari_exp	go to state 1143
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1135

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1144
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1149
    ari_operator	go to state 237
=======
state 1136
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1141

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1150
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    option_ari_exp	go to state 1145
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1137

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1151
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1146
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1138

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1152
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1147
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1139

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1153
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1148
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1140

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1154
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1149
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1155
=======
    OPEN_MPAR	shift, and go to state 1150
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1156
    ari_operator	go to state 237
=======
    CLOSE_MPAR	shift, and go to state 1151
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1152



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1158


<<<<<<< HEAD
=======
    option_ari_exp	go to state 1153
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236
=======
state 1145
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1159
    ari_operator	go to state 237
=======
    CLOSE_MPAR	shift, and go to state 1154
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1160
    ari_operator	go to state 237
=======
    CLOSE_MPAR	shift, and go to state 1155
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1161
    ari_operator	go to state 237
=======
    option_ari_exp	go to state 1156
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1148

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1162
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1157
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

<<<<<<< HEAD
    $default	reduce using rule 129 (leftaddrshift)
=======
    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1158
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1150

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1159
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1163



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

<<<<<<< HEAD
    $default	reduce using rule 121 (leftaddrshift)
=======
    CLOSE_MPAR	shift, and go to state 1160
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1164



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1165



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1161



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 539
    ADD 	shift, and go to state 235
    SUB 	shift, and go to state 236

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1167
    ari_operator	go to state 237
=======
    CLOSE_MPAR	shift, and go to state 1162
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

<<<<<<< HEAD
    $default	reduce using rule 128 (leftaddrshift)
=======
    CLOSE_MPAR	shift, and go to state 1163
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

<<<<<<< HEAD
    $default	reduce using rule 122 (leftaddrshift)
=======
    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1164
    ari_operator	go to state 239
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1168



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1164

<<<<<<< HEAD
    $   	go to state 1170
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1165
>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc



state 1165

    $   	go to state 1171



state 1166

<<<<<<< HEAD
=======
    $   	go to state 1167



state 1167

    $   	go to state 1168



state 1168

>>>>>>> 1f4c235c2433c82837b26242c91144349a1d5abc
    $default	accept
