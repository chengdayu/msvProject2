Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   PREFIX


Useless rules:

#105   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#106   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	;
#108   inner_option_array_declaration :	 COMMA error;


Conflict in state 84 between rule 13 and token CHOP resolved as reduce.
Conflict in state 84 between rule 13 and token OR resolved as reduce.
Conflict in state 84 between rule 13 and token AND resolved as reduce.
Conflict in state 84 between rule 13 and token IFF resolved as reduce.
Conflict in state 84 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 84 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 85 between rule 22 and token CHOP resolved as reduce.
Conflict in state 85 between rule 22 and token OR resolved as reduce.
Conflict in state 85 between rule 22 and token AND resolved as reduce.
Conflict in state 85 between rule 22 and token IFF resolved as reduce.
Conflict in state 85 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 21 and token CHOP resolved as reduce.
Conflict in state 113 between rule 21 and token OR resolved as reduce.
Conflict in state 113 between rule 21 and token AND resolved as reduce.
Conflict in state 113 between rule 21 and token IFF resolved as reduce.
Conflict in state 113 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 10 and token CHOP resolved as reduce.
Conflict in state 114 between rule 10 and token OR resolved as reduce.
Conflict in state 114 between rule 10 and token AND resolved as reduce.
Conflict in state 114 between rule 10 and token IFF resolved as reduce.
Conflict in state 114 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 9 and token CHOP resolved as reduce.
Conflict in state 115 between rule 9 and token OR resolved as reduce.
Conflict in state 115 between rule 9 and token AND resolved as reduce.
Conflict in state 115 between rule 9 and token IFF resolved as reduce.
Conflict in state 115 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 116 between rule 20 and token CHOP resolved as reduce.
Conflict in state 116 between rule 20 and token OR resolved as reduce.
Conflict in state 116 between rule 20 and token AND resolved as reduce.
Conflict in state 116 between rule 20 and token IFF resolved as reduce.
Conflict in state 116 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 116 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 117 between rule 12 and token CHOP resolved as reduce.
Conflict in state 117 between rule 12 and token OR resolved as reduce.
Conflict in state 117 between rule 12 and token AND resolved as reduce.
Conflict in state 117 between rule 12 and token IFF resolved as reduce.
Conflict in state 117 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 117 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 118 between rule 11 and token CHOP resolved as reduce.
Conflict in state 118 between rule 11 and token OR resolved as reduce.
Conflict in state 118 between rule 11 and token AND resolved as reduce.
Conflict in state 118 between rule 11 and token IFF resolved as reduce.
Conflict in state 118 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 118 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 222 between rule 213 and token IMPLY resolved as shift.
Conflict in state 225 between rule 212 and token IMPLY resolved as shift.
Conflict in state 229 between rule 176 and token INTER_OR resolved as reduce.
Conflict in state 229 between rule 176 and token BOOL_OR resolved as reduce.
Conflict in state 229 between rule 176 and token CON resolved as reduce.
Conflict in state 229 between rule 176 and token ADDRESS resolved as reduce.
Conflict in state 229 between rule 176 and token BOOL_AND resolved as reduce.
Conflict in state 229 between rule 176 and token NE resolved as reduce.
Conflict in state 229 between rule 176 and token EQ resolved as reduce.
Conflict in state 229 between rule 176 and token GE resolved as reduce.
Conflict in state 229 between rule 176 and token LE resolved as reduce.
Conflict in state 229 between rule 176 and token GT resolved as reduce.
Conflict in state 229 between rule 176 and token LT resolved as reduce.
Conflict in state 229 between rule 176 and token LST resolved as reduce.
Conflict in state 229 between rule 176 and token RST resolved as reduce.
Conflict in state 229 between rule 176 and token ADD resolved as reduce.
Conflict in state 229 between rule 176 and token SUB resolved as reduce.
Conflict in state 229 between rule 176 and token MUL resolved as reduce.
Conflict in state 229 between rule 176 and token DIV resolved as reduce.
Conflict in state 229 between rule 176 and token MOD resolved as reduce.
Conflict in state 248 between rule 8 and token CHOP resolved as reduce.
Conflict in state 248 between rule 8 and token OR resolved as shift.
Conflict in state 248 between rule 8 and token AND resolved as shift.
Conflict in state 248 between rule 8 and token IFF resolved as shift.
Conflict in state 248 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 248 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 249 between rule 5 and token CHOP resolved as reduce.
Conflict in state 249 between rule 5 and token OR resolved as reduce.
Conflict in state 249 between rule 5 and token AND resolved as shift.
Conflict in state 249 between rule 5 and token IFF resolved as shift.
Conflict in state 249 between rule 5 and token PROPIMPLY resolved as shift.
Conflict in state 249 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 250 between rule 4 and token CHOP resolved as reduce.
Conflict in state 250 between rule 4 and token OR resolved as reduce.
Conflict in state 250 between rule 4 and token AND resolved as reduce.
Conflict in state 250 between rule 4 and token IFF resolved as shift.
Conflict in state 250 between rule 4 and token PROPIMPLY resolved as shift.
Conflict in state 250 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 251 between rule 6 and token CHOP resolved as reduce.
Conflict in state 251 between rule 6 and token OR resolved as reduce.
Conflict in state 251 between rule 6 and token AND resolved as reduce.
Conflict in state 251 between rule 6 and token IFF resolved as reduce.
Conflict in state 251 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 251 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 252 between rule 7 and token CHOP resolved as reduce.
Conflict in state 252 between rule 7 and token OR resolved as reduce.
Conflict in state 252 between rule 7 and token AND resolved as reduce.
Conflict in state 252 between rule 7 and token IFF resolved as reduce.
Conflict in state 252 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 252 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 306 between rule 295 and token OR resolved as reduce.
Conflict in state 306 between rule 295 and token AND resolved as reduce.
Conflict in state 353 between rule 32 and token CHOP resolved as reduce.
Conflict in state 353 between rule 32 and token OR resolved as shift.
Conflict in state 353 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 353 between rule 32 and token AND resolved as shift.
Conflict in state 354 between rule 31 and token CHOP resolved as reduce.
Conflict in state 354 between rule 31 and token OR resolved as reduce.
Conflict in state 354 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 354 between rule 31 and token AND resolved as shift.
Conflict in state 355 between rule 54 and token CHOP resolved as reduce.
Conflict in state 355 between rule 54 and token OR resolved as reduce.
Conflict in state 355 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 355 between rule 54 and token AND resolved as shift.
Conflict in state 356 between rule 30 and token CHOP resolved as reduce.
Conflict in state 356 between rule 30 and token OR resolved as reduce.
Conflict in state 356 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 356 between rule 30 and token AND resolved as reduce.
Conflict in state 404 between rule 165 and token INTER_OR resolved as reduce.
Conflict in state 404 between rule 165 and token BOOL_OR resolved as reduce.
Conflict in state 404 between rule 165 and token CON resolved as shift.
Conflict in state 404 between rule 165 and token ADDRESS resolved as shift.
Conflict in state 404 between rule 165 and token BOOL_AND resolved as shift.
Conflict in state 404 between rule 165 and token NE resolved as shift.
Conflict in state 404 between rule 165 and token EQ resolved as shift.
Conflict in state 404 between rule 165 and token GE resolved as shift.
Conflict in state 404 between rule 165 and token LE resolved as shift.
Conflict in state 404 between rule 165 and token GT resolved as shift.
Conflict in state 404 between rule 165 and token LT resolved as shift.
Conflict in state 404 between rule 165 and token LST resolved as shift.
Conflict in state 404 between rule 165 and token RST resolved as shift.
Conflict in state 404 between rule 165 and token ADD resolved as shift.
Conflict in state 404 between rule 165 and token SUB resolved as shift.
Conflict in state 404 between rule 165 and token MUL resolved as shift.
Conflict in state 404 between rule 165 and token DIV resolved as shift.
Conflict in state 404 between rule 165 and token MOD resolved as shift.
Conflict in state 405 between rule 175 and token INTER_OR resolved as shift.
Conflict in state 405 between rule 175 and token BOOL_OR resolved as reduce.
Conflict in state 405 between rule 175 and token CON resolved as shift.
Conflict in state 405 between rule 175 and token ADDRESS resolved as shift.
Conflict in state 405 between rule 175 and token BOOL_AND resolved as shift.
Conflict in state 405 between rule 175 and token NE resolved as shift.
Conflict in state 405 between rule 175 and token EQ resolved as shift.
Conflict in state 405 between rule 175 and token GE resolved as shift.
Conflict in state 405 between rule 175 and token LE resolved as shift.
Conflict in state 405 between rule 175 and token GT resolved as shift.
Conflict in state 405 between rule 175 and token LT resolved as shift.
Conflict in state 405 between rule 175 and token LST resolved as shift.
Conflict in state 405 between rule 175 and token RST resolved as shift.
Conflict in state 405 between rule 175 and token ADD resolved as shift.
Conflict in state 405 between rule 175 and token SUB resolved as shift.
Conflict in state 405 between rule 175 and token MUL resolved as shift.
Conflict in state 405 between rule 175 and token DIV resolved as shift.
Conflict in state 405 between rule 175 and token MOD resolved as shift.
Conflict in state 406 between rule 166 and token INTER_OR resolved as reduce.
Conflict in state 406 between rule 166 and token BOOL_OR resolved as reduce.
Conflict in state 406 between rule 166 and token CON resolved as reduce.
Conflict in state 406 between rule 166 and token ADDRESS resolved as shift.
Conflict in state 406 between rule 166 and token BOOL_AND resolved as shift.
Conflict in state 406 between rule 166 and token NE resolved as shift.
Conflict in state 406 between rule 166 and token EQ resolved as shift.
Conflict in state 406 between rule 166 and token GE resolved as shift.
Conflict in state 406 between rule 166 and token LE resolved as shift.
Conflict in state 406 between rule 166 and token GT resolved as shift.
Conflict in state 406 between rule 166 and token LT resolved as shift.
Conflict in state 406 between rule 166 and token LST resolved as shift.
Conflict in state 406 between rule 166 and token RST resolved as shift.
Conflict in state 406 between rule 166 and token ADD resolved as shift.
Conflict in state 406 between rule 166 and token SUB resolved as shift.
Conflict in state 406 between rule 166 and token MUL resolved as shift.
Conflict in state 406 between rule 166 and token DIV resolved as shift.
Conflict in state 406 between rule 166 and token MOD resolved as shift.
Conflict in state 407 between rule 164 and token INTER_OR resolved as reduce.
Conflict in state 407 between rule 164 and token BOOL_OR resolved as reduce.
Conflict in state 407 between rule 164 and token CON resolved as reduce.
Conflict in state 407 between rule 164 and token ADDRESS resolved as reduce.
Conflict in state 407 between rule 164 and token BOOL_AND resolved as shift.
Conflict in state 407 between rule 164 and token NE resolved as shift.
Conflict in state 407 between rule 164 and token EQ resolved as shift.
Conflict in state 407 between rule 164 and token GE resolved as shift.
Conflict in state 407 between rule 164 and token LE resolved as shift.
Conflict in state 407 between rule 164 and token GT resolved as shift.
Conflict in state 407 between rule 164 and token LT resolved as shift.
Conflict in state 407 between rule 164 and token LST resolved as shift.
Conflict in state 407 between rule 164 and token RST resolved as shift.
Conflict in state 407 between rule 164 and token ADD resolved as shift.
Conflict in state 407 between rule 164 and token SUB resolved as shift.
Conflict in state 407 between rule 164 and token MUL resolved as shift.
Conflict in state 407 between rule 164 and token DIV resolved as shift.
Conflict in state 407 between rule 164 and token MOD resolved as shift.
Conflict in state 408 between rule 174 and token INTER_OR resolved as reduce.
Conflict in state 408 between rule 174 and token BOOL_OR resolved as reduce.
Conflict in state 408 between rule 174 and token CON resolved as reduce.
Conflict in state 408 between rule 174 and token ADDRESS resolved as reduce.
Conflict in state 408 between rule 174 and token BOOL_AND resolved as reduce.
Conflict in state 408 between rule 174 and token NE resolved as shift.
Conflict in state 408 between rule 174 and token EQ resolved as shift.
Conflict in state 408 between rule 174 and token GE resolved as shift.
Conflict in state 408 between rule 174 and token LE resolved as shift.
Conflict in state 408 between rule 174 and token GT resolved as shift.
Conflict in state 408 between rule 174 and token LT resolved as shift.
Conflict in state 408 between rule 174 and token LST resolved as shift.
Conflict in state 408 between rule 174 and token RST resolved as shift.
Conflict in state 408 between rule 174 and token ADD resolved as shift.
Conflict in state 408 between rule 174 and token SUB resolved as shift.
Conflict in state 408 between rule 174 and token MUL resolved as shift.
Conflict in state 408 between rule 174 and token DIV resolved as shift.
Conflict in state 408 between rule 174 and token MOD resolved as shift.
Conflict in state 409 between rule 171 and token INTER_OR resolved as reduce.
Conflict in state 409 between rule 171 and token BOOL_OR resolved as reduce.
Conflict in state 409 between rule 171 and token CON resolved as reduce.
Conflict in state 409 between rule 171 and token ADDRESS resolved as reduce.
Conflict in state 409 between rule 171 and token BOOL_AND resolved as reduce.
Conflict in state 409 between rule 171 and token NE resolved as reduce.
Conflict in state 409 between rule 171 and token EQ resolved as reduce.
Conflict in state 409 between rule 171 and token GE resolved as shift.
Conflict in state 409 between rule 171 and token LE resolved as shift.
Conflict in state 409 between rule 171 and token GT resolved as shift.
Conflict in state 409 between rule 171 and token LT resolved as shift.
Conflict in state 409 between rule 171 and token LST resolved as shift.
Conflict in state 409 between rule 171 and token RST resolved as shift.
Conflict in state 409 between rule 171 and token ADD resolved as shift.
Conflict in state 409 between rule 171 and token SUB resolved as shift.
Conflict in state 409 between rule 171 and token MUL resolved as shift.
Conflict in state 409 between rule 171 and token DIV resolved as shift.
Conflict in state 409 between rule 171 and token MOD resolved as shift.
Conflict in state 410 between rule 173 and token INTER_OR resolved as reduce.
Conflict in state 410 between rule 173 and token BOOL_OR resolved as reduce.
Conflict in state 410 between rule 173 and token CON resolved as reduce.
Conflict in state 410 between rule 173 and token ADDRESS resolved as reduce.
Conflict in state 410 between rule 173 and token BOOL_AND resolved as reduce.
Conflict in state 410 between rule 173 and token NE resolved as reduce.
Conflict in state 410 between rule 173 and token EQ resolved as reduce.
Conflict in state 410 between rule 173 and token GE resolved as shift.
Conflict in state 410 between rule 173 and token LE resolved as shift.
Conflict in state 410 between rule 173 and token GT resolved as shift.
Conflict in state 410 between rule 173 and token LT resolved as shift.
Conflict in state 410 between rule 173 and token LST resolved as shift.
Conflict in state 410 between rule 173 and token RST resolved as shift.
Conflict in state 410 between rule 173 and token ADD resolved as shift.
Conflict in state 410 between rule 173 and token SUB resolved as shift.
Conflict in state 410 between rule 173 and token MUL resolved as shift.
Conflict in state 410 between rule 173 and token DIV resolved as shift.
Conflict in state 410 between rule 173 and token MOD resolved as shift.
Conflict in state 411 between rule 169 and token INTER_OR resolved as reduce.
Conflict in state 411 between rule 169 and token BOOL_OR resolved as reduce.
Conflict in state 411 between rule 169 and token CON resolved as reduce.
Conflict in state 411 between rule 169 and token ADDRESS resolved as reduce.
Conflict in state 411 between rule 169 and token BOOL_AND resolved as reduce.
Conflict in state 411 between rule 169 and token NE resolved as reduce.
Conflict in state 411 between rule 169 and token EQ resolved as reduce.
Conflict in state 411 between rule 169 and token GE resolved as reduce.
Conflict in state 411 between rule 169 and token LE resolved as reduce.
Conflict in state 411 between rule 169 and token GT resolved as reduce.
Conflict in state 411 between rule 169 and token LT resolved as reduce.
Conflict in state 411 between rule 169 and token LST resolved as shift.
Conflict in state 411 between rule 169 and token RST resolved as shift.
Conflict in state 411 between rule 169 and token ADD resolved as shift.
Conflict in state 411 between rule 169 and token SUB resolved as shift.
Conflict in state 411 between rule 169 and token MUL resolved as shift.
Conflict in state 411 between rule 169 and token DIV resolved as shift.
Conflict in state 411 between rule 169 and token MOD resolved as shift.
Conflict in state 412 between rule 170 and token INTER_OR resolved as reduce.
Conflict in state 412 between rule 170 and token BOOL_OR resolved as reduce.
Conflict in state 412 between rule 170 and token CON resolved as reduce.
Conflict in state 412 between rule 170 and token ADDRESS resolved as reduce.
Conflict in state 412 between rule 170 and token BOOL_AND resolved as reduce.
Conflict in state 412 between rule 170 and token NE resolved as reduce.
Conflict in state 412 between rule 170 and token EQ resolved as reduce.
Conflict in state 412 between rule 170 and token GE resolved as reduce.
Conflict in state 412 between rule 170 and token LE resolved as reduce.
Conflict in state 412 between rule 170 and token GT resolved as reduce.
Conflict in state 412 between rule 170 and token LT resolved as reduce.
Conflict in state 412 between rule 170 and token LST resolved as shift.
Conflict in state 412 between rule 170 and token RST resolved as shift.
Conflict in state 412 between rule 170 and token ADD resolved as shift.
Conflict in state 412 between rule 170 and token SUB resolved as shift.
Conflict in state 412 between rule 170 and token MUL resolved as shift.
Conflict in state 412 between rule 170 and token DIV resolved as shift.
Conflict in state 412 between rule 170 and token MOD resolved as shift.
Conflict in state 413 between rule 168 and token INTER_OR resolved as reduce.
Conflict in state 413 between rule 168 and token BOOL_OR resolved as reduce.
Conflict in state 413 between rule 168 and token CON resolved as reduce.
Conflict in state 413 between rule 168 and token ADDRESS resolved as reduce.
Conflict in state 413 between rule 168 and token BOOL_AND resolved as reduce.
Conflict in state 413 between rule 168 and token NE resolved as reduce.
Conflict in state 413 between rule 168 and token EQ resolved as reduce.
Conflict in state 413 between rule 168 and token GE resolved as reduce.
Conflict in state 413 between rule 168 and token LE resolved as reduce.
Conflict in state 413 between rule 168 and token GT resolved as reduce.
Conflict in state 413 between rule 168 and token LT resolved as reduce.
Conflict in state 413 between rule 168 and token LST resolved as shift.
Conflict in state 413 between rule 168 and token RST resolved as shift.
Conflict in state 413 between rule 168 and token ADD resolved as shift.
Conflict in state 413 between rule 168 and token SUB resolved as shift.
Conflict in state 413 between rule 168 and token MUL resolved as shift.
Conflict in state 413 between rule 168 and token DIV resolved as shift.
Conflict in state 413 between rule 168 and token MOD resolved as shift.
Conflict in state 414 between rule 172 and token INTER_OR resolved as reduce.
Conflict in state 414 between rule 172 and token BOOL_OR resolved as reduce.
Conflict in state 414 between rule 172 and token CON resolved as reduce.
Conflict in state 414 between rule 172 and token ADDRESS resolved as reduce.
Conflict in state 414 between rule 172 and token BOOL_AND resolved as reduce.
Conflict in state 414 between rule 172 and token NE resolved as reduce.
Conflict in state 414 between rule 172 and token EQ resolved as reduce.
Conflict in state 414 between rule 172 and token GE resolved as reduce.
Conflict in state 414 between rule 172 and token LE resolved as reduce.
Conflict in state 414 between rule 172 and token GT resolved as reduce.
Conflict in state 414 between rule 172 and token LT resolved as reduce.
Conflict in state 414 between rule 172 and token LST resolved as shift.
Conflict in state 414 between rule 172 and token RST resolved as shift.
Conflict in state 414 between rule 172 and token ADD resolved as shift.
Conflict in state 414 between rule 172 and token SUB resolved as shift.
Conflict in state 414 between rule 172 and token MUL resolved as shift.
Conflict in state 414 between rule 172 and token DIV resolved as shift.
Conflict in state 414 between rule 172 and token MOD resolved as shift.
Conflict in state 415 between rule 162 and token INTER_OR resolved as reduce.
Conflict in state 415 between rule 162 and token BOOL_OR resolved as reduce.
Conflict in state 415 between rule 162 and token CON resolved as reduce.
Conflict in state 415 between rule 162 and token ADDRESS resolved as reduce.
Conflict in state 415 between rule 162 and token BOOL_AND resolved as reduce.
Conflict in state 415 between rule 162 and token NE resolved as reduce.
Conflict in state 415 between rule 162 and token EQ resolved as reduce.
Conflict in state 415 between rule 162 and token GE resolved as reduce.
Conflict in state 415 between rule 162 and token LE resolved as reduce.
Conflict in state 415 between rule 162 and token GT resolved as reduce.
Conflict in state 415 between rule 162 and token LT resolved as reduce.
Conflict in state 415 between rule 162 and token LST resolved as reduce.
Conflict in state 415 between rule 162 and token RST resolved as reduce.
Conflict in state 415 between rule 162 and token ADD resolved as shift.
Conflict in state 415 between rule 162 and token SUB resolved as shift.
Conflict in state 415 between rule 162 and token MUL resolved as shift.
Conflict in state 415 between rule 162 and token DIV resolved as shift.
Conflict in state 415 between rule 162 and token MOD resolved as shift.
Conflict in state 416 between rule 163 and token INTER_OR resolved as reduce.
Conflict in state 416 between rule 163 and token BOOL_OR resolved as reduce.
Conflict in state 416 between rule 163 and token CON resolved as reduce.
Conflict in state 416 between rule 163 and token ADDRESS resolved as reduce.
Conflict in state 416 between rule 163 and token BOOL_AND resolved as reduce.
Conflict in state 416 between rule 163 and token NE resolved as reduce.
Conflict in state 416 between rule 163 and token EQ resolved as reduce.
Conflict in state 416 between rule 163 and token GE resolved as reduce.
Conflict in state 416 between rule 163 and token LE resolved as reduce.
Conflict in state 416 between rule 163 and token GT resolved as reduce.
Conflict in state 416 between rule 163 and token LT resolved as reduce.
Conflict in state 416 between rule 163 and token LST resolved as reduce.
Conflict in state 416 between rule 163 and token RST resolved as reduce.
Conflict in state 416 between rule 163 and token ADD resolved as shift.
Conflict in state 416 between rule 163 and token SUB resolved as shift.
Conflict in state 416 between rule 163 and token MUL resolved as shift.
Conflict in state 416 between rule 163 and token DIV resolved as shift.
Conflict in state 416 between rule 163 and token MOD resolved as shift.
Conflict in state 417 between rule 157 and token INTER_OR resolved as reduce.
Conflict in state 417 between rule 157 and token BOOL_OR resolved as reduce.
Conflict in state 417 between rule 157 and token CON resolved as reduce.
Conflict in state 417 between rule 157 and token ADDRESS resolved as reduce.
Conflict in state 417 between rule 157 and token BOOL_AND resolved as reduce.
Conflict in state 417 between rule 157 and token NE resolved as reduce.
Conflict in state 417 between rule 157 and token EQ resolved as reduce.
Conflict in state 417 between rule 157 and token GE resolved as reduce.
Conflict in state 417 between rule 157 and token LE resolved as reduce.
Conflict in state 417 between rule 157 and token GT resolved as reduce.
Conflict in state 417 between rule 157 and token LT resolved as reduce.
Conflict in state 417 between rule 157 and token LST resolved as reduce.
Conflict in state 417 between rule 157 and token RST resolved as reduce.
Conflict in state 417 between rule 157 and token ADD resolved as reduce.
Conflict in state 417 between rule 157 and token SUB resolved as reduce.
Conflict in state 417 between rule 157 and token MUL resolved as shift.
Conflict in state 417 between rule 157 and token DIV resolved as shift.
Conflict in state 417 between rule 157 and token MOD resolved as shift.
Conflict in state 418 between rule 158 and token INTER_OR resolved as reduce.
Conflict in state 418 between rule 158 and token BOOL_OR resolved as reduce.
Conflict in state 418 between rule 158 and token CON resolved as reduce.
Conflict in state 418 between rule 158 and token ADDRESS resolved as reduce.
Conflict in state 418 between rule 158 and token BOOL_AND resolved as reduce.
Conflict in state 418 between rule 158 and token NE resolved as reduce.
Conflict in state 418 between rule 158 and token EQ resolved as reduce.
Conflict in state 418 between rule 158 and token GE resolved as reduce.
Conflict in state 418 between rule 158 and token LE resolved as reduce.
Conflict in state 418 between rule 158 and token GT resolved as reduce.
Conflict in state 418 between rule 158 and token LT resolved as reduce.
Conflict in state 418 between rule 158 and token LST resolved as reduce.
Conflict in state 418 between rule 158 and token RST resolved as reduce.
Conflict in state 418 between rule 158 and token ADD resolved as reduce.
Conflict in state 418 between rule 158 and token SUB resolved as reduce.
Conflict in state 418 between rule 158 and token MUL resolved as shift.
Conflict in state 418 between rule 158 and token DIV resolved as shift.
Conflict in state 418 between rule 158 and token MOD resolved as shift.
Conflict in state 419 between rule 159 and token INTER_OR resolved as reduce.
Conflict in state 419 between rule 159 and token BOOL_OR resolved as reduce.
Conflict in state 419 between rule 159 and token CON resolved as reduce.
Conflict in state 419 between rule 159 and token ADDRESS resolved as reduce.
Conflict in state 419 between rule 159 and token BOOL_AND resolved as reduce.
Conflict in state 419 between rule 159 and token NE resolved as reduce.
Conflict in state 419 between rule 159 and token EQ resolved as reduce.
Conflict in state 419 between rule 159 and token GE resolved as reduce.
Conflict in state 419 between rule 159 and token LE resolved as reduce.
Conflict in state 419 between rule 159 and token GT resolved as reduce.
Conflict in state 419 between rule 159 and token LT resolved as reduce.
Conflict in state 419 between rule 159 and token LST resolved as reduce.
Conflict in state 419 between rule 159 and token RST resolved as reduce.
Conflict in state 419 between rule 159 and token ADD resolved as reduce.
Conflict in state 419 between rule 159 and token SUB resolved as reduce.
Conflict in state 419 between rule 159 and token MUL resolved as reduce.
Conflict in state 419 between rule 159 and token DIV resolved as reduce.
Conflict in state 419 between rule 159 and token MOD resolved as reduce.
Conflict in state 420 between rule 160 and token INTER_OR resolved as reduce.
Conflict in state 420 between rule 160 and token BOOL_OR resolved as reduce.
Conflict in state 420 between rule 160 and token CON resolved as reduce.
Conflict in state 420 between rule 160 and token ADDRESS resolved as reduce.
Conflict in state 420 between rule 160 and token BOOL_AND resolved as reduce.
Conflict in state 420 between rule 160 and token NE resolved as reduce.
Conflict in state 420 between rule 160 and token EQ resolved as reduce.
Conflict in state 420 between rule 160 and token GE resolved as reduce.
Conflict in state 420 between rule 160 and token LE resolved as reduce.
Conflict in state 420 between rule 160 and token GT resolved as reduce.
Conflict in state 420 between rule 160 and token LT resolved as reduce.
Conflict in state 420 between rule 160 and token LST resolved as reduce.
Conflict in state 420 between rule 160 and token RST resolved as reduce.
Conflict in state 420 between rule 160 and token ADD resolved as reduce.
Conflict in state 420 between rule 160 and token SUB resolved as reduce.
Conflict in state 420 between rule 160 and token MUL resolved as reduce.
Conflict in state 420 between rule 160 and token DIV resolved as reduce.
Conflict in state 420 between rule 160 and token MOD resolved as reduce.
Conflict in state 421 between rule 161 and token INTER_OR resolved as reduce.
Conflict in state 421 between rule 161 and token BOOL_OR resolved as reduce.
Conflict in state 421 between rule 161 and token CON resolved as reduce.
Conflict in state 421 between rule 161 and token ADDRESS resolved as reduce.
Conflict in state 421 between rule 161 and token BOOL_AND resolved as reduce.
Conflict in state 421 between rule 161 and token NE resolved as reduce.
Conflict in state 421 between rule 161 and token EQ resolved as reduce.
Conflict in state 421 between rule 161 and token GE resolved as reduce.
Conflict in state 421 between rule 161 and token LE resolved as reduce.
Conflict in state 421 between rule 161 and token GT resolved as reduce.
Conflict in state 421 between rule 161 and token LT resolved as reduce.
Conflict in state 421 between rule 161 and token LST resolved as reduce.
Conflict in state 421 between rule 161 and token RST resolved as reduce.
Conflict in state 421 between rule 161 and token ADD resolved as reduce.
Conflict in state 421 between rule 161 and token SUB resolved as reduce.
Conflict in state 421 between rule 161 and token MUL resolved as reduce.
Conflict in state 421 between rule 161 and token DIV resolved as reduce.
Conflict in state 421 between rule 161 and token MOD resolved as reduce.
Conflict in state 472 between rule 297 and token OR resolved as reduce.
Conflict in state 472 between rule 297 and token AND resolved as shift.
Conflict in state 473 between rule 296 and token OR resolved as reduce.
Conflict in state 473 between rule 296 and token AND resolved as reduce.
Conflict in state 602 between rule 198 and token CON resolved as reduce.
State 100 contains 2 shift/reduce conflicts.
State 102 contains 2 shift/reduce conflicts.
State 107 contains 2 shift/reduce conflicts.
State 150 contains 1 shift/reduce conflict.
State 151 contains 1 shift/reduce conflict.
State 153 contains 1 shift/reduce conflict.
State 155 contains 1 shift/reduce conflict.
State 156 contains 1 shift/reduce conflict.
State 183 contains 1 shift/reduce conflict.
State 214 contains 1 shift/reduce conflict.
State 215 contains 1 shift/reduce conflict.
State 216 contains 1 shift/reduce conflict.
State 218 contains 1 shift/reduce conflict.
State 219 contains 1 shift/reduce conflict.
State 220 contains 1 shift/reduce conflict.
State 222 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 266 contains 1 shift/reduce conflict.
State 267 contains 1 shift/reduce conflict.
State 268 contains 1 shift/reduce conflict.
State 269 contains 1 shift/reduce conflict.
State 274 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 275 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 276 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 278 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 296 contains 1 shift/reduce conflict.
State 297 contains 1 shift/reduce conflict.
State 298 contains 1 shift/reduce conflict.
State 304 contains 1 shift/reduce conflict.
State 335 contains 1 shift/reduce conflict.
State 336 contains 1 shift/reduce conflict.
State 361 contains 2 shift/reduce conflicts.
State 362 contains 2 shift/reduce conflicts.
State 364 contains 2 shift/reduce conflicts.
State 365 contains 2 shift/reduce conflicts.
State 366 contains 2 shift/reduce conflicts.
State 367 contains 2 shift/reduce conflicts.
State 368 contains 2 shift/reduce conflicts.
State 369 contains 2 shift/reduce conflicts.
State 371 contains 2 shift/reduce conflicts.
State 372 contains 2 shift/reduce conflicts.
State 374 contains 2 shift/reduce conflicts.
State 375 contains 2 shift/reduce conflicts.
State 399 contains 1 shift/reduce conflict.
State 446 contains 1 shift/reduce conflict.
State 447 contains 1 shift/reduce conflict.
State 448 contains 1 shift/reduce conflict.
State 454 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 463 contains 1 shift/reduce conflict.
State 465 contains 1 shift/reduce conflict.
State 488 contains 1 shift/reduce conflict.
State 509 contains 1 shift/reduce conflict.
State 530 contains 19 shift/reduce conflicts.
State 612 contains 2 shift/reduce conflicts.
State 613 contains 2 shift/reduce conflicts.
State 636 contains 1 shift/reduce conflict.
State 637 contains 1 shift/reduce conflict.
State 642 contains 2 shift/reduce conflicts.
State 643 contains 2 shift/reduce conflicts.
State 645 contains 2 shift/reduce conflicts.
State 646 contains 2 shift/reduce conflicts.
State 711 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 736 contains 18 shift/reduce conflicts.
State 744 contains 1 shift/reduce conflict.
State 750 contains 18 shift/reduce conflicts.
State 757 contains 1 shift/reduce conflict.
State 758 contains 1 shift/reduce conflict.
State 759 contains 1 shift/reduce conflict.
State 806 contains 1 shift/reduce conflict.
State 819 contains 1 shift/reduce conflict.
State 820 contains 1 shift/reduce conflict.
State 835 contains 1 shift/reduce conflict.
State 837 contains 1 shift/reduce conflict.
State 838 contains 1 shift/reduce conflict.
State 858 contains 1 shift/reduce conflict.
State 859 contains 1 shift/reduce conflict.
State 874 contains 1 shift/reduce conflict.
State 990 contains 1 shift/reduce conflict.
State 991 contains 1 shift/reduce conflict.
State 993 contains 1 shift/reduce conflict.
State 994 contains 1 shift/reduce conflict.
State 1010 contains 1 shift/reduce conflict.
State 1011 contains 1 shift/reduce conflict.
State 1012 contains 1 shift/reduce conflict.
State 1013 contains 1 shift/reduce conflict.
State 1024 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON ari_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR ari_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function
rule 63   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 64   statement -> OPEN_PAR statement CLOSE_PAR
rule 65   option_struct_declaration -> sign_declaration
rule 66   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 67   empty_statement -> statement
rule 68   empty_statement ->		/* empty */
rule 69   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 70   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 73   struct_identifier -> STRUCT ID
rule 74   struct_identifier -> UNION ID
rule 75   sign_declaration -> SIGNED declaration
rule 76   sign_declaration -> UNSIGNED declaration
rule 77   sign_declaration -> declaration
rule 78   declaration -> type_define option_identifier_array_declaration
rule 79   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 80   declaration -> STRUCT ID option_identifier_array_declaration
rule 81   declaration -> UNION ID option_identifier_array_declaration
rule 82   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 83   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 85   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 88   type_define -> INTDECLARATION
rule 89   type_define -> FLOATDECLARATION
rule 90   type_define -> CHARDECLARATION
rule 91   type_define -> STRDECLARATION
rule 92   type_define -> VOIDDECLARATION
rule 93   type_define -> FILEDECLARATION
rule 94   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 95   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 102  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA error
rule 104  inner_option_identifier_array_declaration ->		/* empty */
rule 109  ass_statement -> ass_left assign_operator ass_right
rule 110  ass_left -> identifier
rule 111  ass_left -> struct_member_exp
rule 112  ass_left -> array
rule 113  ass_left -> point_exp
rule 114  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 115  ass_left -> NEXT ass_left
rule 116  ass_left -> leftaddrshift
rule 117  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  assign_operator -> ASS_P
rule 131  assign_operator -> ASS_N
rule 132  ass_right -> ari_exp
rule 133  ass_right -> array_exp
rule 134  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 135  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 136  ass_right -> rightaddrshift
rule 137  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 138  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  array -> OPEN_PAR array CLOSE_PAR
rule 140  array_cast_exp -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array_cast_exp -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array_cast_exp -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array_cast_exp -> OPEN_PAR array_cast_exp CLOSE_PAR
rule 146  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 147  option_ari_exp -> COMMA error
rule 148  option_ari_exp ->		/* empty */
rule 149  point_exp -> MUL identifier
rule 150  point_exp -> MUL point_exp
rule 151  point_exp -> MUL array
rule 152  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 154  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 155  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 156  ari_exp -> simple_ari_exp
rule 157  ari_exp -> ari_exp ADD ari_exp
rule 158  ari_exp -> ari_exp SUB ari_exp
rule 159  ari_exp -> ari_exp MUL ari_exp
rule 160  ari_exp -> ari_exp DIV ari_exp
rule 161  ari_exp -> ari_exp MOD ari_exp
rule 162  ari_exp -> ari_exp LST ari_exp
rule 163  ari_exp -> ari_exp RST ari_exp
rule 164  ari_exp -> ari_exp ADDRESS ari_exp
rule 165  ari_exp -> ari_exp INTER_OR ari_exp
rule 166  ari_exp -> ari_exp CON ari_exp
rule 167  ari_exp -> IF ari_exp THEN ari_exp option_exp_else_statement
rule 168  ari_exp -> ari_exp GT ari_exp
rule 169  ari_exp -> ari_exp GE ari_exp
rule 170  ari_exp -> ari_exp LE ari_exp
rule 171  ari_exp -> ari_exp NE ari_exp
rule 172  ari_exp -> ari_exp LT ari_exp
rule 173  ari_exp -> ari_exp EQ ari_exp
rule 174  ari_exp -> ari_exp BOOL_AND ari_exp
rule 175  ari_exp -> ari_exp BOOL_OR ari_exp
rule 176  ari_exp -> NEGATION ari_exp
rule 177  type_cast_alg_exp -> simple_ari_exp
rule 178  option_exp_else_statement -> ELSE ari_exp
rule 179  option_exp_else_statement ->		/* empty */
rule 180  simple_ari_exp -> intliteral
rule 181  simple_ari_exp -> charliteral
rule 182  simple_ari_exp -> floatliteral
rule 183  simple_ari_exp -> strliteral
rule 184  simple_ari_exp -> identifier
rule 185  simple_ari_exp -> array
rule 186  simple_ari_exp -> point_exp
rule 187  simple_ari_exp -> function
rule 188  simple_ari_exp -> address_exp
rule 189  simple_ari_exp -> type_cast
rule 190  simple_ari_exp -> struct_member_exp
rule 191  simple_ari_exp -> array_cast_exp
rule 192  simple_ari_exp -> SUB simple_ari_exp
rule 193  simple_ari_exp -> BNE simple_ari_exp
rule 194  simple_ari_exp -> POINTERNULL
rule 195  simple_ari_exp -> MY_TRUE
rule 196  simple_ari_exp -> MY_FALSE
rule 197  simple_ari_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 198  array_exp -> array_exp CON array_exp
rule 199  array_exp -> option_list_value
rule 200  array_exp -> option_struct_list_value
rule 201  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 202  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 203  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 204  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 205  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 206  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 207  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 208  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 209  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 210  inner_option_list_value ->		/* empty */
rule 211  inner_option_list_value -> COMMA error
rule 212  address_exp -> ADDRESS identifier
rule 213  address_exp -> ADDRESS array
rule 214  address_exp -> ADDRESS struct_member_exp
rule 215  address_exp -> ADDRESS address_exp
rule 216  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 217  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 222  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 240  casted_element -> type_cast_alg_exp
rule 241  sign_type_define -> UNSIGNED INTDECLARATION
rule 242  sign_type_define -> UNSIGNED CHARDECLARATION
rule 243  all_type_define -> sign_type_define
rule 244  all_type_define -> type_define
rule 245  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 246  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 247  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 248  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 249  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 250  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 251  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 252  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 253  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 254  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 255  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 256  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 257  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 258  option_function_parameter_list -> ID inner_option_define_identifier
rule 259  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 260  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 261  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 262  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 263  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 264  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 265  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> OPEN_PAR MUL ID CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 268  option_function_parameter_list ->		/* empty */
rule 269  inner_option_define_identifier -> COMMA option_function_parameter_list
rule 270  inner_option_define_identifier ->		/* empty */
rule 271  option_function_identifier -> ass_right inner_option_function_identifier
rule 272  option_function_identifier -> all_type_define
rule 273  option_function_identifier -> STRUCT_TYPE
rule 274  option_function_identifier ->		/* empty */
rule 275  option_function_identifier -> ADDRESS error
rule 276  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 277  inner_option_function_identifier ->		/* empty */
rule 278  inner_option_function_identifier -> COMMA error
rule 279  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 280  statement_bpar -> error CLOSE_BPAR
rule 281  bool_par -> OPEN_PAR ari_exp CLOSE_PAR
rule 282  bool_par -> error CLOSE_PAR
rule 283  identifier -> ID
rule 284  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 285  strliteral -> STRLITERAL
rule 286  intliteral -> INTLITERAL
rule 287  charliteral -> CHARLITERAL
rule 288  floatliteral -> FLOATLITERAL
rule 289  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 290  option_frame_identifier ->		/* empty */
rule 291  option_frame_identifier -> COMMA error
rule 292  option_projection ->		/* empty */
rule 293  option_projection -> COMMA statement option_projection
rule 294  imply_pre ->		/* empty */
rule 295  imply_pre -> NEGATION imply_pre
rule 296  imply_pre -> imply_pre AND imply_pre
rule 297  imply_pre -> imply_pre OR imply_pre
rule 298  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 299  while_statement -> WHILE bool_par statement_bpar
rule 300  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 301  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 302  for_sta_init -> ass_statement
rule 303  for_sta_init -> declaration
rule 304  for_sta_init ->		/* empty */
rule 305  for_sta_condition -> ari_exp
rule 306  for_sta_condition ->		/* empty */
rule 307  for_sta_control -> ass_statement
rule 308  for_sta_control ->		/* empty */
rule 309  switch_statement -> SWITCH OPEN_PAR simple_ari_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 310  case_par -> CASE simple_ari_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 311  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 312  init_case_par -> BREAK case_par
rule 313  init_case_par -> case_par
rule 314  init_case_par ->		/* empty */
rule 315  if_statement -> IF ari_exp THEN statement_bpar option_else_statement
rule 316  option_else_statement -> ELSE statement_bpar
rule 317  option_else_statement ->		/* empty */
rule 318  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 319  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 320  option_output ->		/* empty */
rule 321  option_output -> COMMA ass_right option_output
rule 322  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 323  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 324  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 325  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 326  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 327  option_input ->		/* empty */
rule 328  option_input -> COMMA identifier option_input
rule 329  option_input -> COMMA array option_input
rule 330  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 331  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 332  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 333  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 334  struct_member_exp -> array DOT array option_struct_member_exp
rule 335  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 336  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 337  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 338  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 339  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 340  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 341  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 342  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 343  struct_member_exp -> identifier DOT function
rule 344  struct_member_exp -> identifier IMPLY function
rule 345  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 346  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 347  option_struct_member_exp ->		/* empty */
rule 348  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 349  option_struct_member_exp -> DOT array option_struct_member_exp
rule 350  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 351  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 352  option_struct_member_exp -> DOT function
rule 353  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 103 108 147 211 275 278 280 282 291
SWITCH (258) 309
CASE (259) 310
BREAK (260) 312
DEFAULT (261) 311
IF (262) 167 315
ELSE (263) 178 316
EMPTY (264) 18 46
AWAIT (265) 43
PROJECTION (266) 23 57 58
PBEGIN (267) 2
PEND (268) 2
POINTERNULL (269) 194
ARRAY (270) 97 98 250 254 261 262 263
STRUCT (271) 73 80 82 236 238
DOT (272) 330 331 332 333 334 335 343 348 349 352
UNION (273) 74 81 83
FILEDECLARATION (274) 93
MORE (275) 19 47
DEFINE (276) 25 60
MY_TRUE (277) 15 195
MY_FALSE (278) 16 196
EXIST (279) 63
FRAME (280) 56
FOR (281) 300 301
WHILE (282) 299
DO (283) 300
TRUE (284) 51
FALSE (285) 52
REPEAT (286) 44
UNTIL (287) 44
DISPLAY (288) 318 319
SKIP (289) 14 45
THEN (290) 167 315
COMMA (291) 28 102 103 106 108 146 147 207 208 209 211 269 276 278
    289 291 293 301 321 328 329
COLON (292) 25 63 310 311
INTDECLARATION (293) 88 119 123 126 127 128 129 140 141 217 220 222
    224 225 230 231 241
STRDECLARATION (294) 91
POINTERDECLARATION (295)
CHARDECLARATION (296) 90 117 118 121 122 123 124 125 126 127 128 143
    144 219 221 223 227 228 233 234 242
VOIDDECLARATION (297) 92 229 235
FLOATDECLARATION (298) 89 120 142 218 226 232
LISTDECLARATION (299)
OPEN_PAR (300) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84 85
    86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129 134
    135 137 139 140 141 142 143 144 145 152 153 154 155 197 201 216
    217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232
    233 234 235 236 237 238 239 267 281 284 298 301 309 310 311 318
    319 322 323 324 325 326 338 342 346
CLOSE_PAR (301) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84
    85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129
    134 135 137 139 140 141 142 143 144 145 152 153 154 155 197 201
    216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
    232 233 234 235 236 237 238 239 267 281 282 284 298 301 309 310
    311 318 319 322 323 324 325 326 338 342 346
TIMES (302) 300
OPEN_BPAR (303) 23 44 57 58 59 60 63 72 205 206 279 309
CLOSE_BPAR (304) 23 44 57 58 59 60 63 72 205 206 279 280 309
OPEN_MPAR (305) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 138 140 141 142 143 144 152 202 203
    204 263
CLOSE_MPAR (306) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 138 140 141 142 143 144 152 202 203
    204 263
FUNCTION (307) 59
OVER (308)
CYLINDER (309)
OVEREP (310)
INTER_OR (311) 165
NON_DETERMINED (312)
SEND (313)
RECEIVE (314)
PROCESS (315)
CHANNEL (316)
PUT (317)
GET (318)
ERROR_TOKEN (319)
EXTERN (320) 70
UNSIGNED (321) 76 118 122 124 125 126 128 141 144 222 223 225 228 231
    234 241 242
SIGNED (322) 75 220 221
CHOP (323) 8 32
OR (324) 5 31 297
PARALLEL (325) 54
AND (326) 4 30 56 66 296
ASS_P (327) 60 87 96 97 98 99 100 130
ASS_N (328) 131
BOOL_OR (329) 175
CON (330) 166 198
ADDRESS (331) 164 212 213 214 215 275
BOOL_AND (332) 174
IMPLY (333) 55 336 337 338 339 340 341 342 344 345 350 351 353
IFF (334) 6
PROPIMPLY (335) 7
NE (336) 171
EQ (337) 173
GE (338) 169
LE (339) 170
GT (340) 168
LT (341) 172
LST (342) 162
RST (343) 163
ADD (344) 157
SUB (345) 158 192
MUL (346) 84 85 86 87 101 117 118 119 120 121 122 123 124 125 126 127
    128 129 137 140 141 142 143 144 149 150 151 153 154 159 224 225
    226 227 228 229 230 231 232 233 234 235 236 237 238 239 248 249
    252 253 256 257 259 260 262 264 265 266 267
DIV (347) 160
MOD (348) 161
BNE (349) 193
CHOPSTAR (350) 26
NEXT (351) 13 40 115
NEGATION (352) 22 176 295
LENGTH (353) 17 48
REQUEST (354) 322 323 324 325 326
FINAL (355) 21 53
KEEP (356) 10 41
ALWAYS (357) 9 42
HALT (358) 20
W_NEXT (359) 12
PREFIX (360)
SOMETIMES (361) 11
ID (362) 24 25 59 60 69 70 73 74 80 81 86 87 95 97 98 99 100 105 106
    138 251 252 253 254 258 259 260 267 283
STRLITERAL (363) 285
STRUCT_TYPE (364) 79 82 83 236 237 238 239 247 248 249 250 255 256
    257 273
INTLITERAL (365) 117 118 119 120 121 122 123 124 125 126 127 128 129
    286
FLOATLITERAL (366) 288
CHARLITERAL (367) 287

Nonterminals, with rules where they appear

program (113)
    on left: 1
gComplexProposition (114)
    on left: 2 3, on right: 1
complexProposition (115)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (116)
    on left: 28 29, on right: 23 28
statement (117)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 59 63 64 67
    279 293 310 311
option_struct_declaration (118)
    on left: 65 66, on right: 66 72
empty_statement (119)
    on left: 67 68, on right: 60
function (120)
    on left: 69 70 71, on right: 62 134 187 343 344 352 353
struct_define_statement (121)
    on left: 72, on right: 61
struct_identifier (122)
    on left: 73 74, on right: 72
sign_declaration (123)
    on left: 75 76 77, on right: 34 65 66
declaration (124)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 75 76 77 303
type_define (125)
    on left: 88 89 90 91 92 93, on right: 78 134 244
option_identifier_array_declaration (126)
    on left: 94 95 96 97 98 99 100 101, on right: 78 79 80 81 82 83
    101 102
inner_option_identifier_array_declaration (127)
    on left: 102 103 104, on right: 94 95 96 97 98 99 100
ass_statement (128)
    on left: 109, on right: 33 302 307
ass_left (129)
    on left: 110 111 112 113 114 115 116, on right: 109 114 115
leftaddrshift (130)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129,
    on right: 116 137
assign_operator (131)
    on left: 130 131, on right: 109
ass_right (132)
    on left: 132 133 134 135 136, on right: 96 109 135 271 276 318
    319 321
rightaddrshift (133)
    on left: 137, on right: 136
array (134)
    on left: 138 139, on right: 71 112 139 151 185 213 324 325 329
    331 333 334 335 337 340 341 342 345 349 351
array_cast_exp (135)
    on left: 140 141 142 143 144 145, on right: 145 191
option_ari_exp (136)
    on left: 146 147 148, on right: 86 87 95 99 100 105 106 117 118
    119 120 121 122 123 124 125 126 127 128 129 138 140 141 142 143
    144 146 152
point_exp (137)
    on left: 149 150 151 152 153 154 155, on right: 113 150 152 155
    186 332 335 339 345
ari_exp (138)
    on left: 156 157 158 159 160 161 162 163 164 165 166 167 168 169
    170 171 172 173 174 175 176, on right: 17 25 43 44 48 86 87 95
    99 100 105 106 117 118 119 120 121 122 123 124 125 126 127 128
    129 132 138 140 141 142 143 144 146 152 153 154 157 158 159 160
    161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176
    178 197 202 205 207 263 281 300 305 315
type_cast_alg_exp (139)
    on left: 177, on right: 217 218 219 220 221 222 223 240
option_exp_else_statement (140)
    on left: 178 179, on right: 167
simple_ari_exp (141)
    on left: 180 181 182 183 184 185 186 187 188 189 190 191 192 193
    194 195 196 197, on right: 156 177 192 193 309 310
array_exp (142)
    on left: 198 199 200 201, on right: 87 97 99 133 198 201 204 206
    209
option_list_value (143)
    on left: 202 203 204, on right: 199
option_struct_list_value (144)
    on left: 205 206, on right: 200
inner_option_list_value (145)
    on left: 207 208 209 210 211, on right: 202 203 204 205 206 207
    208 209
address_exp (146)
    on left: 212 213 214 215 216, on right: 188 215 216 338 342
type_cast (147)
    on left: 217 218 219 220 221 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239, on right: 189
casted_element (148)
    on left: 240, on right: 224 225 226 227 228 229 230 231 232 233
    234 235 236 237 238 239
sign_type_define (149)
    on left: 241 242, on right: 243
all_type_define (150)
    on left: 243 244, on right: 153 245 246 261 262 263 264 265 266
    272
option_function_parameter_list (151)
    on left: 245 246 247 248 249 250 251 252 253 254 255 256 257 258
    259 260 261 262 263 264 265 266 267 268, on right: 59 60 84 85
    86 87 134 267 269
inner_option_define_identifier (152)
    on left: 269 270, on right: 63 245 246 247 248 249 250 251 252
    253 254 255 256 257 258 259 260 261 262 263 264 265 266 267
option_function_identifier (153)
    on left: 271 272 273 274 275, on right: 69 70 71
inner_option_function_identifier (154)
    on left: 276 277 278, on right: 271 276
statement_bpar (155)
    on left: 279 280, on right: 57 58 299 300 301 315 316
bool_par (156)
    on left: 281 282, on right: 299
identifier (157)
    on left: 283 284, on right: 56 63 84 85 94 96 110 140 141 142 143
    144 149 184 212 245 247 248 249 250 251 252 253 254 261 262 263
    264 266 284 289 322 323 328 330 331 332 333 336 337 338 339 340
    343 344 348 350
strliteral (158)
    on left: 285, on right: 98 100 134 183 203 208
intliteral (159)
    on left: 286, on right: 180
charliteral (160)
    on left: 287, on right: 181
floatliteral (161)
    on left: 288, on right: 182
option_frame_identifier (162)
    on left: 289 290 291, on right: 56 289
option_projection (163)
    on left: 292 293, on right: 57 293
imply_pre (164)
    on left: 294 295 296 297 298, on right: 55 295 296 297 298
while_statement (165)
    on left: 299, on right: 37
for_statement (166)
    on left: 300, on right: 38
extend_for_statement (167)
    on left: 301, on right: 39
for_sta_init (168)
    on left: 302 303 304, on right: 301
for_sta_condition (169)
    on left: 305 306, on right: 301
for_sta_control (170)
    on left: 307 308, on right: 301
switch_statement (171)
    on left: 309, on right: 35
case_par (172)
    on left: 310 311, on right: 309 312 313
init_case_par (173)
    on left: 312 313 314, on right: 310
if_statement (174)
    on left: 315, on right: 36
option_else_statement (175)
    on left: 316 317, on right: 315
output_statement (176)
    on left: 318 319, on right: 50
option_output (177)
    on left: 320 321, on right: 319 321
input_statement (178)
    on left: 322 323 324 325 326, on right: 49
option_input (179)
    on left: 327 328 329, on right: 323 325 328 329
struct_member_exp (180)
    on left: 330 331 332 333 334 335 336 337 338 339 340 341 342 343
    344 345 346, on right: 111 190 214 326 346
option_struct_member_exp (181)
    on left: 347 348 349 350 351 352 353, on right: 330 331 332 333
    334 335 336 337 338 339 340 341 342 345 348 349 350 351


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1058
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 60
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON ari_exp   (rule 25)

    ID  	shift, and go to state 81



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 82



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 103
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 115



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 116



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 117



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 118



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 119
    CHOP	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125



state 22

    switch_statement  ->  SWITCH . OPEN_PAR simple_ari_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 309)

    OPEN_PAR	shift, and go to state 126



state 23

    if_statement  ->  IF . ari_exp THEN statement_bpar option_else_statement   (rule 315)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 127
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 24

    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)



state 25

    statement  ->  AWAIT . OPEN_PAR ari_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 128



state 26

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 130



state 27

    struct_identifier  ->  UNION . ID   (rule 74)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 132



state 28

    type_define  ->  FILEDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 29

    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)



state 30

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 133



state 31

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    identifier	go to state 136



state 32

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 137



state 33

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 300)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 301)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 138
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 139
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 34

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 299)

    error	shift, and go to state 140
    OPEN_PAR	shift, and go to state 141

    bool_par	go to state 142



state 35

    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 36

    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 143



state 38

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 318)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 144



state 39

    statement  ->  SKIP .   (rule 45)

    $default	reduce using rule 45 (statement)



state 40

    type_define  ->  INTDECLARATION .   (rule 88)

    $default	reduce using rule 88 (type_define)



state 41

    type_define  ->  STRDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 42

    type_define  ->  CHARDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 43

    type_define  ->  VOIDDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  FLOATDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)



state 45

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 145
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 146
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 147
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 294 (imply_pre)

    statement	go to state 148
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 149
    leftaddrshift	go to state 69
    array	go to state 150
    point_exp	go to state 151
    address_exp	go to state 152
    identifier	go to state 153
    imply_pre	go to state 154
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 155



state 46

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 156
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 47

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 157



state 48

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    ID  	shift, and go to state 158



state 49

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 159
    UNION	shift, and go to state 160
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 161
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 162
    type_define	go to state 66



state 50

    sign_declaration  ->  SIGNED . declaration   (rule 75)

    STRUCT	shift, and go to state 159
    UNION	shift, and go to state 160
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 161
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 163
    type_define	go to state 66



state 51

    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 164
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 166
    point_exp	go to state 167
    identifier	go to state 168



state 52

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 170
    ID  	shift, and go to state 165

    ass_left	go to state 171
    leftaddrshift	go to state 69
    array	go to state 172
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 53

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 173



state 54

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 322)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 323)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 324)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 325)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 326)

    OPEN_PAR	shift, and go to state 174



state 55

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 175



state 56

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 176



state 57

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 177



state 58

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    identifier  ->  ID .   (rule 283)

    OPEN_PAR	shift, and go to state 178
    OPEN_MPAR	shift, and go to state 179

    $default	reduce using rule 283 (identifier)



state 59

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 182
    identifier	go to state 183



state 60

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187

    $default	reduce using rule 1 (program)



state 61

    statement  ->  function .   (rule 62)

    $default	reduce using rule 62 (statement)



state 62

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 63

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 188



state 64

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 65

    sign_declaration  ->  declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 66

    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 189
    identifier	go to state 183



state 67

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 68

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)

    ASS_P	shift, and go to state 190
    ASS_N	shift, and go to state 191

    assign_operator	go to state 192



state 69

    ass_left  ->  leftaddrshift .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 70

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    OPEN_PAR	shift, and go to state 194
    IMPLY	shift, and go to state 195

    $default	reduce using rule 112 (ass_left)



state 71

    ass_left  ->  point_exp .   (rule 113)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    IMPLY	shift, and go to state 197

    $default	reduce using rule 113 (ass_left)



state 72

    ass_left  ->  identifier .   (rule 110)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    IMPLY	shift, and go to state 199

    $default	reduce using rule 110 (ass_left)



state 73

    statement  ->  while_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 74

    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 77

    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 78

    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 79

    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 80

    ass_left  ->  struct_member_exp .   (rule 111)

    $default	reduce using rule 111 (ass_left)



state 81

    complexProposition  ->  DEFINE ID . COLON ari_exp   (rule 25)

    COLON	shift, and go to state 200



state 82

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 201
    CHOP	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 202
    CHOP	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 203



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 86

    ari_exp  ->  IF . ari_exp THEN ari_exp option_exp_else_statement   (rule 167)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 204
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 87

    simple_ari_exp  ->  POINTERNULL .   (rule 194)

    $default	reduce using rule 194 (simple_ari_exp)



state 88

    simple_ari_exp  ->  MY_TRUE .   (rule 195)

    $default	reduce using rule 195 (simple_ari_exp)



state 89

    simple_ari_exp  ->  MY_FALSE .   (rule 196)

    $default	reduce using rule 196 (simple_ari_exp)



state 90

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 210
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 91

    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)

    OPEN_PAR	shift, and go to state 221
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 222
    point_exp	go to state 223
    address_exp	go to state 224
    identifier	go to state 225
    struct_member_exp	go to state 226



state 92

    simple_ari_exp  ->  SUB . simple_ari_exp   (rule 192)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    simple_ari_exp	go to state 227
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 93

    simple_ari_exp  ->  BNE . simple_ari_exp   (rule 193)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    simple_ari_exp	go to state 228
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 94

    ari_exp  ->  NEGATION . ari_exp   (rule 176)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 229
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 95

    strliteral  ->  STRLITERAL .   (rule 285)

    $default	reduce using rule 285 (strliteral)



state 96

    intliteral  ->  INTLITERAL .   (rule 286)

    $default	reduce using rule 286 (intliteral)



state 97

    floatliteral  ->  FLOATLITERAL .   (rule 288)

    $default	reduce using rule 288 (floatliteral)



state 98

    charliteral  ->  CHARLITERAL .   (rule 287)

    $default	reduce using rule 287 (charliteral)



state 99

    simple_ari_exp  ->  function .   (rule 187)

    $default	reduce using rule 187 (simple_ari_exp)



state 100

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    simple_ari_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    OPEN_PAR	shift, and go to state 194
    IMPLY	shift, and go to state 195

    DOT 	[reduce using rule 185 (simple_ari_exp)]
    IMPLY	[reduce using rule 185 (simple_ari_exp)]
    $default	reduce using rule 185 (simple_ari_exp)



state 101

    simple_ari_exp  ->  array_cast_exp .   (rule 191)

    $default	reduce using rule 191 (simple_ari_exp)



state 102

    simple_ari_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    IMPLY	shift, and go to state 197

    DOT 	[reduce using rule 186 (simple_ari_exp)]
    IMPLY	[reduce using rule 186 (simple_ari_exp)]
    $default	reduce using rule 186 (simple_ari_exp)



state 103

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 17 (complexProposition)



state 104

    ari_exp  ->  simple_ari_exp .   (rule 156)

    $default	reduce using rule 156 (ari_exp)



state 105

    simple_ari_exp  ->  address_exp .   (rule 188)

    $default	reduce using rule 188 (simple_ari_exp)



state 106

    simple_ari_exp  ->  type_cast .   (rule 189)

    $default	reduce using rule 189 (simple_ari_exp)



state 107

    simple_ari_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    IMPLY	shift, and go to state 199

    DOT 	[reduce using rule 184 (simple_ari_exp)]
    IMPLY	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 108

    simple_ari_exp  ->  strliteral .   (rule 183)

    $default	reduce using rule 183 (simple_ari_exp)



state 109

    simple_ari_exp  ->  intliteral .   (rule 180)

    $default	reduce using rule 180 (simple_ari_exp)



state 110

    simple_ari_exp  ->  charliteral .   (rule 181)

    $default	reduce using rule 181 (simple_ari_exp)



state 111

    simple_ari_exp  ->  floatliteral .   (rule 182)

    $default	reduce using rule 182 (simple_ari_exp)



state 112

    simple_ari_exp  ->  struct_member_exp .   (rule 190)

    $default	reduce using rule 190 (simple_ari_exp)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 115

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 116

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 117

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 118

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 119

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 120

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 248



state 121

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 249



state 122

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 250



state 123

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 251



state 124

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 252



state 125

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 126

    switch_statement  ->  SWITCH OPEN_PAR . simple_ari_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 309)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    simple_ari_exp	go to state 253
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 127

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    if_statement  ->  IF ari_exp . THEN statement_bpar option_else_statement   (rule 315)

    THEN	shift, and go to state 254
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 128

    statement  ->  AWAIT OPEN_PAR . ari_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 255
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 129

    struct_identifier  ->  STRUCT ID .   (rule 73)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    $default	reduce using rule 73 (struct_identifier)

    option_identifier_array_declaration	go to state 256
    identifier	go to state 183



state 130

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 257
    identifier	go to state 183



state 131

    struct_identifier  ->  UNION ID .   (rule 74)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 258
    identifier	go to state 183



state 132

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 259
    identifier	go to state 183



state 133

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 260



state 134

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)

    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    identifier	go to state 261



state 135

    identifier  ->  ID .   (rule 283)

    $default	reduce using rule 283 (identifier)



state 136

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 263



state 137

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    identifier	go to state 264



state 138

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 301)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 265
    UNION	shift, and go to state 160
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 266
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 267
    VOIDDECLARATION	shift, and go to state 268
    FLOATDECLARATION	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 170
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 271
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 304 (for_sta_init)

    function	go to state 99
    declaration	go to state 272
    type_define	go to state 66
    ass_statement	go to state 273
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 274
    array_cast_exp	go to state 215
    point_exp	go to state 275
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 276
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    for_sta_init	go to state 277
    struct_member_exp	go to state 278



state 139

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 300)

    TIMES	shift, and go to state 279
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 140

    bool_par  ->  error . CLOSE_PAR   (rule 282)

    CLOSE_PAR	shift, and go to state 280



state 141

    bool_par  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 281)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 281
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 142

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 299)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 284



state 143

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 285
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 144

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 318)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 290
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 145

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 298)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 296
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 297
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 298
    OPEN_PAR	shift, and go to state 145
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 299
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 146
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 147
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 294 (imply_pre)

    statement	go to state 148
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 149
    leftaddrshift	go to state 69
    array	go to state 150
    point_exp	go to state 151
    address_exp	go to state 300
    identifier	go to state 153
    imply_pre	go to state 301
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 155



state 146

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 164
    MUL 	shift, and go to state 302
    ID  	shift, and go to state 303

    array	go to state 166
    point_exp	go to state 167
    identifier	go to state 304



state 147

    imply_pre  ->  NEGATION . imply_pre   (rule 295)

    OPEN_PAR	shift, and go to state 305
    NEGATION	shift, and go to state 147

    $default	reduce using rule 294 (imply_pre)

    imply_pre	go to state 306



state 148

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 307
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 149

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 308
    ASS_P	shift, and go to state 190
    ASS_N	shift, and go to state 191

    assign_operator	go to state 192



state 150

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 309
    IMPLY	shift, and go to state 195

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 151

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    CLOSE_PAR	shift, and go to state 310
    IMPLY	shift, and go to state 197

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 152

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)

    CLOSE_PAR	shift, and go to state 311



state 153

    ass_left  ->  identifier .   (rule 110)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 284)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    $default	reduce using rule 110 (ass_left)



state 154

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 296)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 297)

    CLOSE_PAR	shift, and go to state 313
    OR  	shift, and go to state 314
    AND 	shift, and go to state 315



state 155

    ass_left  ->  struct_member_exp .   (rule 111)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 346)

    CLOSE_PAR	shift, and go to state 316

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 156

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    COMMA	shift, and go to state 317
    CLOSE_BPAR	shift, and go to state 318
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187

    CLOSE_BPAR	[reduce using rule 292 (option_projection)]
    $default	reduce using rule 292 (option_projection)

    option_projection	go to state 319



state 157

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 320



state 158

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    OPEN_PAR	shift, and go to state 321



state 159

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 322
    STRUCT_TYPE	shift, and go to state 130



state 160

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 323
    STRUCT_TYPE	shift, and go to state 132



state 161

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    MUL 	shift, and go to state 324



state 162

    sign_declaration  ->  UNSIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)



state 163

    sign_declaration  ->  SIGNED declaration .   (rule 75)

    $default	reduce using rule 75 (sign_declaration)



state 164

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 325
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    type_define	go to state 326
    array	go to state 214
    array_cast_exp	go to state 101
    point_exp	go to state 216
    ari_exp	go to state 327
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    sign_type_define	go to state 328
    all_type_define	go to state 329
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 165

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    identifier  ->  ID .   (rule 283)

    OPEN_MPAR	shift, and go to state 179

    $default	reduce using rule 283 (identifier)



state 166

    point_exp  ->  MUL array .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 167

    point_exp  ->  MUL point_exp .   (rule 150)

    $default	reduce using rule 150 (point_exp)



state 168

    point_exp  ->  MUL identifier .   (rule 149)

    $default	reduce using rule 149 (point_exp)



state 169

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 330
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 331
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 149
    leftaddrshift	go to state 69
    array	go to state 150
    point_exp	go to state 151
    address_exp	go to state 152
    identifier	go to state 153
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 155



state 170

    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 332
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 170
    ID  	shift, and go to state 165

    ass_left	go to state 171
    leftaddrshift	go to state 69
    array	go to state 172
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 171

    ass_left  ->  NEXT ass_left .   (rule 115)

    $default	reduce using rule 115 (ass_left)



state 172

    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    IMPLY	shift, and go to state 195

    $default	reduce using rule 112 (ass_left)



state 173

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 333
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 174

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 322)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 323)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 324)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 325)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 326)

    OPEN_PAR	shift, and go to state 334
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 335
    point_exp	go to state 223
    identifier	go to state 336
    struct_member_exp	go to state 337



state 175

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 338
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 176

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 339
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 177

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 340
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 178

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 325
    ADDRESS	shift, and go to state 341
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 342
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 274 (option_function_identifier)

    function	go to state 99
    type_define	go to state 326
    ass_right	go to state 343
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    sign_type_define	go to state 328
    all_type_define	go to state 344
    option_function_identifier	go to state 345
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 179

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 346
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 180

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 347
    identifier	go to state 183



state 181

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 283)

    ARRAY	shift, and go to state 348
    OPEN_MPAR	shift, and go to state 349

    $default	reduce using rule 283 (identifier)



state 182

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 183

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 94)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 350
    ASS_P	shift, and go to state 351

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 352



state 184

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 353
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 185

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 354
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 186

    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 355
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 187

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 356
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 188

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 72)

    STRUCT	shift, and go to state 159
    UNION	shift, and go to state 160
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 161
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 357
    sign_declaration	go to state 358
    declaration	go to state 65
    type_define	go to state 66



state 189

    declaration  ->  type_define option_identifier_array_declaration .   (rule 78)

    $default	reduce using rule 78 (declaration)



state 190

    assign_operator  ->  ASS_P .   (rule 130)

    $default	reduce using rule 130 (assign_operator)



state 191

    assign_operator  ->  ASS_N .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 192

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 109)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 359
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 193

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 334)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 361
    identifier	go to state 362



state 194

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 325
    ADDRESS	shift, and go to state 341
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 342
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 274 (option_function_identifier)

    function	go to state 99
    type_define	go to state 326
    ass_right	go to state 343
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    sign_type_define	go to state 328
    all_type_define	go to state 344
    option_function_identifier	go to state 363
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 195

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 341)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 364
    identifier	go to state 365



state 196

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 335)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 366
    identifier	go to state 367



state 197

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 345)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 368
    identifier	go to state 369



state 198

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier DOT . function   (rule 343)

    OPEN_PAR	shift, and go to state 360
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 370
    array	go to state 371
    identifier	go to state 372



state 199

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier IMPLY . function   (rule 344)

    OPEN_PAR	shift, and go to state 360
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 373
    array	go to state 374
    identifier	go to state 375



state 200

    complexProposition  ->  DEFINE ID COLON . ari_exp   (rule 25)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 376
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 201

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 202

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 377



state 203

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 378



state 204

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  IF ari_exp . THEN ari_exp option_exp_else_statement   (rule 167)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    THEN	shift, and go to state 379
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 205

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    STRUCT_TYPE	shift, and go to state 380



state 206

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 382



state 207

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 384



state 208

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 385



state 209

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 387



state 210

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 388
    CHARDECLARATION	shift, and go to state 389
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 210
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 391
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 211

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 392
    CHARDECLARATION	shift, and go to state 393



state 212

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    INTDECLARATION	shift, and go to state 394
    CHARDECLARATION	shift, and go to state 395



state 213

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    MUL 	shift, and go to state 396



state 214

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    simple_ari_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 309
    IMPLY	shift, and go to state 195

    CLOSE_PAR	[reduce using rule 185 (simple_ari_exp)]
    $default	reduce using rule 185 (simple_ari_exp)



state 215

    array_cast_exp  ->  OPEN_PAR array_cast_exp . CLOSE_PAR   (rule 145)
    simple_ari_exp  ->  array_cast_exp .   (rule 191)

    CLOSE_PAR	shift, and go to state 397

    CLOSE_PAR	[reduce using rule 191 (simple_ari_exp)]
    $default	reduce using rule 191 (simple_ari_exp)



state 216

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    CLOSE_PAR	shift, and go to state 310
    IMPLY	shift, and go to state 197

    CLOSE_PAR	[reduce using rule 186 (simple_ari_exp)]
    $default	reduce using rule 186 (simple_ari_exp)



state 217

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    simple_ari_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 197)

    CLOSE_PAR	shift, and go to state 398
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 218

    simple_ari_exp  ->  address_exp .   (rule 188)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)

    CLOSE_PAR	shift, and go to state 399

    CLOSE_PAR	[reduce using rule 188 (simple_ari_exp)]
    $default	reduce using rule 188 (simple_ari_exp)



state 219

    simple_ari_exp  ->  identifier .   (rule 184)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 284)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 220

    simple_ari_exp  ->  struct_member_exp .   (rule 190)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 346)

    CLOSE_PAR	shift, and go to state 316

    CLOSE_PAR	[reduce using rule 190 (simple_ari_exp)]
    $default	reduce using rule 190 (simple_ari_exp)



state 221

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    OPEN_PAR	shift, and go to state 221
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 400
    point_exp	go to state 401
    address_exp	go to state 300
    identifier	go to state 402
    struct_member_exp	go to state 403



state 222

    address_exp  ->  ADDRESS array .   (rule 213)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    IMPLY	shift, and go to state 195

    DOT 	[reduce using rule 213 (address_exp)]
    $default	reduce using rule 213 (address_exp)



state 223

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    IMPLY	shift, and go to state 197



state 224

    address_exp  ->  ADDRESS address_exp .   (rule 215)

    $default	reduce using rule 215 (address_exp)



state 225

    address_exp  ->  ADDRESS identifier .   (rule 212)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    IMPLY	shift, and go to state 199

    DOT 	[reduce using rule 212 (address_exp)]
    $default	reduce using rule 212 (address_exp)



state 226

    address_exp  ->  ADDRESS struct_member_exp .   (rule 214)

    $default	reduce using rule 214 (address_exp)



state 227

    simple_ari_exp  ->  SUB simple_ari_exp .   (rule 192)

    $default	reduce using rule 192 (simple_ari_exp)



state 228

    simple_ari_exp  ->  BNE simple_ari_exp .   (rule 193)

    $default	reduce using rule 193 (simple_ari_exp)



state 229

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    ari_exp  ->  NEGATION ari_exp .   (rule 176)


    $default	reduce using rule 176 (ari_exp)



state 230

    ari_exp  ->  ari_exp INTER_OR . ari_exp   (rule 165)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 404
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 231

    ari_exp  ->  ari_exp BOOL_OR . ari_exp   (rule 175)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 405
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 232

    ari_exp  ->  ari_exp CON . ari_exp   (rule 166)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 406
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 233

    ari_exp  ->  ari_exp ADDRESS . ari_exp   (rule 164)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 407
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 234

    ari_exp  ->  ari_exp BOOL_AND . ari_exp   (rule 174)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 408
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 235

    ari_exp  ->  ari_exp NE . ari_exp   (rule 171)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 409
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 236

    ari_exp  ->  ari_exp EQ . ari_exp   (rule 173)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 410
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 237

    ari_exp  ->  ari_exp GE . ari_exp   (rule 169)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 411
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 238

    ari_exp  ->  ari_exp LE . ari_exp   (rule 170)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 412
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 239

    ari_exp  ->  ari_exp GT . ari_exp   (rule 168)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 413
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 240

    ari_exp  ->  ari_exp LT . ari_exp   (rule 172)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 414
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 241

    ari_exp  ->  ari_exp LST . ari_exp   (rule 162)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 415
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 242

    ari_exp  ->  ari_exp RST . ari_exp   (rule 163)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 416
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 243

    ari_exp  ->  ari_exp ADD . ari_exp   (rule 157)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 417
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 244

    ari_exp  ->  ari_exp SUB . ari_exp   (rule 158)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 418
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 245

    ari_exp  ->  ari_exp MUL . ari_exp   (rule 159)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 419
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 246

    ari_exp  ->  ari_exp DIV . ari_exp   (rule 160)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 420
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 247

    ari_exp  ->  ari_exp MOD . ari_exp   (rule 161)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 421
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 248

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 8 (complexProposition)



state 249

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 5 (complexProposition)



state 250

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 4 (complexProposition)



state 251

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 6 (complexProposition)



state 252

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 7 (complexProposition)



state 253

    switch_statement  ->  SWITCH OPEN_PAR simple_ari_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 309)

    CLOSE_PAR	shift, and go to state 422



state 254

    if_statement  ->  IF ari_exp THEN . statement_bpar option_else_statement   (rule 315)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 423



state 255

    statement  ->  AWAIT OPEN_PAR ari_exp . CLOSE_PAR   (rule 43)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    CLOSE_PAR	shift, and go to state 424
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 256

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 257

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 258

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 259

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 260

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 429



state 261

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 284)

    CLOSE_PAR	shift, and go to state 312



state 262

    inner_option_define_identifier  ->  COMMA . option_function_parameter_list   (rule 269)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 430



state 263

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COLON	shift, and go to state 431



state 264

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 432

    $default	reduce using rule 290 (option_frame_identifier)

    option_frame_identifier	go to state 433



state 265

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 322
    STRUCT_TYPE	shift, and go to state 434



state 266

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 382

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 267

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 384

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 268

    type_define  ->  VOIDDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 385

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 269

    type_define  ->  FLOATDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 387

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 270

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 388
    CHARDECLARATION	shift, and go to state 389
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 435
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 391
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 146
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 170
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_left	go to state 436
    leftaddrshift	go to state 69
    array	go to state 274
    array_cast_exp	go to state 215
    point_exp	go to state 275
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 276
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 278



state 271

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 437
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 182
    identifier	go to state 183



state 272

    for_sta_init  ->  declaration .   (rule 303)

    $default	reduce using rule 303 (for_sta_init)



state 273

    for_sta_init  ->  ass_statement .   (rule 302)

    $default	reduce using rule 302 (for_sta_init)



state 274

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    simple_ari_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 309
    IMPLY	shift, and go to state 195

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 185 (simple_ari_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 185 (simple_ari_exp)



state 275

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    CLOSE_PAR	shift, and go to state 310
    IMPLY	shift, and go to state 197

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 186 (simple_ari_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 186 (simple_ari_exp)



state 276

    ass_left  ->  identifier .   (rule 110)
    simple_ari_exp  ->  identifier .   (rule 184)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 284)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    ASS_P	reduce using rule 110 (ass_left)
    ASS_N	reduce using rule 110 (ass_left)
    $default	reduce using rule 184 (simple_ari_exp)



state 277

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 301)

    COMMA	shift, and go to state 438



state 278

    ass_left  ->  struct_member_exp .   (rule 111)
    simple_ari_exp  ->  struct_member_exp .   (rule 190)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 346)

    CLOSE_PAR	shift, and go to state 316

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 190 (simple_ari_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 190 (simple_ari_exp)



state 279

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 300)

    DO  	shift, and go to state 439



state 280

    bool_par  ->  error CLOSE_PAR .   (rule 282)

    $default	reduce using rule 282 (bool_par)



state 281

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    bool_par  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 281)

    CLOSE_PAR	shift, and go to state 440
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 282

    statement_bpar  ->  error . CLOSE_BPAR   (rule 280)

    CLOSE_BPAR	shift, and go to state 441



state 283

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 279)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 442
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 284

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 299)

    $default	reduce using rule 299 (while_statement)



state 285

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_BPAR	shift, and go to state 443
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 286

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 135)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 201)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 444
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 445
    rightaddrshift	go to state 291
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 446
    simple_ari_exp	go to state 104
    array_exp	go to state 447
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 448
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 287

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 205)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 206)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 449
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 450
    simple_ari_exp	go to state 104
    array_exp	go to state 451
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 288

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 202)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 203)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 204)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 449
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 452
    simple_ari_exp	go to state 104
    array_exp	go to state 453
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 454
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 289

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 137)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 455
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 166
    point_exp	go to state 167
    identifier	go to state 168



state 290

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 318)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 319)

    COMMA	shift, and go to state 456
    CLOSE_PAR	shift, and go to state 457

    CLOSE_PAR	[reduce using rule 320 (option_output)]
    $default	reduce using rule 320 (option_output)

    option_output	go to state 458



state 291

    ass_right  ->  rightaddrshift .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 292

    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 132 (ass_right)



state 293

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 198)

    CON 	shift, and go to state 459

    $default	reduce using rule 133 (ass_right)



state 294

    array_exp  ->  option_list_value .   (rule 199)

    $default	reduce using rule 199 (array_exp)



state 295

    array_exp  ->  option_struct_list_value .   (rule 200)

    $default	reduce using rule 200 (array_exp)



state 296

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 460

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 297

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 461

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 298

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    MUL 	shift, and go to state 462

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 299

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    STRUCT	shift, and go to state 159
    UNION	shift, and go to state 160
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 463
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 161
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 162
    type_define	go to state 66



state 300

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)

    CLOSE_PAR	shift, and go to state 399



state 301

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 296)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 297)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 298)

    CLOSE_PAR	shift, and go to state 464
    OR  	shift, and go to state 314
    AND 	shift, and go to state 315



state 302

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 164
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 166
    point_exp	go to state 167
    identifier	go to state 465



state 303

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    identifier  ->  ID .   (rule 283)

    OPEN_MPAR	shift, and go to state 466

    $default	reduce using rule 283 (identifier)



state 304

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 467

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 305

    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 298)

    OPEN_PAR	shift, and go to state 305
    NEGATION	shift, and go to state 147

    $default	reduce using rule 294 (imply_pre)

    imply_pre	go to state 468



state 306

    imply_pre  ->  NEGATION imply_pre .   (rule 295)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 296)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 297)


    $default	reduce using rule 295 (imply_pre)



state 307

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 308

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (ass_left)



state 309

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 139)

    $default	reduce using rule 139 (array)



state 310

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 155)

    OPEN_MPAR	shift, and go to state 469

    $default	reduce using rule 155 (point_exp)



state 311

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 342)

    IMPLY	shift, and go to state 470



state 312

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 284)

    $default	reduce using rule 284 (identifier)



state 313

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    IMPLY	shift, and go to state 471



state 314

    imply_pre  ->  imply_pre OR . imply_pre   (rule 297)

    OPEN_PAR	shift, and go to state 305
    NEGATION	shift, and go to state 147

    $default	reduce using rule 294 (imply_pre)

    imply_pre	go to state 472



state 315

    imply_pre  ->  imply_pre AND . imply_pre   (rule 296)

    OPEN_PAR	shift, and go to state 305
    NEGATION	shift, and go to state 147

    $default	reduce using rule 294 (imply_pre)

    imply_pre	go to state 473



state 316

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 346)

    $default	reduce using rule 346 (struct_member_exp)



state 317

    option_projection  ->  COMMA . statement option_projection   (rule 293)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 474
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 318

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 475



state 319

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    CLOSE_BPAR	shift, and go to state 476



state 320

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 477



state 321

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 325
    ADDRESS	shift, and go to state 341
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 342
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 274 (option_function_identifier)

    function	go to state 99
    type_define	go to state 326
    ass_right	go to state 343
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    sign_type_define	go to state 328
    all_type_define	go to state 344
    option_function_identifier	go to state 478
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 322

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 256
    identifier	go to state 183



state 323

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 258
    identifier	go to state 183



state 324

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 479
    ID  	shift, and go to state 480

    identifier	go to state 481



state 325

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 241)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 242)

    INTDECLARATION	shift, and go to state 482
    CHARDECLARATION	shift, and go to state 483



state 326

    all_type_define  ->  type_define .   (rule 244)

    $default	reduce using rule 244 (all_type_define)



state 327

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 154)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    CLOSE_PAR	shift, and go to state 484
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 328

    all_type_define  ->  sign_type_define .   (rule 243)

    $default	reduce using rule 243 (all_type_define)



state 329

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 153)

    MUL 	shift, and go to state 485



state 330

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 296
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 297
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 298
    OPEN_PAR	shift, and go to state 145
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 299
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 146
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 147
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 294 (imply_pre)

    statement	go to state 148
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 149
    leftaddrshift	go to state 69
    array	go to state 150
    point_exp	go to state 151
    address_exp	go to state 300
    identifier	go to state 153
    imply_pre	go to state 154
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 155



state 331

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 486
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 332

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    OPEN_PAR	shift, and go to state 487
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 170
    ID  	shift, and go to state 165

    ass_left	go to state 436
    leftaddrshift	go to state 69
    array	go to state 488
    point_exp	go to state 151
    address_exp	go to state 152
    identifier	go to state 153
    struct_member_exp	go to state 155



state 333

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    CLOSE_PAR	shift, and go to state 489
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 334

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    OPEN_PAR	shift, and go to state 221
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 400
    point_exp	go to state 401
    address_exp	go to state 152
    identifier	go to state 402
    struct_member_exp	go to state 403



state 335

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 324)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 325)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    COMMA	shift, and go to state 490
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 195

    CLOSE_PAR	[reduce using rule 327 (option_input)]
    $default	reduce using rule 327 (option_input)

    option_input	go to state 492



state 336

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 322)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 323)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    COMMA	shift, and go to state 490
    CLOSE_PAR	shift, and go to state 493
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 327 (option_input)]
    $default	reduce using rule 327 (option_input)

    option_input	go to state 494



state 337

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 326)

    CLOSE_PAR	shift, and go to state 495



state 338

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 496
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 339

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 497
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 340

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 498
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 341

    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)
    option_function_identifier  ->  ADDRESS . error   (rule 275)

    error	shift, and go to state 499
    OPEN_PAR	shift, and go to state 221
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 165

    array	go to state 222
    point_exp	go to state 223
    address_exp	go to state 224
    identifier	go to state 225
    struct_member_exp	go to state 226



state 342

    option_function_identifier  ->  STRUCT_TYPE .   (rule 273)

    $default	reduce using rule 273 (option_function_identifier)



state 343

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 271)

    COMMA	shift, and go to state 500

    $default	reduce using rule 277 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 501



state 344

    option_function_identifier  ->  all_type_define .   (rule 272)

    $default	reduce using rule 272 (option_function_identifier)



state 345

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 502



state 346

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 504



state 347

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 348

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)

    ASS_P	shift, and go to state 505



state 349

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 506
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 350

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 102)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 103)

    error	shift, and go to state 507
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 508
    identifier	go to state 183



state 351

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 96)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 509
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 352

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 94)

    $default	reduce using rule 94 (option_identifier_array_declaration)



state 353

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187

    $default	reduce using rule 32 (statement)



state 354

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 187

    $default	reduce using rule 31 (statement)



state 355

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 187

    $default	reduce using rule 54 (statement)



state 356

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)



state 357

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 510



state 358

    option_struct_declaration  ->  sign_declaration .   (rule 65)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 66)

    AND 	shift, and go to state 511

    $default	reduce using rule 65 (option_struct_declaration)



state 359

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 109)

    $default	reduce using rule 109 (ass_statement)



state 360

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 512
    identifier	go to state 261



state 361

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 334)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 515



state 362

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 331)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 516



state 363

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 517



state 364

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 518



state 365

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 337)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 519



state 366

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 335)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 520



state 367

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 332)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 521



state 368

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 522



state 369

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 339)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 523



state 370

    struct_member_exp  ->  identifier DOT function .   (rule 343)

    $default	reduce using rule 343 (struct_member_exp)



state 371

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 333)

    DOT 	shift, and go to state 513
    OPEN_PAR	shift, and go to state 194
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 524



state 372

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 330)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 525



state 373

    struct_member_exp  ->  identifier IMPLY function .   (rule 344)

    $default	reduce using rule 344 (struct_member_exp)



state 374

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 340)

    DOT 	shift, and go to state 513
    OPEN_PAR	shift, and go to state 194
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 526



state 375

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 336)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 527



state 376

    complexProposition  ->  DEFINE ID COLON ari_exp .   (rule 25)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 25 (complexProposition)



state 377

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 202
    CHOP	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 528



state 378

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 529



state 379

    ari_exp  ->  IF ari_exp THEN . ari_exp option_exp_else_statement   (rule 167)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 530
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 380

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    MUL 	shift, and go to state 531



state 381

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 532
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 382

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 534
    MUL 	shift, and go to state 535



state 383

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 219)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 536
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 384

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 537
    MUL 	shift, and go to state 538



state 385

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 539
    MUL 	shift, and go to state 540



state 386

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 541
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 387

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 542
    MUL 	shift, and go to state 543



state 388

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 544



state 389

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 545



state 390

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 546



state 391

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 547
    CHARDECLARATION	shift, and go to state 548



state 392

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 549
    MUL 	shift, and go to state 550



state 393

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 551
    MUL 	shift, and go to state 552



state 394

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 553



state 395

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 554



state 396

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 555
    MUL 	shift, and go to state 556



state 397

    array_cast_exp  ->  OPEN_PAR array_cast_exp CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (array_cast_exp)



state 398

    simple_ari_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 197)

    $default	reduce using rule 197 (simple_ari_exp)



state 399

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 342)

    IMPLY	shift, and go to state 470

    IMPLY	[reduce using rule 216 (address_exp)]
    $default	reduce using rule 216 (address_exp)



state 400

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 309
    IMPLY	shift, and go to state 195



state 401

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 332)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 335)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 339)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 196
    CLOSE_PAR	shift, and go to state 310
    IMPLY	shift, and go to state 197



state 402

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 284)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 312
    IMPLY	shift, and go to state 199



state 403

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 346)

    CLOSE_PAR	shift, and go to state 316



state 404

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp INTER_OR ari_exp .   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 165 (ari_exp)



state 405

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    ari_exp  ->  ari_exp BOOL_OR ari_exp .   (rule 175)

    INTER_OR	shift, and go to state 230
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 175 (ari_exp)



state 406

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp CON ari_exp .   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 166 (ari_exp)



state 407

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp ADDRESS ari_exp .   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 164 (ari_exp)



state 408

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp BOOL_AND ari_exp .   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 174 (ari_exp)



state 409

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp NE ari_exp .   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 171 (ari_exp)



state 410

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp EQ ari_exp .   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 173 (ari_exp)



state 411

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp GE ari_exp .   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 169 (ari_exp)



state 412

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp LE ari_exp .   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 170 (ari_exp)



state 413

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp GT ari_exp .   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 168 (ari_exp)



state 414

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp LT ari_exp .   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 172 (ari_exp)



state 415

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp LST ari_exp .   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 162 (ari_exp)



state 416

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp RST ari_exp .   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 163 (ari_exp)



state 417

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp ADD ari_exp .   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 157 (ari_exp)



state 418

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp SUB ari_exp .   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 158 (ari_exp)



state 419

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp MUL ari_exp .   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)


    $default	reduce using rule 159 (ari_exp)



state 420

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp DIV ari_exp .   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)


    $default	reduce using rule 160 (ari_exp)



state 421

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp MOD ari_exp .   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)


    $default	reduce using rule 161 (ari_exp)



state 422

    switch_statement  ->  SWITCH OPEN_PAR simple_ari_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 309)

    OPEN_BPAR	shift, and go to state 557



state 423

    if_statement  ->  IF ari_exp THEN statement_bpar . option_else_statement   (rule 315)

    ELSE	shift, and go to state 558

    $default	reduce using rule 317 (option_else_statement)

    option_else_statement	go to state 559



state 424

    statement  ->  AWAIT OPEN_PAR ari_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 425

    option_function_parameter_list  ->  OPEN_PAR . MUL ID CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 267)

    MUL 	shift, and go to state 560



state 426

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 251)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 252)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 253)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 254)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 258)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 259)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 260)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 561
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 562
    identifier	go to state 563



state 427

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 247)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 248)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 249)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 250)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 255)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 256)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 257)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 564
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 565
    identifier	go to state 566



state 428

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 245)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 246)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 261)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 262)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 567
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 568
    identifier	go to state 569



state 429

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 570



state 430

    inner_option_define_identifier  ->  COMMA option_function_parameter_list .   (rule 269)

    $default	reduce using rule 269 (inner_option_define_identifier)



state 431

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_BPAR	shift, and go to state 571



state 432

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 289)
    option_frame_identifier  ->  COMMA . error   (rule 291)

    error	shift, and go to state 572
    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    identifier	go to state 573



state 433

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 574



state 434

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 575
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 257
    identifier	go to state 183



state 435

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 576
    CHARDECLARATION	shift, and go to state 577
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 578
    OPEN_PAR	shift, and go to state 435
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 579
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 170
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_left	go to state 436
    leftaddrshift	go to state 69
    array	go to state 274
    array_cast_exp	go to state 215
    point_exp	go to state 275
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 276
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 278



state 436

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 308



state 437

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 134
    CLOSE_PAR	shift, and go to state 555
    MUL 	shift, and go to state 580
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 347
    identifier	go to state 183



state 438

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 301)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    $default	reduce using rule 306 (for_sta_condition)

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 581
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    for_sta_condition	go to state 582
    struct_member_exp	go to state 112



state 439

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 300)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 583



state 440

    bool_par  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 281)

    $default	reduce using rule 281 (bool_par)



state 441

    statement_bpar  ->  error CLOSE_BPAR .   (rule 280)

    $default	reduce using rule 280 (statement_bpar)



state 442

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 279)

    CLOSE_BPAR	shift, and go to state 584
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 443

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 585



state 444

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 135)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 201)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 388
    CHARDECLARATION	shift, and go to state 389
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 444
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 391
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 445
    rightaddrshift	go to state 291
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 446
    simple_ari_exp	go to state 104
    array_exp	go to state 447
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 448
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 445

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 135)

    CLOSE_PAR	shift, and go to state 586



state 446

    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    simple_ari_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 197)

    CLOSE_PAR	shift, and go to state 398
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    CLOSE_PAR	[reduce using rule 132 (ass_right)]
    $default	reduce using rule 132 (ass_right)



state 447

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 198)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 201)

    CLOSE_PAR	shift, and go to state 587
    CON 	shift, and go to state 459

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)



state 448

    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)
    simple_ari_exp  ->  strliteral .   (rule 183)

    CLOSE_PAR	shift, and go to state 588

    CLOSE_PAR	[reduce using rule 183 (simple_ari_exp)]
    $default	reduce using rule 183 (simple_ari_exp)



state 449

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 201)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 589
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    array_exp	go to state 590
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 450

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 205)

    COMMA	shift, and go to state 591
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 592



state 451

    array_exp  ->  array_exp . CON array_exp   (rule 198)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 206)

    COMMA	shift, and go to state 591
    CON 	shift, and go to state 459

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 593



state 452

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 202)

    COMMA	shift, and go to state 591
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 594



state 453

    array_exp  ->  array_exp . CON array_exp   (rule 198)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 204)

    COMMA	shift, and go to state 591
    CON 	shift, and go to state 459

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 595



state 454

    simple_ari_exp  ->  strliteral .   (rule 183)
    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 203)

    COMMA	shift, and go to state 591

    COMMA	[reduce using rule 183 (simple_ari_exp)]
    CLOSE_MPAR	reduce using rule 183 (simple_ari_exp)
    CLOSE_MPAR	[reduce using rule 210 (inner_option_list_value)]
    $default	reduce using rule 183 (simple_ari_exp)

    inner_option_list_value	go to state 596



state 455

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 597
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 325
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    type_define	go to state 326
    leftaddrshift	go to state 598
    array	go to state 214
    array_cast_exp	go to state 101
    point_exp	go to state 216
    ari_exp	go to state 327
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    sign_type_define	go to state 328
    all_type_define	go to state 329
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 456

    option_output  ->  COMMA . ass_right option_output   (rule 321)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 599
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 457

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 318)

    $default	reduce using rule 318 (output_statement)



state 458

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 319)

    CLOSE_PAR	shift, and go to state 600



state 459

    array_exp  ->  array_exp CON . array_exp   (rule 198)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288

    array_exp	go to state 602
    option_list_value	go to state 294
    option_struct_list_value	go to state 295



state 460

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 603



state 461

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 604



state 462

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 605



state 463

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 606

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 464

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 298)

    IMPLY	shift, and go to state 471

    $default	reduce using rule 298 (imply_pre)



state 465

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 607

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 466

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 608
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 467

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    OPEN_PAR	shift, and go to state 609



state 468

    imply_pre  ->  imply_pre . AND imply_pre   (rule 296)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 297)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 298)

    CLOSE_PAR	shift, and go to state 610
    OR  	shift, and go to state 314
    AND 	shift, and go to state 315



state 469

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 611
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 470

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 342)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 612
    identifier	go to state 613



state 471

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 614



state 472

    imply_pre  ->  imply_pre . AND imply_pre   (rule 296)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 297)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 297)

    AND 	shift, and go to state 315

    $default	reduce using rule 297 (imply_pre)



state 473

    imply_pre  ->  imply_pre . AND imply_pre   (rule 296)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 296)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 297)


    $default	reduce using rule 296 (imply_pre)



state 474

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 293)

    COMMA	shift, and go to state 317
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187

    $default	reduce using rule 292 (option_projection)

    option_projection	go to state 615



state 475

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 616



state 476

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 617



state 477

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 618



state 478

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 619



state 479

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    identifier	go to state 620



state 480

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    identifier  ->  ID .   (rule 283)

    OPEN_MPAR	shift, and go to state 621

    $default	reduce using rule 283 (identifier)



state 481

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 467



state 482

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 241)

    $default	reduce using rule 241 (sign_type_define)



state 483

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 242)

    $default	reduce using rule 242 (sign_type_define)



state 484

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 485

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 153)

    CLOSE_PAR	shift, and go to state 622



state 486

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 487

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    INTDECLARATION	shift, and go to state 623
    CHARDECLARATION	shift, and go to state 624
    FLOATDECLARATION	shift, and go to state 625
    OPEN_PAR	shift, and go to state 487
    UNSIGNED	shift, and go to state 626
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 170
    ID  	shift, and go to state 165

    ass_left	go to state 436
    leftaddrshift	go to state 69
    array	go to state 488
    point_exp	go to state 151
    address_exp	go to state 300
    identifier	go to state 153
    struct_member_exp	go to state 155



state 488

    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 331)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 334)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 337)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 341)

    DOT 	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 309
    IMPLY	shift, and go to state 195

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 489

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)



state 490

    option_input  ->  COMMA . identifier option_input   (rule 328)
    option_input  ->  COMMA . array option_input   (rule 329)

    OPEN_PAR	shift, and go to state 360
    ID  	shift, and go to state 165

    array	go to state 627
    identifier	go to state 628



state 491

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 324)

    $default	reduce using rule 324 (input_statement)



state 492

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 325)

    CLOSE_PAR	shift, and go to state 629



state 493

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 322)

    $default	reduce using rule 322 (input_statement)



state 494

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 323)

    CLOSE_PAR	shift, and go to state 630



state 495

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 326)

    $default	reduce using rule 326 (input_statement)



state 496

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)



state 497

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 498

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 499

    option_function_identifier  ->  ADDRESS error .   (rule 275)

    $default	reduce using rule 275 (option_function_identifier)



state 500

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 276)
    inner_option_function_identifier  ->  COMMA . error   (rule 278)

    error	shift, and go to state 631
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 286
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 289
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    ass_right	go to state 632
    rightaddrshift	go to state 291
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 292
    simple_ari_exp	go to state 104
    array_exp	go to state 293
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 501

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_identifier)



state 502

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (function)



state 503

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 146)
    option_ari_exp  ->  COMMA . error   (rule 147)

    error	shift, and go to state 633
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 634
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 504

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 635



state 505

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    STRLITERAL	shift, and go to state 95

    array_exp	go to state 636
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    strliteral	go to state 637



state 506

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 638



state 507

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 508

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (inner_option_identifier_array_declaration)



state 509

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 350

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 639



state 510

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (struct_define_statement)



state 511

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 66)

    STRUCT	shift, and go to state 159
    UNION	shift, and go to state 160
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 161
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 640
    sign_declaration	go to state 358
    declaration	go to state 65
    type_define	go to state 66



state 512

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 139)

    CLOSE_PAR	shift, and go to state 309



state 513

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 348)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 349)
    option_struct_member_exp  ->  DOT . function   (rule 352)

    OPEN_PAR	shift, and go to state 360
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 641
    array	go to state 642
    identifier	go to state 643



state 514

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 350)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 351)
    option_struct_member_exp  ->  IMPLY . function   (rule 353)

    OPEN_PAR	shift, and go to state 360
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 644
    array	go to state 645
    identifier	go to state 646



state 515

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 334)

    $default	reduce using rule 334 (struct_member_exp)



state 516

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 331)

    $default	reduce using rule 331 (struct_member_exp)



state 517

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 518

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 341)

    $default	reduce using rule 341 (struct_member_exp)



state 519

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 337)

    $default	reduce using rule 337 (struct_member_exp)



state 520

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 335)

    $default	reduce using rule 335 (struct_member_exp)



state 521

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 332)

    $default	reduce using rule 332 (struct_member_exp)



state 522

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 345)

    $default	reduce using rule 345 (struct_member_exp)



state 523

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 339)

    $default	reduce using rule 339 (struct_member_exp)



state 524

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 333)

    $default	reduce using rule 333 (struct_member_exp)



state 525

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 330)

    $default	reduce using rule 330 (struct_member_exp)



state 526

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 340)

    $default	reduce using rule 340 (struct_member_exp)



state 527

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 336)

    $default	reduce using rule 336 (struct_member_exp)



state 528

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 529

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 647



state 530

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  IF ari_exp THEN ari_exp . option_exp_else_statement   (rule 167)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    ELSE	shift, and go to state 648
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    ELSE	[reduce using rule 179 (option_exp_else_statement)]
    INTER_OR	[reduce using rule 179 (option_exp_else_statement)]
    BOOL_OR	[reduce using rule 179 (option_exp_else_statement)]
    CON 	[reduce using rule 179 (option_exp_else_statement)]
    ADDRESS	[reduce using rule 179 (option_exp_else_statement)]
    BOOL_AND	[reduce using rule 179 (option_exp_else_statement)]
    NE  	[reduce using rule 179 (option_exp_else_statement)]
    EQ  	[reduce using rule 179 (option_exp_else_statement)]
    GE  	[reduce using rule 179 (option_exp_else_statement)]
    LE  	[reduce using rule 179 (option_exp_else_statement)]
    GT  	[reduce using rule 179 (option_exp_else_statement)]
    LT  	[reduce using rule 179 (option_exp_else_statement)]
    LST 	[reduce using rule 179 (option_exp_else_statement)]
    RST 	[reduce using rule 179 (option_exp_else_statement)]
    ADD 	[reduce using rule 179 (option_exp_else_statement)]
    SUB 	[reduce using rule 179 (option_exp_else_statement)]
    MUL 	[reduce using rule 179 (option_exp_else_statement)]
    DIV 	[reduce using rule 179 (option_exp_else_statement)]
    MOD 	[reduce using rule 179 (option_exp_else_statement)]
    $default	reduce using rule 179 (option_exp_else_statement)

    option_exp_else_statement	go to state 649



state 531

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 650
    MUL 	shift, and go to state 651



state 532

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 533

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 177)

    $default	reduce using rule 177 (type_cast_alg_exp)



state 534

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 653
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 535

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 654



state 536

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 537

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 655
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 538

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 656



state 539

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 657
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 540

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 658



state 541

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 542

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 659
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 543

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 660



state 544

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 661
    MUL 	shift, and go to state 535



state 545

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 662
    MUL 	shift, and go to state 538



state 546

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 663
    MUL 	shift, and go to state 543



state 547

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 549
    MUL 	shift, and go to state 664



state 548

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 551
    MUL 	shift, and go to state 665



state 549

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 222)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 666
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 550

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 667
    MUL 	shift, and go to state 668



state 551

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 223)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 669
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 552

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 670
    MUL 	shift, and go to state 671



state 553

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 220)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 672
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 554

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 221)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 673
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 555

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 674
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 556

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 675



state 557

    switch_statement  ->  SWITCH OPEN_PAR simple_ari_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 309)

    CASE	shift, and go to state 676
    DEFAULT	shift, and go to state 677

    case_par	go to state 678



state 558

    option_else_statement  ->  ELSE . statement_bpar   (rule 316)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 679



state 559

    if_statement  ->  IF ari_exp THEN statement_bpar option_else_statement .   (rule 315)

    $default	reduce using rule 315 (if_statement)



state 560

    option_function_parameter_list  ->  OPEN_PAR MUL . ID CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 267)

    ID  	shift, and go to state 680



state 561

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 252)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 253)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 259)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 260)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 681
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 682
    identifier	go to state 683



state 562

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 258)

    $default	reduce using rule 258 (option_function_parameter_list)



state 563

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 251)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 254)

    ARRAY	shift, and go to state 684
    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 685



state 564

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 248)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 249)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 256)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 257)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 686
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 687
    identifier	go to state 688



state 565

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 255)

    $default	reduce using rule 255 (option_function_parameter_list)



state 566

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 247)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 250)

    ARRAY	shift, and go to state 689
    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 690



state 567

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 262)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    MUL 	shift, and go to state 691
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 692
    identifier	go to state 693



state 568

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 246)

    $default	reduce using rule 246 (option_function_parameter_list)



state 569

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 245)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 261)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 263)

    ARRAY	shift, and go to state 694
    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 695



state 570

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 696



state 571

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 63)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 697
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 572

    option_frame_identifier  ->  COMMA error .   (rule 291)

    $default	reduce using rule 291 (option_frame_identifier)



state 573

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 289)

    COMMA	shift, and go to state 432

    $default	reduce using rule 290 (option_frame_identifier)

    option_frame_identifier	go to state 698



state 574

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 699



state 575

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 134
    CLOSE_PAR	shift, and go to state 650
    MUL 	shift, and go to state 700
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 347
    identifier	go to state 183



state 576

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 701



state 577

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 702



state 578

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 386
    MUL 	shift, and go to state 703



state 579

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 547
    CHARDECLARATION	shift, and go to state 704



state 580

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 134
    CLOSE_PAR	shift, and go to state 675
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 347
    identifier	go to state 183



state 581

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    for_sta_condition  ->  ari_exp .   (rule 305)

    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 305 (for_sta_condition)



state 582

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 301)

    COMMA	shift, and go to state 705



state 583

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 300)

    $default	reduce using rule 300 (for_statement)



state 584

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 279)

    $default	reduce using rule 279 (statement_bpar)



state 585

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR ari_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 706



state 586

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 135)

    $default	reduce using rule 135 (ass_right)



state 587

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 201)

    $default	reduce using rule 201 (array_exp)



state 588

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    OPEN_PAR	shift, and go to state 707



state 589

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 201)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 388
    CHARDECLARATION	shift, and go to state 389
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 589
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 391
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    array_exp	go to state 590
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 590

    array_exp  ->  array_exp . CON array_exp   (rule 198)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 201)

    CLOSE_PAR	shift, and go to state 587
    CON 	shift, and go to state 459



state 591

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 207)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 208)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 209)
    inner_option_list_value  ->  COMMA . error   (rule 211)

    error	shift, and go to state 708
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 449
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 709
    simple_ari_exp	go to state 104
    array_exp	go to state 710
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 711
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 592

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 205)

    CLOSE_BPAR	shift, and go to state 712



state 593

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 206)

    CLOSE_BPAR	shift, and go to state 713



state 594

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 202)

    CLOSE_MPAR	shift, and go to state 714



state 595

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 204)

    CLOSE_MPAR	shift, and go to state 715



state 596

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 203)

    CLOSE_MPAR	shift, and go to state 716



state 597

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 717
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 598

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 137)

    CLOSE_PAR	shift, and go to state 718



state 599

    option_output  ->  COMMA ass_right . option_output   (rule 321)

    COMMA	shift, and go to state 456

    $default	reduce using rule 320 (option_output)

    option_output	go to state 719



state 600

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (output_statement)



state 601

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 201)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288

    array_exp	go to state 590
    option_list_value	go to state 294
    option_struct_list_value	go to state 295



state 602

    array_exp  ->  array_exp . CON array_exp   (rule 198)
    array_exp  ->  array_exp CON array_exp .   (rule 198)


    $default	reduce using rule 198 (array_exp)



state 603

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 720
    INTLITERAL	shift, and go to state 721



state 604

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 722
    INTLITERAL	shift, and go to state 723



state 605

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    INTLITERAL	shift, and go to state 724



state 606

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 725



state 607

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 726



state 608

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 727



state 609

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 84)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 728



state 610

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 298)

    $default	reduce using rule 298 (imply_pre)



state 611

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 729



state 612

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 342)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 730



state 613

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 338)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 731



state 614

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 732
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 615

    option_projection  ->  COMMA statement option_projection .   (rule 293)

    $default	reduce using rule 293 (option_projection)



state 616

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 617

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 733



state 618

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 734



state 619

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)



state 620

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 607



state 621

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 735
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 622

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 153)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 736
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 623

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 460



state 624

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 461



state 625

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    MUL 	shift, and go to state 462



state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CHARDECLARATION	shift, and go to state 737



state 627

    option_input  ->  COMMA array . option_input   (rule 329)

    COMMA	shift, and go to state 490

    $default	reduce using rule 327 (option_input)

    option_input	go to state 738



state 628

    option_input  ->  COMMA identifier . option_input   (rule 328)

    COMMA	shift, and go to state 490

    $default	reduce using rule 327 (option_input)

    option_input	go to state 739



state 629

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 325)

    $default	reduce using rule 325 (input_statement)



state 630

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 323)

    $default	reduce using rule 323 (input_statement)



state 631

    inner_option_function_identifier  ->  COMMA error .   (rule 278)

    $default	reduce using rule 278 (inner_option_function_identifier)



state 632

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 276)

    COMMA	shift, and go to state 500

    $default	reduce using rule 277 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 740



state 633

    option_ari_exp  ->  COMMA error .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 634

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 146)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 741



state 635

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    $default	reduce using rule 138 (array)



state 636

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 97)
    array_exp  ->  array_exp . CON array_exp   (rule 198)

    COMMA	shift, and go to state 350
    CON 	shift, and go to state 459

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 742



state 637

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 350

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 743



state 638

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    CLOSE_MPAR	shift, and go to state 744



state 639

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 640

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 66)

    $default	reduce using rule 66 (option_struct_declaration)



state 641

    option_struct_member_exp  ->  DOT function .   (rule 352)

    $default	reduce using rule 352 (option_struct_member_exp)



state 642

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 349)

    DOT 	shift, and go to state 513
    OPEN_PAR	shift, and go to state 194
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 745



state 643

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 348)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 746



state 644

    option_struct_member_exp  ->  IMPLY function .   (rule 353)

    $default	reduce using rule 353 (option_struct_member_exp)



state 645

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 351)

    DOT 	shift, and go to state 513
    OPEN_PAR	shift, and go to state 194
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 747



state 646

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 350)

    DOT 	shift, and go to state 513
    IMPLY	shift, and go to state 514

    DOT 	[reduce using rule 347 (option_struct_member_exp)]
    IMPLY	[reduce using rule 347 (option_struct_member_exp)]
    $default	reduce using rule 347 (option_struct_member_exp)

    option_struct_member_exp	go to state 748



state 647

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 749



state 648

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 178)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 750
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 649

    ari_exp  ->  IF ari_exp THEN ari_exp option_exp_else_statement .   (rule 167)

    $default	reduce using rule 167 (ari_exp)



state 650

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 751
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 651

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 752



state 652

    casted_element  ->  type_cast_alg_exp .   (rule 240)

    $default	reduce using rule 240 (casted_element)



state 653

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 654

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 753
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 655

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 656

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 754
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 657

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 658

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 755
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 659

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 660

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 756
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 661

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 653
    identifier	go to state 757
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 662

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 655
    identifier	go to state 758
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 663

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 659
    identifier	go to state 759
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 664

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 760
    MUL 	shift, and go to state 668



state 665

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 761
    MUL 	shift, and go to state 671



state 666

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 667

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 762
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 668

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 763



state 669

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 670

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 764
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 671

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 765



state 672

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 673

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 674

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 675

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 766
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 676

    case_par  ->  CASE . simple_ari_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 310)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    simple_ari_exp	go to state 767
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 677

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 311)

    COLON	shift, and go to state 768



state 678

    switch_statement  ->  SWITCH OPEN_PAR simple_ari_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 309)

    CLOSE_BPAR	shift, and go to state 769



state 679

    option_else_statement  ->  ELSE statement_bpar .   (rule 316)

    $default	reduce using rule 316 (option_else_statement)



state 680

    option_function_parameter_list  ->  OPEN_PAR MUL ID . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 267)

    CLOSE_PAR	shift, and go to state 770



state 681

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 253)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 260)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 771
    identifier	go to state 772



state 682

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 259)

    $default	reduce using rule 259 (option_function_parameter_list)



state 683

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 252)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 773



state 684

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 254)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 774



state 685

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 251)

    $default	reduce using rule 251 (option_function_parameter_list)



state 686

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 249)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 257)

    COMMA	shift, and go to state 262
    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 775
    identifier	go to state 776



state 687

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 256)

    $default	reduce using rule 256 (option_function_parameter_list)



state 688

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 248)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 777



state 689

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 250)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778



state 690

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 247)

    $default	reduce using rule 247 (option_function_parameter_list)



state 691

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 266)

    OPEN_PAR	shift, and go to state 134
    ID  	shift, and go to state 135

    identifier	go to state 779



state 692

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 693

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 262)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 264)

    ARRAY	shift, and go to state 780
    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 781



state 694

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 261)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 263)

    COMMA	shift, and go to state 262
    OPEN_MPAR	shift, and go to state 782

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 783



state 695

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 245)

    $default	reduce using rule 245 (option_function_parameter_list)



state 696

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 784



state 697

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 63)

    CLOSE_BPAR	shift, and go to state 785
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 698

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 289)

    $default	reduce using rule 289 (option_frame_identifier)



state 699

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 786



state 700

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 134
    CLOSE_PAR	shift, and go to state 752
    MUL 	shift, and go to state 180
    ID  	shift, and go to state 181

    option_identifier_array_declaration	go to state 347
    identifier	go to state 183



state 701

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 787
    MUL 	shift, and go to state 535



state 702

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 788
    MUL 	shift, and go to state 538



state 703

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 789
    MUL 	shift, and go to state 543



state 704

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 551
    MUL 	shift, and go to state 790



state 705

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 301)

    OPEN_PAR	shift, and go to state 332
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 170
    ID  	shift, and go to state 165

    $default	reduce using rule 308 (for_sta_control)

    ass_statement	go to state 791
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 172
    point_exp	go to state 71
    identifier	go to state 72
    for_sta_control	go to state 792
    struct_member_exp	go to state 80



state 706

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . ari_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 793
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 707

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44

    type_define	go to state 794



state 708

    inner_option_list_value  ->  COMMA error .   (rule 211)

    $default	reduce using rule 211 (inner_option_list_value)



state 709

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 207)

    COMMA	shift, and go to state 591
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 795



state 710

    array_exp  ->  array_exp . CON array_exp   (rule 198)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 209)

    COMMA	shift, and go to state 591
    CON 	shift, and go to state 459

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 796



state 711

    simple_ari_exp  ->  strliteral .   (rule 183)
    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 208)

    COMMA	shift, and go to state 591

    COMMA	[reduce using rule 183 (simple_ari_exp)]
    CLOSE_BPAR	reduce using rule 183 (simple_ari_exp)
    CLOSE_BPAR	[reduce using rule 210 (inner_option_list_value)]
    CLOSE_MPAR	reduce using rule 183 (simple_ari_exp)
    CLOSE_MPAR	[reduce using rule 210 (inner_option_list_value)]
    $default	reduce using rule 183 (simple_ari_exp)

    inner_option_list_value	go to state 797



state 712

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 205)

    $default	reduce using rule 205 (option_struct_list_value)



state 713

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 206)

    $default	reduce using rule 206 (option_struct_list_value)



state 714

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 202)

    $default	reduce using rule 202 (option_list_value)



state 715

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 204)

    $default	reduce using rule 204 (option_list_value)



state 716

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 203)

    $default	reduce using rule 203 (option_list_value)



state 717

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 576
    CHARDECLARATION	shift, and go to state 577
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 578
    OPEN_PAR	shift, and go to state 210
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 579
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 718

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 137)

    $default	reduce using rule 137 (rightaddrshift)



state 719

    option_output  ->  COMMA ass_right option_output .   (rule 321)

    $default	reduce using rule 321 (option_output)



state 720

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 798



state 721

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 799



state 722

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 800



state 723

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    CLOSE_PAR	shift, and go to state 801



state 724

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 802



state 725

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 803
    INTLITERAL	shift, and go to state 804



state 726

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 805



state 727

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 806



state 728

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 807



state 729

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 808



state 730

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 342)

    $default	reduce using rule 342 (struct_member_exp)



state 731

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 338)

    $default	reduce using rule 338 (struct_member_exp)



state 732

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 809
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 733

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 734

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 59)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 810
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 735

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 811



state 736

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 153)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    INTER_OR	[reduce using rule 153 (point_exp)]
    BOOL_OR	[reduce using rule 153 (point_exp)]
    CON 	[reduce using rule 153 (point_exp)]
    ADDRESS	[reduce using rule 153 (point_exp)]
    BOOL_AND	[reduce using rule 153 (point_exp)]
    NE  	[reduce using rule 153 (point_exp)]
    EQ  	[reduce using rule 153 (point_exp)]
    GE  	[reduce using rule 153 (point_exp)]
    LE  	[reduce using rule 153 (point_exp)]
    GT  	[reduce using rule 153 (point_exp)]
    LT  	[reduce using rule 153 (point_exp)]
    LST 	[reduce using rule 153 (point_exp)]
    RST 	[reduce using rule 153 (point_exp)]
    ADD 	[reduce using rule 153 (point_exp)]
    SUB 	[reduce using rule 153 (point_exp)]
    MUL 	[reduce using rule 153 (point_exp)]
    DIV 	[reduce using rule 153 (point_exp)]
    MOD 	[reduce using rule 153 (point_exp)]
    $default	reduce using rule 153 (point_exp)



state 737

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 606



state 738

    option_input  ->  COMMA array option_input .   (rule 329)

    $default	reduce using rule 329 (option_input)



state 739

    option_input  ->  COMMA identifier option_input .   (rule 328)

    $default	reduce using rule 328 (option_input)



state 740

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 276)

    $default	reduce using rule 276 (inner_option_function_identifier)



state 741

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 146)

    $default	reduce using rule 146 (option_ari_exp)



state 742

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 743

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 744

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 350
    ASS_P	shift, and go to state 812

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 813



state 745

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 349)

    $default	reduce using rule 349 (option_struct_member_exp)



state 746

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 348)

    $default	reduce using rule 348 (option_struct_member_exp)



state 747

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 351)

    $default	reduce using rule 351 (option_struct_member_exp)



state 748

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 350)

    $default	reduce using rule 350 (option_struct_member_exp)



state 749

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 814
    CHOP	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    IFF 	shift, and go to state 123
    PROPIMPLY	shift, and go to state 124
    CHOPSTAR	shift, and go to state 125



state 750

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 178)

    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    INTER_OR	[reduce using rule 178 (option_exp_else_statement)]
    BOOL_OR	[reduce using rule 178 (option_exp_else_statement)]
    CON 	[reduce using rule 178 (option_exp_else_statement)]
    ADDRESS	[reduce using rule 178 (option_exp_else_statement)]
    BOOL_AND	[reduce using rule 178 (option_exp_else_statement)]
    NE  	[reduce using rule 178 (option_exp_else_statement)]
    EQ  	[reduce using rule 178 (option_exp_else_statement)]
    GE  	[reduce using rule 178 (option_exp_else_statement)]
    LE  	[reduce using rule 178 (option_exp_else_statement)]
    GT  	[reduce using rule 178 (option_exp_else_statement)]
    LT  	[reduce using rule 178 (option_exp_else_statement)]
    LST 	[reduce using rule 178 (option_exp_else_statement)]
    RST 	[reduce using rule 178 (option_exp_else_statement)]
    ADD 	[reduce using rule 178 (option_exp_else_statement)]
    SUB 	[reduce using rule 178 (option_exp_else_statement)]
    MUL 	[reduce using rule 178 (option_exp_else_statement)]
    DIV 	[reduce using rule 178 (option_exp_else_statement)]
    MOD 	[reduce using rule 178 (option_exp_else_statement)]
    $default	reduce using rule 178 (option_exp_else_statement)



state 751

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 752

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 815
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 753

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 754

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 755

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 756

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 757

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    simple_ari_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 816
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 758

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    simple_ari_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 817
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 759

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    simple_ari_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 818
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 760

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 762
    identifier	go to state 819
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 761

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 764
    identifier	go to state 820
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 762

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 763

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 821
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 764

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 765

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 822
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 766

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)



state 767

    case_par  ->  CASE simple_ari_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 310)

    COLON	shift, and go to state 823



state 768

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 311)

    OPEN_PAR	shift, and go to state 824



state 769

    switch_statement  ->  SWITCH OPEN_PAR simple_ari_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 309)

    $default	reduce using rule 309 (switch_statement)



state 770

    option_function_parameter_list  ->  OPEN_PAR MUL ID CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 267)

    OPEN_PAR	shift, and go to state 825



state 771

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 260)

    $default	reduce using rule 260 (option_function_parameter_list)



state 772

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 253)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 826



state 773

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 252)

    $default	reduce using rule 252 (option_function_parameter_list)



state 774

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 254)

    $default	reduce using rule 254 (option_function_parameter_list)



state 775

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 257)

    $default	reduce using rule 257 (option_function_parameter_list)



state 776

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 249)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 827



state 777

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 248)

    $default	reduce using rule 248 (option_function_parameter_list)



state 778

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 250)

    $default	reduce using rule 250 (option_function_parameter_list)



state 779

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 828



state 780

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 262)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 829



state 781

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 264)

    $default	reduce using rule 264 (option_function_parameter_list)



state 782

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 263)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 830
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 783

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 261)

    $default	reduce using rule 261 (option_function_parameter_list)



state 784

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 831
    empty_statement	go to state 832
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 785

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 786

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 833
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 787

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 834
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 835
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 653
    identifier	go to state 757
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 788

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 836
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 837
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 655
    identifier	go to state 758
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 789

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 838
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 659
    identifier	go to state 759
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 790

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 839
    MUL 	shift, and go to state 671



state 791

    for_sta_control  ->  ass_statement .   (rule 307)

    $default	reduce using rule 307 (for_sta_control)



state 792

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 301)

    CLOSE_PAR	shift, and go to state 840



state 793

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp . CLOSE_PAR   (rule 44)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    CLOSE_PAR	shift, and go to state 841
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 794

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    CLOSE_PAR	shift, and go to state 842



state 795

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 207)

    $default	reduce using rule 207 (inner_option_list_value)



state 796

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 209)

    $default	reduce using rule 209 (inner_option_list_value)



state 797

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 208)

    $default	reduce using rule 208 (inner_option_list_value)



state 798

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTDECLARATION	shift, and go to state 843
    CHARDECLARATION	shift, and go to state 844
    UNSIGNED	shift, and go to state 845



state 799

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 846



state 800

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTDECLARATION	shift, and go to state 847
    CHARDECLARATION	shift, and go to state 848
    UNSIGNED	shift, and go to state 849



state 801

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    OPEN_MPAR	shift, and go to state 850



state 802

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 851



state 803

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 852



state 804

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 853



state 805

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 854



state 806

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    CLOSE_PAR	shift, and go to state 855

    CLOSE_PAR	[reduce using rule 138 (array)]
    $default	reduce using rule 138 (array)



state 807

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 808

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 809

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 810

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 856
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 811

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_MPAR	shift, and go to state 857



state 812

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288
    STRLITERAL	shift, and go to state 95

    array_exp	go to state 858
    option_list_value	go to state 294
    option_struct_list_value	go to state 295
    strliteral	go to state 859



state 813

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)



state 814

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 815

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)



state 816

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 860



state 817

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 861



state 818

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 862



state 819

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    simple_ari_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 863
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 820

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    simple_ari_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 330)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 333)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 336)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 340)
    struct_member_exp  ->  identifier . DOT function   (rule 343)
    struct_member_exp  ->  identifier . IMPLY function   (rule 344)

    DOT 	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 864
    IMPLY	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 184 (simple_ari_exp)]
    $default	reduce using rule 184 (simple_ari_exp)



state 821

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 822

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 823

    case_par  ->  CASE simple_ari_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 310)

    OPEN_PAR	shift, and go to state 865



state 824

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 311)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 866
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 825

    option_function_parameter_list  ->  OPEN_PAR MUL ID CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 267)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 867



state 826

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 253)

    $default	reduce using rule 253 (option_function_parameter_list)



state 827

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 249)

    $default	reduce using rule 249 (option_function_parameter_list)



state 828

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 829

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 262)

    $default	reduce using rule 262 (option_function_parameter_list)



state 830

    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 263)

    CLOSE_MPAR	shift, and go to state 868
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247



state 831

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 67)

    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187

    $default	reduce using rule 67 (empty_statement)



state 832

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 869



state 833

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 870
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 834

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 871
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 835

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 799

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 836

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 872
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 837

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 801

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 838

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 802

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 839

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 873
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 874
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 764
    identifier	go to state 820
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 840

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 301)

    error	shift, and go to state 282
    OPEN_BPAR	shift, and go to state 283

    statement_bpar	go to state 875



state 841

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR ari_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 842

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 134)

    OPEN_PAR	shift, and go to state 876



state 843

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 877



state 844

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 878



state 845

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CHARDECLARATION	shift, and go to state 879



state 846

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 880
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 847

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 881



state 848

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    MUL 	shift, and go to state 882



state 849

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CHARDECLARATION	shift, and go to state 883



state 850

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 884
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 851

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 885
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 852

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTDECLARATION	shift, and go to state 886
    CHARDECLARATION	shift, and go to state 887
    UNSIGNED	shift, and go to state 888



state 853

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 889



state 854

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 855

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 890



state 856

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 857

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 855



state 858

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 198)

    COMMA	shift, and go to state 350
    CON 	shift, and go to state 459

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 891



state 859

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 350

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 892



state 860

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 893
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 861

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 894
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 862

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 895
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 863

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 896



state 864

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 897



state 865

    case_par  ->  CASE simple_ari_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 310)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 898
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 866

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 311)

    CLOSE_PAR	shift, and go to state 899
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 867

    option_function_parameter_list  ->  OPEN_PAR MUL ID CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 267)

    CLOSE_PAR	shift, and go to state 900



state 868

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 263)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 901



state 869

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 870

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 871

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 902
    CHARDECLARATION	shift, and go to state 903
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 210
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 904
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 872

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 905
    CHARDECLARATION	shift, and go to state 906
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 210
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 907
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 873

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 206
    CHARDECLARATION	shift, and go to state 207
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 209
    OPEN_PAR	shift, and go to state 908
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 211
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 874

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 853

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 875

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 301)

    $default	reduce using rule 301 (extend_for_statement)



state 876

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 134)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 909



state 877

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 910



state 878

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 911



state 879

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 912



state 880

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 913



state 881

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 914



state 882

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 915



state 883

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 916



state 884

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 117)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 917



state 885

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 918



state 886

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 919



state 887

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 920



state 888

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CHARDECLARATION	shift, and go to state 921



state 889

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 922
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 890

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 425
    UNSIGNED	shift, and go to state 325
    ID  	shift, and go to state 426
    STRUCT_TYPE	shift, and go to state 427

    $default	reduce using rule 268 (option_function_parameter_list)

    type_define	go to state 326
    sign_type_define	go to state 328
    all_type_define	go to state 428
    option_function_parameter_list	go to state 923



state 891

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 892

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 893

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 924



state 894

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 925



state 895

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 926



state 896

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 927
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 897

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 928
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 898

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE simple_ari_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 310)

    CLOSE_PAR	shift, and go to state 929
    CHOP	shift, and go to state 184
    OR  	shift, and go to state 185
    PARALLEL	shift, and go to state 186
    AND 	shift, and go to state 187



state 899

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 311)

    $default	reduce using rule 311 (case_par)



state 900

    option_function_parameter_list  ->  OPEN_PAR MUL ID CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 267)

    COMMA	shift, and go to state 262

    $default	reduce using rule 270 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 930



state 901

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 263)

    $default	reduce using rule 263 (option_function_parameter_list)



state 902

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 931



state 903

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 932



state 904

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 547
    CHARDECLARATION	shift, and go to state 933



state 905

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 934



state 906

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 935



state 907

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 547
    CHARDECLARATION	shift, and go to state 936



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    simple_ari_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 197)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 284)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 342)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 346)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 205
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    INTDECLARATION	shift, and go to state 937
    CHARDECLARATION	shift, and go to state 938
    VOIDDECLARATION	shift, and go to state 208
    FLOATDECLARATION	shift, and go to state 390
    OPEN_PAR	shift, and go to state 210
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 939
    SIGNED	shift, and go to state 212
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    STRUCT_TYPE	shift, and go to state 213
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 214
    array_cast_exp	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 217
    simple_ari_exp	go to state 104
    address_exp	go to state 218
    type_cast	go to state 106
    identifier	go to state 219
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 220



state 909

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 134)

    CLOSE_PAR	shift, and go to state 940



state 910

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 941



state 911

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 942



state 912

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 943



state 913

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 944



state 914

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 945



state 915

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    INTLITERAL	shift, and go to state 946



state 916

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 947



state 917

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 117)

    CLOSE_MPAR	shift, and go to state 948



state 918

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 949



state 919

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 950



state 920

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 951



state 921

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 952



state 922

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 953



state 923

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 954



state 924

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 955



state 925

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 956



state 926

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 957



state 927

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 958



state 928

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 959



state 929

    case_par  ->  CASE simple_ari_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 310)

    CASE	shift, and go to state 676
    BREAK	shift, and go to state 960
    DEFAULT	shift, and go to state 677

    $default	reduce using rule 314 (init_case_par)

    case_par	go to state 961
    init_case_par	go to state 962



state 930

    option_function_parameter_list  ->  OPEN_PAR MUL ID CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 931

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 963
    MUL 	shift, and go to state 535



state 932

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 964
    MUL 	shift, and go to state 538



state 933

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 551
    MUL 	shift, and go to state 965



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 966
    MUL 	shift, and go to state 535



state 935

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 967
    MUL 	shift, and go to state 538



state 936

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 551
    MUL 	shift, and go to state 968



state 937

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 381
    MUL 	shift, and go to state 969



state 938

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 383
    MUL 	shift, and go to state 970



state 939

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 547
    CHARDECLARATION	shift, and go to state 971



state 940

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 134)

    OPEN_PAR	shift, and go to state 972
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 973

    function	go to state 974
    array	go to state 975



state 941

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 976



state 942

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 977



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 978



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 945

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 979



state 946

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 980



state 947

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 981



state 948

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 117)

    $default	reduce using rule 117 (leftaddrshift)



state 949

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 982



state 951

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 983



state 952

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 984



state 953

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 985



state 954

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 87)

    ASS_P	shift, and go to state 986

    $default	reduce using rule 86 (declaration)



state 955

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array_cast_exp)



state 956

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array_cast_exp)



state 957

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array_cast_exp)



state 958

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 987



state 959

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 988



state 960

    init_case_par  ->  BREAK . case_par   (rule 312)

    CASE	shift, and go to state 676
    DEFAULT	shift, and go to state 677

    case_par	go to state 989



state 961

    init_case_par  ->  case_par .   (rule 313)

    $default	reduce using rule 313 (init_case_par)



state 962

    case_par  ->  CASE simple_ari_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 310)

    $default	reduce using rule 310 (case_par)



state 963

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 990
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 653
    identifier	go to state 757
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 964

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 991
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 655
    identifier	go to state 758
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 965

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 992
    MUL 	shift, and go to state 671



state 966

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 993
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 653
    identifier	go to state 757
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 967

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 994
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 655
    identifier	go to state 758
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 968

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 995
    MUL 	shift, and go to state 671



state 969

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 996
    MUL 	shift, and go to state 535



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 997
    MUL 	shift, and go to state 538



state 971

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 551
    MUL 	shift, and go to state 998



state 972

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 972
    ID  	shift, and go to state 999

    array	go to state 512



state 973

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_PAR	shift, and go to state 178
    OPEN_MPAR	shift, and go to state 179



state 974

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 134)

    $default	reduce using rule 134 (ass_right)



state 975

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 194



state 976

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1000



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1001



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1002



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1003



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1004



state 981

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1005



state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1006



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1007



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1008



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)



state 986

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 601
    OPEN_BPAR	shift, and go to state 287
    OPEN_MPAR	shift, and go to state 288

    array_exp	go to state 1009
    option_list_value	go to state 294
    option_struct_list_value	go to state 295



state 987

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array_cast_exp)



state 988

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array_cast_exp)



state 989

    init_case_par  ->  BREAK case_par .   (rule 312)

    $default	reduce using rule 312 (init_case_par)



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 976

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 991

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 977

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1010
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 764
    identifier	go to state 820
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 993

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 979

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 980

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 995

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1011
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 764
    identifier	go to state 820
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1012
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 653
    identifier	go to state 757
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 997

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1013
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 655
    identifier	go to state 758
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1014
    MUL 	shift, and go to state 671



state 999

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_MPAR	shift, and go to state 179



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1015



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1016



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1017



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1018



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 1019



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1020



state 1006

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1021



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1022



state 1008

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1023



state 1009

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 87)
    array_exp  ->  array_exp . CON array_exp   (rule 198)

    CON 	shift, and go to state 459

    $default	reduce using rule 87 (declaration)



state 1010

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 1002

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 1011

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 1005

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 1012

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 1006

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 1013

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 1007

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 1014

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 1024
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    type_cast_alg_exp	go to state 652
    simple_ari_exp	go to state 533
    address_exp	go to state 105
    type_cast	go to state 106
    casted_element	go to state 764
    identifier	go to state 820
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1015

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1025
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1016

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1026
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1027



state 1018

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1028
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1019

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1029
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1020

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1030



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1031



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1032



state 1023

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1033



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 286)

    CLOSE_PAR	shift, and go to state 1023

    CLOSE_PAR	[reduce using rule 286 (intliteral)]
    $default	reduce using rule 286 (intliteral)



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1034



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1035



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1036
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1037



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1038



state 1030

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1039
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1031

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1040
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1041
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1042



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1043



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1044



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1045



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1046



state 1038

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1047



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1048



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1049



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1050



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    MY_TRUE	shift, and go to state 88
    MY_FALSE	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 95
    INTLITERAL	shift, and go to state 96
    FLOATLITERAL	shift, and go to state 97
    CHARLITERAL	shift, and go to state 98

    function	go to state 99
    array	go to state 100
    array_cast_exp	go to state 101
    point_exp	go to state 102
    ari_exp	go to state 1051
    simple_ari_exp	go to state 104
    address_exp	go to state 105
    type_cast	go to state 106
    identifier	go to state 107
    strliteral	go to state 108
    intliteral	go to state 109
    charliteral	go to state 110
    floatliteral	go to state 111
    struct_member_exp	go to state 112



state 1043

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1052



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1048

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1053



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1054



state 1050

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1055



state 1051

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ADD ari_exp   (rule 157)
    ari_exp  ->  ari_exp . SUB ari_exp   (rule 158)
    ari_exp  ->  ari_exp . MUL ari_exp   (rule 159)
    ari_exp  ->  ari_exp . DIV ari_exp   (rule 160)
    ari_exp  ->  ari_exp . MOD ari_exp   (rule 161)
    ari_exp  ->  ari_exp . LST ari_exp   (rule 162)
    ari_exp  ->  ari_exp . RST ari_exp   (rule 163)
    ari_exp  ->  ari_exp . ADDRESS ari_exp   (rule 164)
    ari_exp  ->  ari_exp . INTER_OR ari_exp   (rule 165)
    ari_exp  ->  ari_exp . CON ari_exp   (rule 166)
    ari_exp  ->  ari_exp . GT ari_exp   (rule 168)
    ari_exp  ->  ari_exp . GE ari_exp   (rule 169)
    ari_exp  ->  ari_exp . LE ari_exp   (rule 170)
    ari_exp  ->  ari_exp . NE ari_exp   (rule 171)
    ari_exp  ->  ari_exp . LT ari_exp   (rule 172)
    ari_exp  ->  ari_exp . EQ ari_exp   (rule 173)
    ari_exp  ->  ari_exp . BOOL_AND ari_exp   (rule 174)
    ari_exp  ->  ari_exp . BOOL_OR ari_exp   (rule 175)

    COMMA	shift, and go to state 503
    INTER_OR	shift, and go to state 230
    BOOL_OR	shift, and go to state 231
    CON 	shift, and go to state 232
    ADDRESS	shift, and go to state 233
    BOOL_AND	shift, and go to state 234
    NE  	shift, and go to state 235
    EQ  	shift, and go to state 236
    GE  	shift, and go to state 237
    LE  	shift, and go to state 238
    GT  	shift, and go to state 239
    LT  	shift, and go to state 240
    LST 	shift, and go to state 241
    RST 	shift, and go to state 242
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 245
    DIV 	shift, and go to state 246
    MOD 	shift, and go to state 247

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1056



state 1052

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1056

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1057



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1058

    $   	go to state 1059



state 1059

    $   	go to state 1060



state 1060

    $default	accept
