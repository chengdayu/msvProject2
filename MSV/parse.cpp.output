Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#107   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#109   inner_option_array_declaration :	;
#110   inner_option_array_declaration :	 COMMA error;


Conflict in state 85 between rule 13 and token CHOP resolved as reduce.
Conflict in state 85 between rule 13 and token IFF resolved as reduce.
Conflict in state 85 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 13 and token OR resolved as reduce.
Conflict in state 85 between rule 13 and token AND resolved as reduce.
Conflict in state 85 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 86 between rule 22 and token CHOP resolved as reduce.
Conflict in state 86 between rule 22 and token IFF resolved as reduce.
Conflict in state 86 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 22 and token OR resolved as reduce.
Conflict in state 86 between rule 22 and token AND resolved as reduce.
Conflict in state 86 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 21 and token CHOP resolved as reduce.
Conflict in state 109 between rule 21 and token IFF resolved as reduce.
Conflict in state 109 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 21 and token OR resolved as reduce.
Conflict in state 109 between rule 21 and token AND resolved as reduce.
Conflict in state 109 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 10 and token CHOP resolved as reduce.
Conflict in state 110 between rule 10 and token IFF resolved as reduce.
Conflict in state 110 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 10 and token OR resolved as reduce.
Conflict in state 110 between rule 10 and token AND resolved as reduce.
Conflict in state 110 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 9 and token CHOP resolved as reduce.
Conflict in state 111 between rule 9 and token IFF resolved as reduce.
Conflict in state 111 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 9 and token OR resolved as reduce.
Conflict in state 111 between rule 9 and token AND resolved as reduce.
Conflict in state 111 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 20 and token CHOP resolved as reduce.
Conflict in state 112 between rule 20 and token IFF resolved as reduce.
Conflict in state 112 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 20 and token OR resolved as reduce.
Conflict in state 112 between rule 20 and token AND resolved as reduce.
Conflict in state 112 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 12 and token CHOP resolved as reduce.
Conflict in state 113 between rule 12 and token IFF resolved as reduce.
Conflict in state 113 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 12 and token OR resolved as reduce.
Conflict in state 113 between rule 12 and token AND resolved as reduce.
Conflict in state 113 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 11 and token CHOP resolved as reduce.
Conflict in state 114 between rule 11 and token IFF resolved as reduce.
Conflict in state 114 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 11 and token OR resolved as reduce.
Conflict in state 114 between rule 11 and token AND resolved as reduce.
Conflict in state 114 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 232 between rule 208 and token IMPLY resolved as reduce.
Conflict in state 235 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 258 between rule 8 and token CHOP resolved as reduce.
Conflict in state 258 between rule 8 and token IFF resolved as shift.
Conflict in state 258 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 258 between rule 8 and token OR resolved as shift.
Conflict in state 258 between rule 8 and token AND resolved as shift.
Conflict in state 258 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 6 and token CHOP resolved as reduce.
Conflict in state 259 between rule 6 and token IFF resolved as reduce.
Conflict in state 259 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 6 and token OR resolved as shift.
Conflict in state 259 between rule 6 and token AND resolved as shift.
Conflict in state 259 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 7 and token CHOP resolved as reduce.
Conflict in state 260 between rule 7 and token IFF resolved as reduce.
Conflict in state 260 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 7 and token OR resolved as shift.
Conflict in state 260 between rule 7 and token AND resolved as shift.
Conflict in state 260 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 261 between rule 5 and token CHOP resolved as reduce.
Conflict in state 261 between rule 5 and token IFF resolved as reduce.
Conflict in state 261 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 261 between rule 5 and token OR resolved as reduce.
Conflict in state 261 between rule 5 and token AND resolved as shift.
Conflict in state 261 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 262 between rule 4 and token CHOP resolved as reduce.
Conflict in state 262 between rule 4 and token IFF resolved as reduce.
Conflict in state 262 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 262 between rule 4 and token OR resolved as reduce.
Conflict in state 262 between rule 4 and token AND resolved as reduce.
Conflict in state 262 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 269 between rule 237 and token OR resolved as reduce.
Conflict in state 269 between rule 237 and token AND resolved as reduce.
Conflict in state 328 between rule 332 and token OR resolved as reduce.
Conflict in state 328 between rule 332 and token AND resolved as reduce.
Conflict in state 379 between rule 32 and token CHOP resolved as reduce.
Conflict in state 379 between rule 32 and token OR resolved as shift.
Conflict in state 379 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 379 between rule 32 and token AND resolved as shift.
Conflict in state 380 between rule 31 and token CHOP resolved as reduce.
Conflict in state 380 between rule 31 and token OR resolved as reduce.
Conflict in state 380 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 31 and token AND resolved as shift.
Conflict in state 381 between rule 55 and token CHOP resolved as reduce.
Conflict in state 381 between rule 55 and token OR resolved as reduce.
Conflict in state 381 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 381 between rule 55 and token AND resolved as shift.
Conflict in state 382 between rule 30 and token CHOP resolved as reduce.
Conflict in state 382 between rule 30 and token OR resolved as reduce.
Conflict in state 382 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 382 between rule 30 and token AND resolved as reduce.
Conflict in state 447 between rule 239 and token OR resolved as reduce.
Conflict in state 447 between rule 239 and token AND resolved as shift.
Conflict in state 448 between rule 238 and token OR resolved as reduce.
Conflict in state 448 between rule 238 and token AND resolved as reduce.
Conflict in state 509 between rule 334 and token OR resolved as reduce.
Conflict in state 509 between rule 334 and token AND resolved as shift.
Conflict in state 510 between rule 333 and token OR resolved as reduce.
Conflict in state 510 between rule 333 and token AND resolved as reduce.
Conflict in state 658 between rule 192 and token CON resolved as reduce.
State 97 contains 2 shift/reduce conflicts.
State 98 contains 2 shift/reduce conflicts.
State 100 contains 14 shift/reduce conflicts.
State 104 contains 2 shift/reduce conflicts.
State 124 contains 2 shift/reduce conflicts.
State 156 contains 3 reduce/reduce conflicts.
State 158 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict.
State 162 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 164 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 165 contains 1 shift/reduce conflict.
State 193 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 229 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 232 contains 1 shift/reduce conflict.
State 235 contains 1 shift/reduce conflict.
State 267 contains 1 shift/reduce conflict.
State 270 contains 2 shift/reduce conflicts.
State 271 contains 2 shift/reduce conflicts.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 292 contains 1 shift/reduce conflict.
State 309 contains 1 shift/reduce conflict.
State 318 contains 1 shift/reduce conflict.
State 319 contains 1 shift/reduce conflict.
State 320 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 354 contains 1 shift/reduce conflict.
State 355 contains 1 shift/reduce conflict.
State 357 contains 1 shift/reduce conflict.
State 358 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 363 contains 1 shift/reduce conflict.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 402 contains 2 shift/reduce conflicts.
State 425 contains 1 shift/reduce conflict.
State 432 contains 8 shift/reduce conflicts.
State 434 contains 2 shift/reduce conflicts.
State 477 contains 1 shift/reduce conflict.
State 478 contains 1 shift/reduce conflict.
State 479 contains 1 shift/reduce conflict.
State 496 contains 1 shift/reduce conflict.
State 497 contains 1 shift/reduce conflict.
State 501 contains 1 shift/reduce conflict.
State 523 contains 1 shift/reduce conflict.
State 524 contains 1 shift/reduce conflict.
State 525 contains 1 shift/reduce conflict.
State 529 contains 1 shift/reduce conflict.
State 551 contains 1 shift/reduce conflict.
State 574 contains 3 shift/reduce conflicts.
State 577 contains 10 shift/reduce conflicts.
State 669 contains 2 shift/reduce conflicts.
State 670 contains 2 shift/reduce conflicts.
State 683 contains 1 shift/reduce conflict.
State 684 contains 1 shift/reduce conflict.
State 700 contains 1 shift/reduce conflict.
State 701 contains 1 shift/reduce conflict.
State 707 contains 2 shift/reduce conflicts.
State 708 contains 2 shift/reduce conflicts.
State 710 contains 2 shift/reduce conflicts.
State 711 contains 2 shift/reduce conflicts.
State 801 contains 1 shift/reduce conflict.
State 802 contains 1 shift/reduce conflict.
State 804 contains 1 shift/reduce conflict.
State 805 contains 1 shift/reduce conflict.
State 806 contains 1 shift/reduce conflict.
State 807 contains 1 shift/reduce conflict.
State 820 contains 2 shift/reduce conflicts.
State 829 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 835 contains 1 shift/reduce conflict.
State 842 contains 2 shift/reduce conflicts.
State 845 contains 8 shift/reduce conflicts.
State 905 contains 1 shift/reduce conflict.
State 907 contains 1 shift/reduce conflict.
State 908 contains 1 shift/reduce conflict.
State 910 contains 1 shift/reduce conflict.
State 983 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 984 contains 1 shift/reduce conflict.
State 985 contains 1 shift/reduce conflict.
State 1074 contains 1 shift/reduce conflict.
State 1075 contains 1 shift/reduce conflict.
State 1079 contains 1 shift/reduce conflict.
State 1080 contains 1 shift/reduce conflict.
State 1111 contains 1 shift/reduce conflict.
State 1114 contains 1 shift/reduce conflict.
State 1116 contains 1 shift/reduce conflict.
State 1117 contains 1 shift/reduce conflict.
State 1142 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 62   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 63   statement -> struct_define_statement
rule 64   statement -> function
rule 65   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 66   statement -> OPEN_PAR statement CLOSE_PAR
rule 67   option_struct_declaration -> sign_declaration
rule 68   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 69   empty_statement -> statement
rule 70   empty_statement ->		/* empty */
rule 71   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 75   struct_identifier -> STRUCT ID
rule 76   struct_identifier -> UNION ID
rule 77   sign_declaration -> SIGNED declaration
rule 78   sign_declaration -> UNSIGNED declaration
rule 79   sign_declaration -> declaration
rule 80   declaration -> type_define option_identifier_array_declaration
rule 81   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 82   declaration -> STRUCT ID option_identifier_array_declaration
rule 83   declaration -> UNION ID option_identifier_array_declaration
rule 84   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 86   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 89   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 90   type_define -> INTDECLARATION
rule 91   type_define -> FLOATDECLARATION
rule 92   type_define -> CHARDECLARATION
rule 93   type_define -> STRDECLARATION
rule 94   type_define -> VOIDDECLARATION
rule 95   type_define -> FILEDECLARATION
rule 96   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 105  inner_option_identifier_array_declaration -> COMMA error
rule 106  inner_option_identifier_array_declaration ->		/* empty */
rule 111  ass_statement -> ass_left assign_operator ass_right
rule 112  ass_left -> identifier
rule 113  ass_left -> struct_member_exp
rule 114  ass_left -> array
rule 115  ass_left -> point_exp
rule 116  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 117  ass_left -> NEXT ass_left
rule 118  ass_left -> leftaddrshift
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  assign_operator -> ASS_P
rule 133  assign_operator -> ASS_N
rule 134  ass_right -> ari_exp
rule 135  ass_right -> array_exp
rule 136  ass_right -> strliteral
rule 137  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 138  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 139  ass_right -> rightaddrshift
rule 140  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 141  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR array CLOSE_PAR
rule 148  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 149  option_ari_exp -> COMMA error
rule 150  option_ari_exp ->		/* empty */
rule 151  point_exp -> MUL identifier
rule 152  point_exp -> MUL point_exp
rule 153  point_exp -> MUL array
rule 154  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 156  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 157  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 158  ari_exp -> simple_ari_exp
rule 159  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 160  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 161  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 162  type_cast_alg_exp -> simple_ari_exp
rule 163  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 164  option_exp_else_statement -> ELSE ari_exp
rule 165  option_exp_else_statement ->		/* empty */
rule 166  simple_ari_exp -> member_in_exp
rule 167  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 168  member_in_exp -> intliteral
rule 169  member_in_exp -> SUB member_in_exp
rule 170  member_in_exp -> BNE member_in_exp
rule 171  member_in_exp -> POINTERNULL
rule 172  member_in_exp -> floatliteral
rule 173  member_in_exp -> identifier
rule 174  member_in_exp -> array
rule 175  member_in_exp -> point_exp
rule 176  member_in_exp -> function
rule 177  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 178  member_in_exp -> charliteral
rule 179  member_in_exp -> address_exp
rule 180  member_in_exp -> type_cast
rule 181  member_in_exp -> struct_member_exp
rule 182  bi_operator -> MUL
rule 183  bi_operator -> DIV
rule 184  bi_operator -> MOD
rule 185  bi_operator -> LST
rule 186  bi_operator -> RST
rule 187  bi_operator -> ADDRESS
rule 188  bi_operator -> INTER_OR
rule 189  bi_operator -> CON
rule 190  ari_operator -> ADD
rule 191  ari_operator -> SUB
rule 192  array_exp -> array_exp CON array_exp
rule 193  array_exp -> option_list_value
rule 194  array_exp -> option_struct_list_value
rule 195  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 196  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 198  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 199  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 201  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 202  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 203  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 204  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 205  inner_option_list_value ->		/* empty */
rule 206  inner_option_list_value -> COMMA error
rule 207  address_exp -> ADDRESS identifier
rule 208  address_exp -> ADDRESS array
rule 209  address_exp -> ADDRESS struct_member_exp
rule 210  address_exp -> ADDRESS address_exp
rule 211  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 212  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 235  casted_element -> type_cast_alg_exp
rule 236  bool_exp -> prime_bool_exp
rule 237  bool_exp -> NEGATION bool_exp
rule 238  bool_exp -> bool_exp AND bool_exp
rule 239  bool_exp -> bool_exp OR bool_exp
rule 240  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 241  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 242  prime_bool_exp -> MY_TRUE
rule 243  prime_bool_exp -> MY_FALSE
rule 244  prime_bool_exp -> ari_exp
rule 245  prime_bool_exp -> ari_exp EQ strliteral
rule 246  prime_bool_exp -> ari_exp NE strliteral
rule 247  prime_bool_exp -> strliteral EQ ari_exp
rule 248  prime_bool_exp -> strliteral NE ari_exp
rule 249  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 250  prime_bool_exp -> ari_exp NE POINTERNULL
rule 251  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 252  prime_bool_exp -> POINTERNULL NE ari_exp
rule 253  prime_bool_exp -> ari_exp EQ charliteral
rule 254  prime_bool_exp -> ari_exp NE charliteral
rule 255  relation_operator -> GE
rule 256  relation_operator -> LE
rule 257  relation_operator -> NE
rule 258  relation_operator -> GT
rule 259  relation_operator -> LT
rule 260  relation_operator -> EQ
rule 261  sign_type_define -> UNSIGNED INTDECLARATION
rule 262  sign_type_define -> UNSIGNED CHARDECLARATION
rule 263  all_type_define -> sign_type_define
rule 264  all_type_define -> type_define
rule 265  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 271  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 289  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 290  option_function_parameter_list ->		/* empty */
rule 291  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 301  inner_option_define_identifier ->		/* empty */
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 306  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 307  inner_option_define_identifier -> COMMA error
rule 308  option_function_identifier -> ass_right inner_option_function_identifier
rule 309  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 310  option_function_identifier ->		/* empty */
rule 311  option_function_identifier -> ADDRESS error
rule 312  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 313  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 314  inner_option_function_identifier ->		/* empty */
rule 315  inner_option_function_identifier -> COMMA error
rule 316  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 317  statement_bpar -> error CLOSE_BPAR
rule 318  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 319  bool_par -> error CLOSE_PAR
rule 320  identifier -> ID
rule 321  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 322  strliteral -> STRLITERAL
rule 323  intliteral -> INTLITERAL
rule 324  charliteral -> CHARLITERAL
rule 325  floatliteral -> FLOATLITERAL
rule 326  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 327  option_frame_identifier ->		/* empty */
rule 328  option_frame_identifier -> COMMA error
rule 329  option_projection ->		/* empty */
rule 330  option_projection -> COMMA statement option_projection
rule 331  imply_pre -> prime_bool_exp
rule 332  imply_pre -> NEGATION imply_pre
rule 333  imply_pre -> imply_pre AND imply_pre
rule 334  imply_pre -> imply_pre OR imply_pre
rule 335  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 336  while_statement -> WHILE bool_par statement_bpar
rule 337  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 338  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 339  for_sta_init -> ass_statement
rule 340  for_sta_init -> declaration
rule 341  for_sta_init ->		/* empty */
rule 342  for_sta_condition -> bool_exp
rule 343  for_sta_condition ->		/* empty */
rule 344  for_sta_control -> ass_statement
rule 345  for_sta_control ->		/* empty */
rule 346  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 347  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 348  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 349  init_case_par -> BREAK case_par
rule 350  init_case_par -> case_par
rule 351  init_case_par ->		/* empty */
rule 352  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 353  option_else_statement -> ELSE statement_bpar
rule 354  option_else_statement ->		/* empty */
rule 355  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 356  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 357  option_output ->		/* empty */
rule 358  option_output -> COMMA ass_right option_output
rule 359  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 361  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 362  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 363  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 364  option_input ->		/* empty */
rule 365  option_input -> COMMA identifier option_input
rule 366  option_input -> COMMA array option_input
rule 367  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 368  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 369  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 370  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 371  struct_member_exp -> array DOT array option_struct_member_exp
rule 372  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 373  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 375  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 376  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 377  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 378  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 379  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 380  struct_member_exp -> identifier DOT function
rule 381  struct_member_exp -> identifier IMPLY function
rule 382  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 383  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 384  option_struct_member_exp ->		/* empty */
rule 385  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 386  option_struct_member_exp -> DOT array option_struct_member_exp
rule 387  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 388  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 389  option_struct_member_exp -> DOT function
rule 390  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 105 110 149 206 307 311 315 317 319 328
SWITCH (258) 346
CASE (259) 347
BREAK (260) 349
DEFAULT (261) 348
RETURN (262) 36
IF (263) 161 352
ELSE (264) 164 353
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 171 249 250 251 252
ARRAY (271) 99 100 270 274 281 282 285 296 297 298 299 304
STRUCT (272) 75 82 84 231 233
DOT (273) 367 368 369 370 371 372 380 385 386 389
UNION (274) 76 83 85
FILEDECLARATION (275) 95
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 242
MY_FALSE (279) 16 243
EXIST (280) 65
FRAME (281) 57
FOR (282) 337 338
WHILE (283) 336
DO (284) 337
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 355 356
SKIP (290) 14 46
THEN (291) 161 352
COMMA (292) 28 104 105 108 110 148 149 202 203 204 206 284 291 292
    293 294 295 296 297 298 299 300 302 303 304 305 306 307 312 313
    315 326 328 330 338 358 365 366
COLON (293) 25 65 347 348
INTDECLARATION (294) 90 121 125 128 129 130 131 142 143 212 215 217
    219 220 225 226 261
STRDECLARATION (295) 93
POINTERDECLARATION (296)
CHARDECLARATION (297) 92 119 120 123 124 125 126 127 128 129 130 145
    146 214 216 218 222 223 228 229 262
VOIDDECLARATION (298) 94 224 230
FLOATDECLARATION (299) 91 122 144 213 221 227
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 61 62 66 71 72 73 86
    87 88 89 116 119 120 121 122 123 124 125 126 127 128 129 130 131
    137 138 140 142 143 144 145 146 147 154 155 156 157 177 195 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 240 289 300 309 313 318 321 335 338
    346 347 348 355 356 359 360 361 362 363 375 379 383
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 61 62 66 71 72 73
    86 87 88 89 116 119 120 121 122 123 124 125 126 127 128 129 130
    131 137 138 140 142 143 144 145 146 147 154 155 156 157 177 195
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 234 240 289 300 309 313 318 319 321
    335 338 346 347 348 355 356 359 360 361 362 363 375 379 383
TIMES (303) 337
OPEN_BPAR (304) 23 45 58 59 60 61 62 65 74 199 200 201 316 346
CLOSE_BPAR (305) 23 45 58 59 60 61 62 65 74 199 200 201 316 317 346
OPEN_MPAR (306) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 284 285 302 303 304
CLOSE_MPAR (307) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 284 285 302 303 304
FUNCTION (308)
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 188
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316) 62
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 72
UNSIGNED (328) 78 120 124 126 127 128 130 143 146 217 218 220 223 226
    229 261 262
SIGNED (329) 77 215 216
CHOP (330) 8 32
IMPLY (331) 56 373 374 375 376 377 378 379 381 382 387 388 390
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 239 334
PARALLEL (335) 55
AND (336) 4 30 57 68 238 333
ASS_P (337) 60 62 89 98 99 100 101 102 132
ASS_N (338) 133
CON (339) 189 192
ADDRESS (340) 187 207 208 209 210 311
NE (341) 246 248 250 252 254 257
EQ (342) 245 247 249 251 253 260
GE (343) 255
LE (344) 256
GT (345) 258
LT (346) 259
LST (347) 185
RST (348) 186
ADD (349) 190
SUB (350) 169 191
MUL (351) 86 87 88 89 103 119 120 121 122 123 124 125 126 127 128 129
    130 131 140 142 143 144 145 146 151 152 153 155 156 182 219 220
    221 222 223 224 225 226 227 228 229 230 231 232 233 234 268 269
    272 273 276 277 279 280 282 286 287 288 289 295 299 300 305 306
DIV (352) 183
MOD (353) 184
BNE (354) 170
CHOPSTAR (355) 26
NEXT (356) 13 41 117
NEGATION (357) 22 237 332
LENGTH (358) 17 49
REQUEST (359) 359 360 361 362 363
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 61 62 71 72 75 76 82 83 88 89 97 99 100 101 102
    107 108 141 142 143 144 145 146 271 272 273 274 278 279 280 293
    296 309 313 320
STRLITERAL (368) 322
STRUCT_TYPE (369) 81 84 85 231 232 233 234 267 268 269 270 275 276
    277 294 295 297
INTLITERAL (370) 119 120 121 122 123 124 125 126 127 128 129 130 131
    323
FLOATLITERAL (371) 325
CHARLITERAL (372) 324

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 61 65 66 69
    316 330 347 348
option_struct_declaration (123)
    on left: 67 68, on right: 68 74
empty_statement (124)
    on left: 69 70, on right: 60 62
function (125)
    on left: 71 72 73, on right: 64 137 176 380 381 389 390
struct_define_statement (126)
    on left: 74, on right: 63
struct_identifier (127)
    on left: 75 76, on right: 74
sign_declaration (128)
    on left: 77 78 79, on right: 34 67 68
declaration (129)
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 77 78 79 340
type_define (130)
    on left: 90 91 92 93 94 95, on right: 61 80 137 264
option_identifier_array_declaration (131)
    on left: 96 97 98 99 100 101 102 103, on right: 80 81 82 83 84
    85 103 104
inner_option_identifier_array_declaration (132)
    on left: 104 105 106, on right: 96 97 98 99 100 101 102
ass_statement (133)
    on left: 111, on right: 33 339 344
ass_left (134)
    on left: 112 113 114 115 116 117 118, on right: 111 116 117
leftaddrshift (135)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131,
    on right: 118 140
assign_operator (136)
    on left: 132 133, on right: 111
ass_right (137)
    on left: 134 135 136 137 138 139, on right: 98 111 138 308 312
    355 356 358
rightaddrshift (138)
    on left: 140, on right: 139
array (139)
    on left: 141 142 143 144 145 146 147, on right: 73 114 147 153
    174 208 361 362 366 368 370 371 372 374 377 378 379 382 386 388
option_ari_exp (140)
    on left: 148 149 150, on right: 88 89 97 101 102 107 108 119 120
    121 122 123 124 125 126 127 128 129 130 131 141 142 143 144 145
    146 148 154
point_exp (141)
    on left: 151 152 153 154 155 156 157, on right: 115 152 154 157
    175 369 372 376 382
ari_exp (142)
    on left: 158 159 160 161, on right: 17 49 88 89 97 101 102 107
    108 119 120 121 122 123 124 125 126 127 128 129 130 131 134 141
    142 143 144 145 146 148 154 155 156 159 160 161 164 177 196 199
    202 241 244 245 246 247 248 249 250 251 252 253 254 283 284 285
    302 303 304 337
type_cast_alg_exp (143)
    on left: 162 163, on right: 212 213 214 215 216 217 218 235
option_exp_else_statement (144)
    on left: 164 165, on right: 161
simple_ari_exp (145)
    on left: 166 167, on right: 158 159 160 162 163 167
member_in_exp (146)
    on left: 168 169 170 171 172 173 174 175 176 177 178 179 180 181
   , on right: 166 167 169 170 346 347
bi_operator (147)
    on left: 182 183 184 185 186 187 188 189, on right: 167
ari_operator (148)
    on left: 190 191, on right: 160 163
array_exp (149)
    on left: 192 193 194 195, on right: 89 99 101 135 192 195 198 201
    204
option_list_value (150)
    on left: 196 197 198, on right: 193
option_struct_list_value (151)
    on left: 199 200 201, on right: 194
inner_option_list_value (152)
    on left: 202 203 204 205 206, on right: 196 197 198 199 200 201
    202 203 204
address_exp (153)
    on left: 207 208 209 210 211, on right: 179 210 211 375 379
type_cast (154)
    on left: 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 233 234, on right: 180
casted_element (155)
    on left: 235, on right: 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234
bool_exp (156)
    on left: 236 237 238 239 240, on right: 44 45 161 237 238 239 240
    318 342 352
prime_bool_exp (157)
    on left: 241 242 243 244 245 246 247 248 249 250 251 252 253 254
   , on right: 25 236 331
relation_operator (158)
    on left: 255 256 257 258 259 260, on right: 159 241
sign_type_define (159)
    on left: 261 262, on right: 263
all_type_define (160)
    on left: 263 264, on right: 155 265 266 281 282 283 284 285 286
    287 288 291 292 298 299 302 303 304 305 306
option_function_parameter_list (161)
    on left: 265 266 267 268 269 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 287 288 289 290,
    on right: 60 61 62 86 87 88 89 137 289 300
inner_option_define_identifier (162)
    on left: 291 292 293 294 295 296 297 298 299 300 301 302 303 304
    305 306 307, on right: 65 265 266 267 268 269 270 271 272 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 291
    292 293 294 295 296 297 298 299 300 302 303 304 305 306
option_function_identifier (163)
    on left: 308 309 310 311, on right: 71 72 73 309 313
inner_option_function_identifier (164)
    on left: 312 313 314 315, on right: 308 309 312 313
statement_bpar (165)
    on left: 316 317, on right: 58 59 336 337 338 352 353
bool_par (166)
    on left: 318 319, on right: 336
identifier (167)
    on left: 320 321, on right: 57 65 86 87 96 98 112 151 173 207 265
    267 268 269 270 271 272 273 274 281 282 283 284 285 286 288 289
    291 293 294 295 296 297 298 299 300 302 303 304 305 321 326 359
    360 365 367 368 369 370 373 374 375 376 377 380 381 385 387
strliteral (168)
    on left: 322, on right: 100 102 136 137 197 200 203 245 246 247
    248
intliteral (169)
    on left: 323, on right: 168
charliteral (170)
    on left: 324, on right: 178 253 254
floatliteral (171)
    on left: 325, on right: 172
option_frame_identifier (172)
    on left: 326 327 328, on right: 57 326
option_projection (173)
    on left: 329 330, on right: 58 330
imply_pre (174)
    on left: 331 332 333 334 335, on right: 56 332 333 334 335
while_statement (175)
    on left: 336, on right: 38
for_statement (176)
    on left: 337, on right: 39
extend_for_statement (177)
    on left: 338, on right: 40
for_sta_init (178)
    on left: 339 340 341, on right: 338
for_sta_condition (179)
    on left: 342 343, on right: 338
for_sta_control (180)
    on left: 344 345, on right: 338
switch_statement (181)
    on left: 346, on right: 35
case_par (182)
    on left: 347 348, on right: 346 349 350
init_case_par (183)
    on left: 349 350 351, on right: 347
if_statement (184)
    on left: 352, on right: 37
option_else_statement (185)
    on left: 353 354, on right: 352
output_statement (186)
    on left: 355 356, on right: 51
option_output (187)
    on left: 357 358, on right: 356 358
input_statement (188)
    on left: 359 360 361 362 363, on right: 50
option_input (189)
    on left: 364 365 366, on right: 360 362 365 366
struct_member_exp (190)
    on left: 367 368 369 370 371 372 373 374 375 376 377 378 379 380
    381 382 383, on right: 113 181 209 363 383
option_struct_member_exp (191)
    on left: 384 385 386 387 388 389 390, on right: 367 368 369 370
    371 372 373 374 375 376 377 378 379 382 385 386 387 388


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1192
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 82



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 86



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 99
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 115
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    OPEN_PAR	shift, and go to state 122



state 23

    statement  ->  RETURN . ID   (rule 36)

    ID  	shift, and go to state 123



state 24

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 352)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 131
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 134



state 27

    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 136



state 28

    struct_identifier  ->  UNION . ID   (rule 76)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 138



state 29

    type_define  ->  FILEDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 30

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 139



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 142



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 143



state 34

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 337)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 144
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 145
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 35

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 336)

    error	shift, and go to state 146
    OPEN_PAR	shift, and go to state 147

    bool_par	go to state 148



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 38

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 149



state 39

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 355)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 356)

    OPEN_PAR	shift, and go to state 150



state 40

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

    type_define  ->  INTDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 42

    type_define  ->  STRDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 43

    type_define  ->  CHARDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  VOIDDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 45

    type_define  ->  FLOATDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 66)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 160
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 165
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 48

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    ID  	shift, and go to state 166



state 49

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    ID  	shift, and go to state 167



state 50

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 172



state 51

    sign_declaration  ->  SIGNED . declaration   (rule 77)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 173
    type_define	go to state 172



state 52

    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 178



state 53

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 179
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 181
    leftaddrshift	go to state 70
    array	go to state 182
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81



state 54

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 183



state 55

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 362)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 363)

    OPEN_PAR	shift, and go to state 184



state 56

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 185



state 57

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 186



state 58

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 187



state 59

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)



state 60

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 192
    identifier	go to state 193



state 61

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    $default	reduce using rule 1 (program)



state 62

    statement  ->  function .   (rule 64)

    $default	reduce using rule 64 (statement)



state 63

    statement  ->  struct_define_statement .   (rule 63)

    $default	reduce using rule 63 (statement)



state 64

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 198



state 65

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 66

    sign_declaration  ->  declaration .   (rule 79)

    $default	reduce using rule 79 (sign_declaration)



state 67

    statement  ->  type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)
    declaration  ->  type_define . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 199

    option_identifier_array_declaration	go to state 200
    identifier	go to state 193



state 68

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 69

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)

    ASS_P	shift, and go to state 201
    ASS_N	shift, and go to state 202

    assign_operator	go to state 203



state 70

    ass_left  ->  leftaddrshift .   (rule 118)

    $default	reduce using rule 118 (ass_left)



state 71

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 206

    $default	reduce using rule 114 (ass_left)



state 72

    ass_left  ->  point_exp .   (rule 115)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    $default	reduce using rule 115 (ass_left)



state 73

    ass_left  ->  identifier .   (rule 112)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

    $default	reduce using rule 112 (ass_left)



state 74

    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 77

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 78

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 79

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 80

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 81

    ass_left  ->  struct_member_exp .   (rule 113)

    $default	reduce using rule 113 (ass_left)



state 82

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 211



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 212
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 213
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 214



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 86

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 87

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 215
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 88

    member_in_exp  ->  POINTERNULL .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)



state 89

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 90

    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)

    OPEN_PAR	shift, and go to state 231
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 232
    point_exp	go to state 233
    address_exp	go to state 234
    identifier	go to state 235
    struct_member_exp	go to state 236



state 91

    member_in_exp  ->  SUB . member_in_exp   (rule 169)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 237
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 92

    member_in_exp  ->  BNE . member_in_exp   (rule 170)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 238
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 93

    intliteral  ->  INTLITERAL .   (rule 323)

    $default	reduce using rule 323 (intliteral)



state 94

    floatliteral  ->  FLOATLITERAL .   (rule 325)

    $default	reduce using rule 325 (floatliteral)



state 95

    charliteral  ->  CHARLITERAL .   (rule 324)

    $default	reduce using rule 324 (charliteral)



state 96

    member_in_exp  ->  function .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 97

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 206

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 98

    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    DOT 	[reduce using rule 175 (member_in_exp)]
    IMPLY	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 99

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 241



state 100

    ari_exp  ->  simple_ari_exp .   (rule 158)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    NE  	shift, and go to state 245
    EQ  	shift, and go to state 246
    GE  	shift, and go to state 247
    LE  	shift, and go to state 248
    GT  	shift, and go to state 249
    LT  	shift, and go to state 250
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    NE  	[reduce using rule 158 (ari_exp)]
    EQ  	[reduce using rule 158 (ari_exp)]
    GE  	[reduce using rule 158 (ari_exp)]
    LE  	[reduce using rule 158 (ari_exp)]
    GT  	[reduce using rule 158 (ari_exp)]
    LT  	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    bi_operator	go to state 256
    relation_operator	go to state 257



state 101

    simple_ari_exp  ->  member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)



state 102

    member_in_exp  ->  address_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 103

    member_in_exp  ->  type_cast .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 104

    member_in_exp  ->  identifier .   (rule 173)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 105

    member_in_exp  ->  intliteral .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 106

    member_in_exp  ->  charliteral .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 107

    member_in_exp  ->  floatliteral .   (rule 172)

    $default	reduce using rule 172 (member_in_exp)



state 108

    member_in_exp  ->  struct_member_exp .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 115

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 116

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 258



state 117

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 259



state 118

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 260



state 119

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 261



state 120

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 262



state 121

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 122

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 263
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 123

    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 124

    member_in_exp  ->  POINTERNULL .   (rule 171)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 251)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 252)

    NE  	shift, and go to state 264
    EQ  	shift, and go to state 265

    NE  	[reduce using rule 171 (member_in_exp)]
    EQ  	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 125

    prime_bool_exp  ->  MY_TRUE .   (rule 242)

    $default	reduce using rule 242 (prime_bool_exp)



state 126

    prime_bool_exp  ->  MY_FALSE .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)



state 127

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 266
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    bool_exp	go to state 268
    prime_bool_exp	go to state 132
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 128

    bool_exp  ->  NEGATION . bool_exp   (rule 237)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 269
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 129

    strliteral  ->  STRLITERAL .   (rule 322)

    $default	reduce using rule 322 (strliteral)



state 130

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    NE  	shift, and go to state 270
    EQ  	shift, and go to state 271
    GE  	shift, and go to state 247
    LE  	shift, and go to state 248
    GT  	shift, and go to state 249
    LT  	shift, and go to state 250
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 241
    relation_operator	go to state 272



state 131

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 352)

    THEN	shift, and go to state 273
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 132

    bool_exp  ->  prime_bool_exp .   (rule 236)

    $default	reduce using rule 236 (bool_exp)



state 133

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 247)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 248)

    NE  	shift, and go to state 276
    EQ  	shift, and go to state 277



state 134

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 278
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 135

    struct_identifier  ->  STRUCT ID .   (rule 75)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    $default	reduce using rule 75 (struct_identifier)

    option_identifier_array_declaration	go to state 279
    identifier	go to state 193



state 136

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 280
    identifier	go to state 193



state 137

    struct_identifier  ->  UNION ID .   (rule 76)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    $default	reduce using rule 76 (struct_identifier)

    option_identifier_array_declaration	go to state 281
    identifier	go to state 193



state 138

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 282
    identifier	go to state 193



state 139

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 283



state 140

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 284



state 141

    identifier  ->  ID .   (rule 320)

    $default	reduce using rule 320 (identifier)



state 142

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 286



state 143

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 287



state 144

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 288
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 289
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 290
    VOIDDECLARATION	shift, and go to state 291
    FLOATDECLARATION	shift, and go to state 292
    OPEN_PAR	shift, and go to state 293
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 294
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 341 (for_sta_init)

    function	go to state 96
    declaration	go to state 295
    type_define	go to state 172
    ass_statement	go to state 296
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_init	go to state 297
    struct_member_exp	go to state 164



state 145

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 337)

    TIMES	shift, and go to state 298
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 146

    bool_par  ->  error . CLOSE_PAR   (rule 319)

    CLOSE_PAR	shift, and go to state 299



state 147

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 318)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 300
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 148

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 336)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 303



state 149

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 304
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 150

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 355)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 356)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 309
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 151

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 352)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 316
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 152

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 66)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 317
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 318
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 319
    VOIDDECLARATION	shift, and go to state 291
    FLOATDECLARATION	shift, and go to state 320
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 321
    SIGNED	shift, and go to state 322
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 294
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 323
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 153

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 324
    ID  	shift, and go to state 325

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 326



state 154

    imply_pre  ->  NEGATION . imply_pre   (rule 332)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 328
    struct_member_exp	go to state 108



state 155

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 66)

    CLOSE_PAR	shift, and go to state 329
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 156

    statement  ->  function .   (rule 64)
    member_in_exp  ->  function .   (rule 176)

    CLOSE_PAR	reduce using rule 64 (statement)
    CLOSE_PAR	[reduce using rule 176 (member_in_exp)]
    CHOP	reduce using rule 64 (statement)
    OR  	reduce using rule 64 (statement)
    OR  	[reduce using rule 176 (member_in_exp)]
    PARALLEL	reduce using rule 64 (statement)
    AND 	reduce using rule 64 (statement)
    AND 	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 157

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 330
    ASS_P	shift, and go to state 201
    ASS_N	shift, and go to state 202

    assign_operator	go to state 203



state 158

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 114 (ass_left)
    ASS_N	reduce using rule 114 (ass_left)
    $default	reduce using rule 174 (member_in_exp)



state 159

    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    ASS_P	reduce using rule 115 (ass_left)
    ASS_N	reduce using rule 115 (ass_left)
    $default	reduce using rule 175 (member_in_exp)



state 160

    member_in_exp  ->  address_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

    CLOSE_PAR	shift, and go to state 333

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 161

    imply_pre  ->  prime_bool_exp .   (rule 331)

    $default	reduce using rule 331 (imply_pre)



state 162

    ass_left  ->  identifier .   (rule 112)
    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 163

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)

    CLOSE_PAR	shift, and go to state 335
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 164

    ass_left  ->  struct_member_exp .   (rule 113)
    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 181 (member_in_exp)



state 165

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 339
    CLOSE_BPAR	shift, and go to state 340
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    CLOSE_BPAR	[reduce using rule 329 (option_projection)]
    $default	reduce using rule 329 (option_projection)

    option_projection	go to state 341



state 166

    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    OPEN_PAR	shift, and go to state 342



state 167

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 343



state 168

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 344
    STRUCT_TYPE	shift, and go to state 136



state 169

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 345
    STRUCT_TYPE	shift, and go to state 138



state 170

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    MUL 	shift, and go to state 346



state 171

    sign_declaration  ->  UNSIGNED declaration .   (rule 78)

    $default	reduce using rule 78 (sign_declaration)



state 172

    declaration  ->  type_define . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 200
    identifier	go to state 193



state 173

    sign_declaration  ->  SIGNED declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 174

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 347
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 348
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 349
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 350
    all_type_define	go to state 351
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 175

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 320)

    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)



state 176

    point_exp  ->  MUL array .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 177

    point_exp  ->  MUL point_exp .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 178

    point_exp  ->  MUL identifier .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 179

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 352
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 353
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 354
    point_exp	go to state 355
    address_exp	go to state 356
    identifier	go to state 357
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 358



state 180

    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 359
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 181
    leftaddrshift	go to state 70
    array	go to state 182
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81



state 181

    ass_left  ->  NEXT ass_left .   (rule 117)

    $default	reduce using rule 117 (ass_left)



state 182

    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 206

    $default	reduce using rule 114 (ass_left)



state 183

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 360
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 184

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 362)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 363)

    OPEN_PAR	shift, and go to state 361
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 362
    point_exp	go to state 233
    identifier	go to state 363
    struct_member_exp	go to state 364



state 185

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 365
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 186

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 366
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 187

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 367
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 188

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 371
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 189

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 372
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 190

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193



state 191

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    identifier  ->  ID .   (rule 320)

    ARRAY	shift, and go to state 374
    OPEN_MPAR	shift, and go to state 375

    $default	reduce using rule 320 (identifier)



state 192

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 193

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 376
    ASS_P	shift, and go to state 377

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 378



state 194

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 379
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 195

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 380
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 196

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 381
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 197

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 382
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 198

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 74)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 383
    sign_declaration	go to state 384
    declaration	go to state 66
    type_define	go to state 172



state 199

    statement  ->  type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    identifier  ->  ID .   (rule 320)

    ARRAY	shift, and go to state 374
    OPEN_PAR	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 375

    $default	reduce using rule 320 (identifier)



state 200

    declaration  ->  type_define option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 201

    assign_operator  ->  ASS_P .   (rule 132)

    $default	reduce using rule 132 (assign_operator)



state 202

    assign_operator  ->  ASS_N .   (rule 133)

    $default	reduce using rule 133 (assign_operator)



state 203

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 111)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 386
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 204

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 371)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 388
    identifier	go to state 389



state 205

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 390
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 206

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 378)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 391
    identifier	go to state 392



state 207

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 372)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 393
    identifier	go to state 394



state 208

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 382)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 395
    identifier	go to state 396



state 209

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier DOT . function   (rule 380)

    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 397
    array	go to state 398
    identifier	go to state 399



state 210

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier IMPLY . function   (rule 381)

    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 400
    array	go to state 401
    identifier	go to state 402



state 211

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 403
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 212

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 213

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 404



state 214

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 405



state 215

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    THEN	shift, and go to state 406
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 216

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    STRUCT_TYPE	shift, and go to state 407



state 217

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 409



state 218

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411



state 219

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 412



state 220

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 414



state 221

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 222

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420



state 223

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    INTDECLARATION	shift, and go to state 421
    CHARDECLARATION	shift, and go to state 422



state 224

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

    MUL 	shift, and go to state 423



state 225

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 226

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 227

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 424
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 228

    member_in_exp  ->  address_exp .   (rule 179)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

    CLOSE_PAR	shift, and go to state 425

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 229

    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 230

    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



state 231

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    OPEN_PAR	shift, and go to state 426
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 427
    point_exp	go to state 428
    address_exp	go to state 429
    identifier	go to state 430
    struct_member_exp	go to state 431



state 232

    address_exp  ->  ADDRESS array .   (rule 208)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204

    DOT 	[reduce using rule 208 (address_exp)]
    $default	reduce using rule 208 (address_exp)



state 233

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208



state 234

    address_exp  ->  ADDRESS address_exp .   (rule 210)

    $default	reduce using rule 210 (address_exp)



state 235

    address_exp  ->  ADDRESS identifier .   (rule 207)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)



state 236

    address_exp  ->  ADDRESS struct_member_exp .   (rule 209)

    $default	reduce using rule 209 (address_exp)



state 237

    member_in_exp  ->  SUB member_in_exp .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 238

    member_in_exp  ->  BNE member_in_exp .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 239

    ari_operator  ->  ADD .   (rule 190)

    $default	reduce using rule 190 (ari_operator)



state 240

    ari_operator  ->  SUB .   (rule 191)

    $default	reduce using rule 191 (ari_operator)



state 241

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 160)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 432
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 242

    bi_operator  ->  INTER_OR .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 243

    bi_operator  ->  CON .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 244

    bi_operator  ->  ADDRESS .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 245

    relation_operator  ->  NE .   (rule 257)

    $default	reduce using rule 257 (relation_operator)



state 246

    relation_operator  ->  EQ .   (rule 260)

    $default	reduce using rule 260 (relation_operator)



state 247

    relation_operator  ->  GE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



state 248

    relation_operator  ->  LE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



state 249

    relation_operator  ->  GT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 250

    relation_operator  ->  LT .   (rule 259)

    $default	reduce using rule 259 (relation_operator)



state 251

    bi_operator  ->  LST .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 252

    bi_operator  ->  RST .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 253

    bi_operator  ->  MUL .   (rule 182)

    $default	reduce using rule 182 (bi_operator)



state 254

    bi_operator  ->  DIV .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 255

    bi_operator  ->  MOD .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 256

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 433
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 257

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 159)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 434
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 258

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 8 (complexProposition)



state 259

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 6 (complexProposition)



state 260

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 7 (complexProposition)



state 261

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 5 (complexProposition)



state 262

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 4 (complexProposition)



state 263

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    CLOSE_PAR	shift, and go to state 435



state 264

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 252)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 436
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 265

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 251)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 437
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 266

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 266
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    bool_exp	go to state 268
    prime_bool_exp	go to state 132
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 267

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    CLOSE_PAR	shift, and go to state 424
    NE  	shift, and go to state 270
    EQ  	shift, and go to state 271
    GE  	shift, and go to state 247
    LE  	shift, and go to state 248
    GT  	shift, and go to state 249
    LT  	shift, and go to state 250
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    CLOSE_PAR	[reduce using rule 244 (prime_bool_exp)]
    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 241
    relation_operator	go to state 272



state 268

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 240)

    CLOSE_PAR	shift, and go to state 438
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 269

    bool_exp  ->  NEGATION bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 237 (bool_exp)



state 270

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 254)
    relation_operator  ->  NE .   (rule 257)

    POINTERNULL	shift, and go to state 439
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 257 (relation_operator)]
    CHARLITERAL	[reduce using rule 257 (relation_operator)]
    $default	reduce using rule 257 (relation_operator)

    strliteral	go to state 440
    charliteral	go to state 441



state 271

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 253)
    relation_operator  ->  EQ .   (rule 260)

    POINTERNULL	shift, and go to state 442
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 260 (relation_operator)]
    CHARLITERAL	[reduce using rule 260 (relation_operator)]
    $default	reduce using rule 260 (relation_operator)

    strliteral	go to state 443
    charliteral	go to state 444



state 272

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 241)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 445
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 273

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 352)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 446



state 274

    bool_exp  ->  bool_exp OR . bool_exp   (rule 239)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 447
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 275

    bool_exp  ->  bool_exp AND . bool_exp   (rule 238)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 448
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 276

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 248)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 449
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 277

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 247)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 450
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 278

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 451
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 279

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 280

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 281

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 282

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 283

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 456



state 284

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)

    CLOSE_PAR	shift, and go to state 334



state 285

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA . error   (rule 307)

    error	shift, and go to state 457
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 458
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 459
    STRUCT_TYPE	shift, and go to state 460

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 461



state 286

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    COLON	shift, and go to state 462



state 287

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 463

    $default	reduce using rule 327 (option_frame_identifier)

    option_frame_identifier	go to state 464



state 288

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 344
    STRUCT_TYPE	shift, and go to state 465



state 289

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 409

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 290

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 291

    type_define  ->  VOIDDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 412

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 292

    type_define  ->  FLOATDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 414

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 293

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 466
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164



state 294

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 468
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 192
    identifier	go to state 193



state 295

    for_sta_init  ->  declaration .   (rule 340)

    $default	reduce using rule 340 (for_sta_init)



state 296

    for_sta_init  ->  ass_statement .   (rule 339)

    $default	reduce using rule 339 (for_sta_init)



state 297

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    COMMA	shift, and go to state 469



state 298

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 337)

    DO  	shift, and go to state 470



state 299

    bool_par  ->  error CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (bool_par)



state 300

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 318)

    CLOSE_PAR	shift, and go to state 471
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 301

    statement_bpar  ->  error . CLOSE_BPAR   (rule 317)

    CLOSE_BPAR	shift, and go to state 472



state 302

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 316)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 473
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 303

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 336)

    $default	reduce using rule 336 (while_statement)



state 304

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 474
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 305

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 476
    rightaddrshift	go to state 310
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 477
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 478
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    strliteral	go to state 479
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 306

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 200)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 201)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 480
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 481
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 482
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 483
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 307

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 197)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 198)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 480
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 484
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 485
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 486
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 308

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 140)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 487
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 178



state 309

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 355)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 356)

    COMMA	shift, and go to state 488
    CLOSE_PAR	shift, and go to state 489

    CLOSE_PAR	[reduce using rule 357 (option_output)]
    $default	reduce using rule 357 (option_output)

    option_output	go to state 490



state 310

    ass_right  ->  rightaddrshift .   (rule 139)

    $default	reduce using rule 139 (ass_right)



state 311

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 134 (ass_right)

    ari_operator	go to state 241



state 312

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 491

    $default	reduce using rule 135 (ass_right)



state 313

    array_exp  ->  option_list_value .   (rule 193)

    $default	reduce using rule 193 (array_exp)



state 314

    array_exp  ->  option_struct_list_value .   (rule 194)

    $default	reduce using rule 194 (array_exp)



state 315

    ass_right  ->  strliteral .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 316

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 352)

    THEN	shift, and go to state 492
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 317

    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 465



state 318

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 493

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 319

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 494

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 320

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 495

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 321

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 496
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 497
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 172



state 322

    sign_declaration  ->  SIGNED . declaration   (rule 77)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 498
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 499
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 173
    type_define	go to state 172



state 323

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 335)

    CLOSE_PAR	shift, and go to state 500
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 324

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 501



state 325

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 320)

    OPEN_MPAR	shift, and go to state 502

    $default	reduce using rule 320 (identifier)



state 326

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL identifier .   (rule 151)

    CLOSE_PAR	shift, and go to state 503

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



state 327

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 504
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 505
    struct_member_exp	go to state 230



state 328

    imply_pre  ->  NEGATION imply_pre .   (rule 332)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)


    $default	reduce using rule 332 (imply_pre)



state 329

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 66)

    $default	reduce using rule 66 (statement)



state 330

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 331

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 147)

    $default	reduce using rule 147 (array)



state 332

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 157)

    OPEN_MPAR	shift, and go to state 506

    $default	reduce using rule 157 (point_exp)



state 333

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 379)

    IMPLY	shift, and go to state 507



state 334

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 321)

    $default	reduce using rule 321 (identifier)



state 335

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 508



state 336

    imply_pre  ->  imply_pre OR . imply_pre   (rule 334)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 509
    struct_member_exp	go to state 108



state 337

    imply_pre  ->  imply_pre AND . imply_pre   (rule 333)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 510
    struct_member_exp	go to state 108



state 338

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 383)

    $default	reduce using rule 383 (struct_member_exp)



state 339

    option_projection  ->  COMMA . statement option_projection   (rule 330)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 511
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 340

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 512



state 341

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 513



state 342

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 514



state 343

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 515
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 344

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 279
    identifier	go to state 193



state 345

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 281
    identifier	go to state 193



state 346

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 516
    ID  	shift, and go to state 517

    identifier	go to state 518



state 347

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 261)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 262)

    INTDECLARATION	shift, and go to state 519
    CHARDECLARATION	shift, and go to state 520



state 348

    all_type_define  ->  type_define .   (rule 264)

    $default	reduce using rule 264 (all_type_define)



state 349

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 156)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 521
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 350

    all_type_define  ->  sign_type_define .   (rule 263)

    $default	reduce using rule 263 (all_type_define)



state 351

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 155)

    MUL 	shift, and go to state 522



state 352

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 66)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 523
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 524
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 525
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 526
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 353

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 527
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 354

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 355

    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    $default	reduce using rule 115 (ass_left)



state 356

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

    CLOSE_PAR	shift, and go to state 333



state 357

    ass_left  ->  identifier .   (rule 112)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 358

    ass_left  ->  struct_member_exp .   (rule 113)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 359

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    OPEN_PAR	shift, and go to state 528
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 529
    point_exp	go to state 355
    address_exp	go to state 356
    identifier	go to state 357
    struct_member_exp	go to state 358



state 360

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 530
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 361

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    OPEN_PAR	shift, and go to state 426
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 427
    point_exp	go to state 428
    address_exp	go to state 356
    identifier	go to state 430
    struct_member_exp	go to state 431



state 362

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 362)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    COMMA	shift, and go to state 531
    CLOSE_PAR	shift, and go to state 532
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 364 (option_input)]
    $default	reduce using rule 364 (option_input)

    option_input	go to state 533



state 363

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 360)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    COMMA	shift, and go to state 531
    CLOSE_PAR	shift, and go to state 534
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 364 (option_input)]
    $default	reduce using rule 364 (option_input)

    option_input	go to state 535



state 364

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 363)

    CLOSE_PAR	shift, and go to state 536



state 365

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 537
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 366

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 538
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 367

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 539
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 368

    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)
    option_function_identifier  ->  ADDRESS . error   (rule 311)

    error	shift, and go to state 540
    OPEN_PAR	shift, and go to state 231
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 232
    point_exp	go to state 233
    address_exp	go to state 234
    identifier	go to state 235
    struct_member_exp	go to state 236



state 369

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 541
    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)



state 370

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 308)

    COMMA	shift, and go to state 542

    $default	reduce using rule 314 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 543



state 371

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 544



state 372

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 546
    ari_operator	go to state 241



state 373

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 374

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    ASS_P	shift, and go to state 547



state 375

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 548
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 376

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 104)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 105)

    error	shift, and go to state 549
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 550
    identifier	go to state 193



state 377

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 98)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 551
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 378

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 379

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    $default	reduce using rule 32 (statement)



state 380

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    AND 	shift, and go to state 197

    $default	reduce using rule 31 (statement)



state 381

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

    AND 	shift, and go to state 197

    $default	reduce using rule 55 (statement)



state 382

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



state 383

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 74)

    CLOSE_BPAR	shift, and go to state 552



state 384

    option_struct_declaration  ->  sign_declaration .   (rule 67)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 68)

    AND 	shift, and go to state 553

    $default	reduce using rule 67 (option_struct_declaration)



state 385

    statement  ->  type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 554



state 386

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 111)

    $default	reduce using rule 111 (ass_statement)



state 387

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    OPEN_PAR	shift, and go to state 555
    ID  	shift, and go to state 175

    array	go to state 556
    identifier	go to state 284



state 388

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 559



state 389

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 560



state 390

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 561



state 391

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 562



state 392

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 393

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 564



state 394

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 565



state 395

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 566



state 396

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 567



state 397

    struct_member_exp  ->  identifier DOT function .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 398

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 568



state 399

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 569



state 400

    struct_member_exp  ->  identifier IMPLY function .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)



state 401

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 570



state 402

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 571



state 403

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 404

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 213
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 572



state 405

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 573



state 406

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 574
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 407

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 575



state 408

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 576
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 409

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 578
    MUL 	shift, and go to state 579



state 410

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 580
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 411

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 581
    MUL 	shift, and go to state 582



state 412

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 583
    MUL 	shift, and go to state 584



state 413

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 585
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 414

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 415

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 588



state 416

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 589



state 417

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 590



state 418

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 592



state 419

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594



state 420

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 596



state 421

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 597



state 422

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 598



state 423

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600



state 424

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 425

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 379)

    IMPLY	shift, and go to state 507

    IMPLY	[reduce using rule 211 (address_exp)]
    $default	reduce using rule 211 (address_exp)



state 426

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
    FLOATDECLARATION	shift, and go to state 603
    OPEN_PAR	shift, and go to state 426
    UNSIGNED	shift, and go to state 604
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 427
    point_exp	go to state 428
    address_exp	go to state 429
    identifier	go to state 430
    struct_member_exp	go to state 431



state 427

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206



state 428

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208



state 429

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

    CLOSE_PAR	shift, and go to state 425



state 430

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210



state 431

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

    CLOSE_PAR	shift, and go to state 338



state 432

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 160)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

    INTER_OR	[reduce using rule 160 (ari_exp)]
    CON 	[reduce using rule 160 (ari_exp)]
    ADDRESS	[reduce using rule 160 (ari_exp)]
    LST 	[reduce using rule 160 (ari_exp)]
    RST 	[reduce using rule 160 (ari_exp)]
    MUL 	[reduce using rule 160 (ari_exp)]
    DIV 	[reduce using rule 160 (ari_exp)]
    MOD 	[reduce using rule 160 (ari_exp)]
    $default	reduce using rule 160 (ari_exp)

    bi_operator	go to state 256



state 433

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 167)

    $default	reduce using rule 167 (simple_ari_exp)



state 434

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ADD 	[reduce using rule 159 (ari_exp)]
    SUB 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)

    ari_operator	go to state 241



state 435

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    OPEN_BPAR	shift, and go to state 605



state 436

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 252)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 252 (prime_bool_exp)

    ari_operator	go to state 241



state 437

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 251)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 241



state 438

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 240)

    $default	reduce using rule 240 (bool_exp)



state 439

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 250)

    $default	reduce using rule 250 (prime_bool_exp)



state 440

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 246)

    $default	reduce using rule 246 (prime_bool_exp)



state 441

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)



state 442

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 249)

    $default	reduce using rule 249 (prime_bool_exp)



state 443

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 245)

    $default	reduce using rule 245 (prime_bool_exp)



state 444

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 445

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 241)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 241 (prime_bool_exp)

    ari_operator	go to state 241



state 446

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 352)

    ELSE	shift, and go to state 606

    $default	reduce using rule 354 (option_else_statement)

    option_else_statement	go to state 607



state 447

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 239)

    AND 	shift, and go to state 275

    $default	reduce using rule 239 (bool_exp)



state 448

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 238 (bool_exp)



state 449

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 248)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 248 (prime_bool_exp)

    ari_operator	go to state 241



state 450

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 247)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 241



state 451

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 452

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    MUL 	shift, and go to state 608



state 453

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 609
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 610
    identifier	go to state 611



state 454

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 612
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 613
    identifier	go to state 614



state 455

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 615
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 616
    identifier	go to state 617



state 456

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 618



state 457

    inner_option_define_identifier  ->  COMMA error .   (rule 307)

    $default	reduce using rule 307 (inner_option_define_identifier)



state 458

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

    MUL 	shift, and go to state 619



state 459

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 296)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 620



state 460

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 297)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 621
    ID  	shift, and go to state 141

    identifier	go to state 622



state 461

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 306)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 623
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 624
    identifier	go to state 625



state 462

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    OPEN_BPAR	shift, and go to state 626



state 463

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 326)
    option_frame_identifier  ->  COMMA . error   (rule 328)

    error	shift, and go to state 627
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 628



state 464

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 629



state 465

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 630
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 280
    identifier	go to state 193



state 466

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 631
    CHARDECLARATION	shift, and go to state 632
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 633
    OPEN_PAR	shift, and go to state 466
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 634
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164



state 467

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 330



state 468

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 635
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193



state 469

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 343 (for_sta_condition)

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 636
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_condition	go to state 637
    struct_member_exp	go to state 108



state 470

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 337)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 638



state 471

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 318)

    $default	reduce using rule 318 (bool_par)



state 472

    statement_bpar  ->  error CLOSE_BPAR .   (rule 317)

    $default	reduce using rule 317 (statement_bpar)



state 473

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 316)

    CLOSE_BPAR	shift, and go to state 639
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 474

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 640



state 475

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 476
    rightaddrshift	go to state 310
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 477
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 478
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    strliteral	go to state 479
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 476

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 641



state 477

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 424
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)

    ari_operator	go to state 241



state 478

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 642
    CON 	shift, and go to state 491

    CLOSE_PAR	[reduce using rule 135 (ass_right)]
    $default	reduce using rule 135 (ass_right)



state 479

    ass_right  ->  strliteral .   (rule 136)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 643

    CLOSE_PAR	[reduce using rule 136 (ass_right)]
    $default	reduce using rule 136 (ass_right)



state 480

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 644
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 645
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 481

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 646
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 241
    inner_option_list_value	go to state 647



state 482

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 201)

    COMMA	shift, and go to state 646
    CON 	shift, and go to state 491

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 648



state 483

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 646

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 649



state 484

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 646
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 241
    inner_option_list_value	go to state 650



state 485

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 198)

    COMMA	shift, and go to state 646
    CON 	shift, and go to state 491

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 651



state 486

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 197)

    COMMA	shift, and go to state 646

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 652



state 487

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 653
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 347
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 348
    leftaddrshift	go to state 654
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 349
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 350
    all_type_define	go to state 351
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 488

    option_output  ->  COMMA . ass_right option_output   (rule 358)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 655
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 489

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (output_statement)



state 490

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 356)

    CLOSE_PAR	shift, and go to state 656



state 491

    array_exp  ->  array_exp CON . array_exp   (rule 192)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 658
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 492

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 352)

    error	shift, and go to state 301
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    OPEN_BPAR	shift, and go to state 302
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 574
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    statement_bpar	go to state 446
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 493

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 659
    MUL 	shift, and go to state 579



state 494

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 660
    MUL 	shift, and go to state 582



state 495

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 661
    MUL 	shift, and go to state 587



state 496

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 662

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 497

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 663

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 498

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 597

    $default	reduce using rule 90 (type_define)



state 499

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 598

    $default	reduce using rule 92 (type_define)



state 500

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 335)

    IMPLY	shift, and go to state 508

    $default	reduce using rule 335 (imply_pre)



state 501

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL identifier .   (rule 151)

    CLOSE_PAR	shift, and go to state 664

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



state 502

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 665
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 503

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 666



state 504

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 504
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 505
    struct_member_exp	go to state 230



state 505

    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 335)

    CLOSE_PAR	shift, and go to state 667
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 506

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 668
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 507

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 379)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 669
    identifier	go to state 670



state 508

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 671



state 509

    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 334)

    AND 	shift, and go to state 337

    $default	reduce using rule 334 (imply_pre)



state 510

    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)


    $default	reduce using rule 333 (imply_pre)



state 511

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 330)

    COMMA	shift, and go to state 339
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    $default	reduce using rule 329 (option_projection)

    option_projection	go to state 672



state 512

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 673



state 513

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 674



state 514

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    CLOSE_PAR	shift, and go to state 675



state 515

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 676



state 516

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 677



state 517

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    identifier  ->  ID .   (rule 320)

    OPEN_MPAR	shift, and go to state 678

    $default	reduce using rule 320 (identifier)



state 518

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 503



state 519

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



state 520

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 262)

    $default	reduce using rule 262 (sign_type_define)



state 521

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 156)

    $default	reduce using rule 156 (point_exp)



state 522

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 155)

    CLOSE_PAR	shift, and go to state 679



state 523

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 680

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 524

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 681

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 525

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 682

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 526

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 683
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 684
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 172



state 527

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 528

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    INTDECLARATION	shift, and go to state 685
    CHARDECLARATION	shift, and go to state 686
    FLOATDECLARATION	shift, and go to state 687
    OPEN_PAR	shift, and go to state 528
    UNSIGNED	shift, and go to state 688
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 529
    point_exp	go to state 355
    address_exp	go to state 429
    identifier	go to state 357
    struct_member_exp	go to state 358



state 529

    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 530

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 531

    option_input  ->  COMMA . identifier option_input   (rule 365)
    option_input  ->  COMMA . array option_input   (rule 366)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 689
    identifier	go to state 690



state 532

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 361)

    $default	reduce using rule 361 (input_statement)



state 533

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 362)

    CLOSE_PAR	shift, and go to state 691



state 534

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)



state 535

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 360)

    CLOSE_PAR	shift, and go to state 692



state 536

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 363)

    $default	reduce using rule 363 (input_statement)



state 537

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 538

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 539

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 540

    option_function_identifier  ->  ADDRESS error .   (rule 311)

    $default	reduce using rule 311 (option_function_identifier)



state 541

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 693
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 542

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 312)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 313)
    inner_option_function_identifier  ->  COMMA . error   (rule 315)

    error	shift, and go to state 694
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 695
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 696
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 543

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 308)

    $default	reduce using rule 308 (option_function_identifier)



state 544

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 545

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 148)
    option_ari_exp  ->  COMMA . error   (rule 149)

    error	shift, and go to state 697
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 698
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 546

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 699



state 547

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 700
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    strliteral	go to state 701



state 548

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 702
    ari_operator	go to state 241



state 549

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 105)

    $default	reduce using rule 105 (inner_option_identifier_array_declaration)



state 550

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (inner_option_identifier_array_declaration)



state 551

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 703



state 552

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 74)

    $default	reduce using rule 74 (struct_define_statement)



state 553

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 68)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 704
    sign_declaration	go to state 384
    declaration	go to state 66
    type_define	go to state 172



state 554

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)

    CLOSE_PAR	shift, and go to state 705



state 555

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
    FLOATDECLARATION	shift, and go to state 603
    OPEN_PAR	shift, and go to state 555
    UNSIGNED	shift, and go to state 604
    ID  	shift, and go to state 175

    array	go to state 556
    identifier	go to state 284



state 556

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)

    CLOSE_PAR	shift, and go to state 331



state 557

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 386)
    option_struct_member_exp  ->  DOT . function   (rule 389)

    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 706
    array	go to state 707
    identifier	go to state 708



state 558

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 387)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 388)
    option_struct_member_exp  ->  IMPLY . function   (rule 390)

    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 709
    array	go to state 710
    identifier	go to state 711



state 559

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 560

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 561

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)



state 562

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 563

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 564

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 565

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 566

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (struct_member_exp)



state 567

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 568

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 569

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 570

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 571

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 572

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 573

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 712



state 574

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 161)

    ELSE	shift, and go to state 713
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ELSE	[reduce using rule 165 (option_exp_else_statement)]
    ADD 	[reduce using rule 165 (option_exp_else_statement)]
    SUB 	[reduce using rule 165 (option_exp_else_statement)]
    $default	reduce using rule 165 (option_exp_else_statement)

    option_exp_else_statement	go to state 714
    ari_operator	go to state 241



state 575

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 716



state 576

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



state 577

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 162)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    ADD 	[reduce using rule 162 (type_cast_alg_exp)]
    SUB 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 256
    ari_operator	go to state 717



state 578

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 579

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 720



state 580

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



state 581

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 582

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 722



state 583

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 723
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 584

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 724



state 585

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



state 586

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 725
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 587

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 726



state 588

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 579



state 589

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 728
    MUL 	shift, and go to state 582



state 590

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 729
    MUL 	shift, and go to state 587



state 591

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 662



state 592

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 730



state 593

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 731
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 594

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 733



state 595

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 734
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 596

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 736



state 597

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 737
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 598

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 738
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 599

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 739
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 600

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 740



state 601

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 741



state 602

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 742



state 603

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 743



state 604

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    INTDECLARATION	shift, and go to state 744
    CHARDECLARATION	shift, and go to state 745



state 605

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 346)

    CASE	shift, and go to state 746
    DEFAULT	shift, and go to state 747

    case_par	go to state 748



state 606

    option_else_statement  ->  ELSE . statement_bpar   (rule 353)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 749



state 607

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 352)

    $default	reduce using rule 352 (if_statement)



state 608

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 750



state 609

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 751
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 752
    identifier	go to state 753



state 610

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 611

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 274)

    ARRAY	shift, and go to state 754
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 755



state 612

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 756
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 757
    identifier	go to state 758



state 613

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 614

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 270)

    ARRAY	shift, and go to state 759
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 760



state 615

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 761
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 762
    identifier	go to state 763



state 616

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 617

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    ARRAY	shift, and go to state 764
    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 765

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766



state 618

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 767



state 619

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 768



state 620

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 296)

    ARRAY	shift, and go to state 769
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 770



state 621

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 295)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 771



state 622

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 297)

    ARRAY	shift, and go to state 772
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 773



state 623

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 306)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 774
    identifier	go to state 775



state 624

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



state 625

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)

    ARRAY	shift, and go to state 776
    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 777

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778



state 626

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 65)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 779
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 627

    option_frame_identifier  ->  COMMA error .   (rule 328)

    $default	reduce using rule 328 (option_frame_identifier)



state 628

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 326)

    COMMA	shift, and go to state 463

    $default	reduce using rule 327 (option_frame_identifier)

    option_frame_identifier	go to state 780



state 629

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 781



state 630

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 782
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193



state 631

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 493



state 632

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 494



state 633

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 495



state 634

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 783



state 635

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 740
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193



state 636

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    for_sta_condition  ->  bool_exp .   (rule 342)

    OR  	shift, and go to state 274
    AND 	shift, and go to state 275

    $default	reduce using rule 342 (for_sta_condition)



state 637

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    COMMA	shift, and go to state 784



state 638

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 337)

    $default	reduce using rule 337 (for_statement)



state 639

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 316)

    $default	reduce using rule 316 (statement_bpar)



state 640

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 785



state 641

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (ass_right)



state 642

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 195)

    $default	reduce using rule 195 (array_exp)



state 643

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    OPEN_PAR	shift, and go to state 786



state 644

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 644
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 645
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 645

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 642
    CON 	shift, and go to state 491



state 646

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 204)
    inner_option_list_value  ->  COMMA . error   (rule 206)

    error	shift, and go to state 787
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 480
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 788
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 789
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 790
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 647

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 791



state 648

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 201)

    CLOSE_BPAR	shift, and go to state 792



state 649

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 793



state 650

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 794



state 651

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 198)

    CLOSE_MPAR	shift, and go to state 795



state 652

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 796



state 653

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 797
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 654

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 140)

    CLOSE_PAR	shift, and go to state 798



state 655

    option_output  ->  COMMA ass_right . option_output   (rule 358)

    COMMA	shift, and go to state 488

    $default	reduce using rule 357 (option_output)

    option_output	go to state 799



state 656

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (output_statement)



state 657

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 645
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 658

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  array_exp CON array_exp .   (rule 192)


    $default	reduce using rule 192 (array_exp)



state 659

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 800
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 802
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 660

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 803
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 805
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 661

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 806
    INTLITERAL	shift, and go to state 807
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 725
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 662

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 808
    MUL 	shift, and go to state 733



state 663

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 809
    MUL 	shift, and go to state 736



state 664

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    OPEN_PAR	shift, and go to state 810



state 665

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 811
    ari_operator	go to state 241



state 666

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 812



state 667

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 335)

    $default	reduce using rule 335 (imply_pre)



state 668

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 813
    ari_operator	go to state 241



state 669

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 814



state 670

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 815



state 671

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 816
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 672

    option_projection  ->  COMMA statement option_projection .   (rule 330)

    $default	reduce using rule 330 (option_projection)



state 673

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 674

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 817



state 675

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    ASS_P	shift, and go to state 818



state 676

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)



state 677

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    CLOSE_PAR	shift, and go to state 664



state 678

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 819
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 679

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 155)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 820
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 821



state 681

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 822



state 682

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 823



state 683

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 824

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 684

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 825

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 685

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 680



state 686

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 681



state 687

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 682



state 688

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    INTDECLARATION	shift, and go to state 744
    CHARDECLARATION	shift, and go to state 826



state 689

    option_input  ->  COMMA array . option_input   (rule 366)

    COMMA	shift, and go to state 531

    $default	reduce using rule 364 (option_input)

    option_input	go to state 827



state 690

    option_input  ->  COMMA identifier . option_input   (rule 365)

    COMMA	shift, and go to state 531

    $default	reduce using rule 364 (option_input)

    option_input	go to state 828



state 691

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 362)

    $default	reduce using rule 362 (input_statement)



state 692

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)



state 693

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 309)

    CLOSE_PAR	shift, and go to state 829



state 694

    inner_option_function_identifier  ->  COMMA error .   (rule 315)

    $default	reduce using rule 315 (inner_option_function_identifier)



state 695

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 313)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 830
    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)



state 696

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 312)

    COMMA	shift, and go to state 542

    $default	reduce using rule 314 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 831



state 697

    option_ari_exp  ->  COMMA error .   (rule 149)

    $default	reduce using rule 149 (option_ari_exp)



state 698

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 832
    ari_operator	go to state 241



state 699

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)



state 700

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 376
    CON 	shift, and go to state 491

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 833



state 701

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 834



state 702

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    CLOSE_MPAR	shift, and go to state 835



state 703

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 704

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 68)

    $default	reduce using rule 68 (option_struct_declaration)



state 705

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 836



state 706

    option_struct_member_exp  ->  DOT function .   (rule 389)

    $default	reduce using rule 389 (option_struct_member_exp)



state 707

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 837



state 708

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 838



state 709

    option_struct_member_exp  ->  IMPLY function .   (rule 390)

    $default	reduce using rule 390 (option_struct_member_exp)



state 710

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 388)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 839



state 711

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 840



state 712

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 841



state 713

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 164)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 842
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 714

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 161)

    $default	reduce using rule 161 (ari_exp)



state 715

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 716

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 844



state 717

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 163)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 845
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 718

    casted_element  ->  type_cast_alg_exp .   (rule 235)

    $default	reduce using rule 235 (casted_element)



state 719

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 720

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 846
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 721

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 722

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 847
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 723

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 724

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 848
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 725

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 726

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 849
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 727

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 728

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 729

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 806
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 725
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 730

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 850
    MUL 	shift, and go to state 736



state 731

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 732

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 851
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 733

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 852



state 734

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 735

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 736

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 854



state 737

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 738

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 739

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 740

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 855
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 741

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 856



state 742

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 857



state 743

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 858



state 744

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 824



state 745

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 859



state 746

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 347)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 860
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 747

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 348)

    COLON	shift, and go to state 861



state 748

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 346)

    CLOSE_BPAR	shift, and go to state 862



state 749

    option_else_statement  ->  ELSE statement_bpar .   (rule 353)

    $default	reduce using rule 353 (option_else_statement)



state 750

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    CLOSE_PAR	shift, and go to state 863



state 751

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 864
    identifier	go to state 865



state 752

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 753

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866



state 754

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867



state 755

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 756

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868
    identifier	go to state 869



state 757

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 758

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870



state 759

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 871



state 760

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 761

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 288)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 872



state 762

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 763

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 286)

    ARRAY	shift, and go to state 873
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 874



state 764

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 875

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 876



state 765

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 877
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 766

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 767

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 878



state 768

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

    CLOSE_PAR	shift, and go to state 879



state 769

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 296)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 880



state 770

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 771

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 881



state 772

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 882



state 773

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 774

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 306)

    $default	reduce using rule 306 (inner_option_define_identifier)



state 775

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 305)

    ARRAY	shift, and go to state 883
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 884



state 776

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 885

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 886



state 777

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 887
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 778

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)



state 779

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 65)

    CLOSE_BPAR	shift, and go to state 888
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 780

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 326)

    $default	reduce using rule 326 (option_frame_identifier)



state 781

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 889



state 782

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 844
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193



state 783

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 663



state 784

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    OPEN_PAR	shift, and go to state 359
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    $default	reduce using rule 345 (for_sta_control)

    ass_statement	go to state 890
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 182
    point_exp	go to state 72
    identifier	go to state 73
    for_sta_control	go to state 891
    struct_member_exp	go to state 81



state 785

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 892
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 786

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 893



state 787

    inner_option_list_value  ->  COMMA error .   (rule 206)

    $default	reduce using rule 206 (inner_option_list_value)



state 788

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 646
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 241
    inner_option_list_value	go to state 894



state 789

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 204)

    COMMA	shift, and go to state 646
    CON 	shift, and go to state 491

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 895



state 790

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 203)

    COMMA	shift, and go to state 646

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 896



state 791

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)



state 792

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 201)

    $default	reduce using rule 201 (option_struct_list_value)



state 793

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 200)

    $default	reduce using rule 200 (option_struct_list_value)



state 794

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 795

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 198)

    $default	reduce using rule 198 (option_list_value)



state 796

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 197)

    $default	reduce using rule 197 (option_list_value)



state 797

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 631
    CHARDECLARATION	shift, and go to state 632
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 633
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 634
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 798

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 140)

    $default	reduce using rule 140 (rightaddrshift)



state 799

    option_output  ->  COMMA ass_right option_output .   (rule 358)

    $default	reduce using rule 358 (option_output)



state 800

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 897
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 801

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 898
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



state 802

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 899

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 803

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 900
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 804

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 901
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



state 805

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 902

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 806

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 903
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



state 807

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 904

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 808

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 905
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 851
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 809

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 906
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 908
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 810

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 87)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 909



state 811

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 910



state 812

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 911



state 813

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 912



state 814

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 815

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 816

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 913
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 817

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 818

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    OPEN_BPAR	shift, and go to state 914



state 819

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 915
    ari_operator	go to state 241



state 820

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ADD 	[reduce using rule 155 (point_exp)]
    SUB 	[reduce using rule 155 (point_exp)]
    $default	reduce using rule 155 (point_exp)

    ari_operator	go to state 241



state 821

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_PAR	shift, and go to state 916
    ID  	shift, and go to state 917
    INTLITERAL	shift, and go to state 918



state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_PAR	shift, and go to state 919
    ID  	shift, and go to state 920
    INTLITERAL	shift, and go to state 921



state 823

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 922
    INTLITERAL	shift, and go to state 923



state 824

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 924



state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 925



state 826

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 825



state 827

    option_input  ->  COMMA array option_input .   (rule 366)

    $default	reduce using rule 366 (option_input)



state 828

    option_input  ->  COMMA identifier option_input .   (rule 365)

    $default	reduce using rule 365 (option_input)



state 829

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 309)

    COMMA	shift, and go to state 542

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 314 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 926



state 830

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 313)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 927
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 831

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 312)

    $default	reduce using rule 312 (inner_option_function_identifier)



state 832

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)



state 833

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 834

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 835

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 376
    ASS_P	shift, and go to state 928

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 929



state 836

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 930
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 837

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 838

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 839

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 388)

    $default	reduce using rule 388 (option_struct_member_exp)



state 840

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 387)

    $default	reduce using rule 387 (option_struct_member_exp)



state 841

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 931
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 842

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 164)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    ari_operator	go to state 241



state 843

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 844

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 932
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 845

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

    INTER_OR	[reduce using rule 163 (type_cast_alg_exp)]
    CON 	[reduce using rule 163 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 163 (type_cast_alg_exp)]
    LST 	[reduce using rule 163 (type_cast_alg_exp)]
    RST 	[reduce using rule 163 (type_cast_alg_exp)]
    MUL 	[reduce using rule 163 (type_cast_alg_exp)]
    DIV 	[reduce using rule 163 (type_cast_alg_exp)]
    MOD 	[reduce using rule 163 (type_cast_alg_exp)]
    $default	reduce using rule 163 (type_cast_alg_exp)

    bi_operator	go to state 256



state 846

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 847

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 848

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 849

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 850

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 851

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 852

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 933
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 853

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 854

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 934
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 855

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 856

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 917



state 857

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    ID  	shift, and go to state 920



state 858

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 922



state 859

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 935



state 860

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 347)

    COLON	shift, and go to state 936



state 861

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 348)

    OPEN_PAR	shift, and go to state 937



state 862

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 346)

    $default	reduce using rule 346 (switch_statement)



state 863

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    OPEN_PAR	shift, and go to state 938



state 864

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 865

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 939



state 866

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 867

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 868

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 869

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 940



state 870

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 871

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 872

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 941



state 873

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 942



state 874

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 875

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 943
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 876

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 877

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 944
    CLOSE_MPAR	shift, and go to state 945
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 878

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 70 (empty_statement)

    statement	go to state 946
    empty_statement	go to state 947
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 879

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

    OPEN_PAR	shift, and go to state 948



state 880

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 881

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 882

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 883

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 949



state 884

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 885

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 950
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 886

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 887

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 951
    CLOSE_MPAR	shift, and go to state 952
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 888

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 65)

    $default	reduce using rule 65 (statement)



state 889

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 953
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 890

    for_sta_control  ->  ass_statement .   (rule 344)

    $default	reduce using rule 344 (for_sta_control)



state 891

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 338)

    CLOSE_PAR	shift, and go to state 954



state 892

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 955
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 893

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 956



state 894

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)



state 895

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



state 896

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 203)

    $default	reduce using rule 203 (inner_option_list_value)



state 897

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 957
    CHARDECLARATION	shift, and go to state 958
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 959
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 898

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 960



state 899

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 961



state 900

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 962
    CHARDECLARATION	shift, and go to state 963
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 964
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 901

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 965



state 902

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 966



state 903

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 967



state 904

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 968



state 905

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 969
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



state 906

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 970
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 907

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 971
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 972

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 909

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 87)

    CLOSE_PAR	shift, and go to state 973



state 910

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    CLOSE_PAR	shift, and go to state 974

    CLOSE_PAR	[reduce using rule 141 (array)]
    $default	reduce using rule 141 (array)



state 911

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 912

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 913

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 914

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 62)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 70 (empty_statement)

    statement	go to state 946
    empty_statement	go to state 975
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 915

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_MPAR	shift, and go to state 976



state 916

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_PAR	shift, and go to state 977



state 917

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 898



state 918

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 899



state 919

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_PAR	shift, and go to state 978



state 920

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 901



state 921

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 902



state 922

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 903



state 923

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 904



state 924

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 979



state 925

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_PAR	shift, and go to state 980
    ID  	shift, and go to state 981
    INTLITERAL	shift, and go to state 982



state 926

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 309)

    $default	reduce using rule 309 (option_function_identifier)



state 927

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 313)

    CLOSE_PAR	shift, and go to state 983



state 928

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 984
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    strliteral	go to state 985



state 929

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 930

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 61)

    CLOSE_BPAR	shift, and go to state 986
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 931

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 932

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 933

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 934

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 935

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    ID  	shift, and go to state 981



state 936

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 347)

    OPEN_PAR	shift, and go to state 987



state 937

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 348)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 988
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 938

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 989



state 939

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 940

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 941

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)



state 942

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 943

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 285)

    CLOSE_MPAR	shift, and go to state 990
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 944

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 991
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 945

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 992



state 946

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 69)

    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    $default	reduce using rule 69 (empty_statement)



state 947

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 993



state 948

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 994



state 949

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 950

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 304)

    CLOSE_MPAR	shift, and go to state 995
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 951

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 996
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 952

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 997



state 953

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 998
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 954

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 338)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 999



state 955

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 956

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    OPEN_PAR	shift, and go to state 1000



state 957

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 1001



state 958

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1002



state 959

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1003



state 960

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1004
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 961

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1005
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 1006



state 963

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1007



state 964

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1008



state 965

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1009
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 966

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1010
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 967

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1011
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 968

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1012
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 969

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 1013



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 1014
    CHARDECLARATION	shift, and go to state 1015
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 1016
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 971

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 1017



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 1018



state 973

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 974

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 1019



state 975

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 62)

    CLOSE_BPAR	shift, and go to state 1020



state 976

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_PAR	shift, and go to state 974



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTDECLARATION	shift, and go to state 1021
    CHARDECLARATION	shift, and go to state 1022
    UNSIGNED	shift, and go to state 1023



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTDECLARATION	shift, and go to state 1024
    CHARDECLARATION	shift, and go to state 1025
    UNSIGNED	shift, and go to state 1026



state 979

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 969



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_PAR	shift, and go to state 1027



state 981

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 971



state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 972



state 983

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 313)

    COMMA	shift, and go to state 542

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 314 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 1028



state 984

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 101)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 376
    CON 	shift, and go to state 491

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1029



state 985

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1030



state 986

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 61)

    $default	reduce using rule 61 (statement)



state 987

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 347)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1031
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 988

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 348)

    CLOSE_PAR	shift, and go to state 1032
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 989

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 289)

    CLOSE_PAR	shift, and go to state 1033



state 990

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1034



state 991

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 284)

    CLOSE_MPAR	shift, and go to state 1035
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 992

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 993

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 994

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 300)

    CLOSE_PAR	shift, and go to state 1036



state 995

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1037



state 996

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 303)

    CLOSE_MPAR	shift, and go to state 1038
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241



state 997

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 998

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



state 999

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 338)

    $default	reduce using rule 338 (extend_for_statement)



state 1000

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 137)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 1039



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1040
    MUL 	shift, and go to state 579



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1041
    MUL 	shift, and go to state 582



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1042



state 1004

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1043
    ari_operator	go to state 241



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1044
    ari_operator	go to state 241



state 1006

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1045
    MUL 	shift, and go to state 579



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1046
    MUL 	shift, and go to state 582



state 1008

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1047



state 1009

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1048
    ari_operator	go to state 241



state 1010

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1049
    ari_operator	go to state 241



state 1011

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1050
    ari_operator	go to state 241



state 1012

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1051
    ari_operator	go to state 241



state 1013

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1052
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1014

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 1053



state 1015

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1054



state 1016

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1055



state 1017

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1056
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1018

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1057
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1019

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 1058



state 1020

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 62)

    $default	reduce using rule 62 (statement)



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1059



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1060



state 1023

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CHARDECLARATION	shift, and go to state 1061



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1062



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1063



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CHARDECLARATION	shift, and go to state 1064



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTDECLARATION	shift, and go to state 1065
    CHARDECLARATION	shift, and go to state 1066
    UNSIGNED	shift, and go to state 1067



state 1028

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 313)

    $default	reduce using rule 313 (inner_option_function_identifier)



state 1029

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 1030

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 1031

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 347)

    CLOSE_PAR	shift, and go to state 1068
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 1032

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 348)

    $default	reduce using rule 348 (case_par)



state 1033

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 289)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1069



state 1034

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 1035

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1070



state 1036

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1071



state 1037

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)



state 1038

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1072



state 1039

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 1073



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1074
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1075
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1076
    MUL 	shift, and go to state 736



state 1043

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1077



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1078



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1079
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1080
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1081
    MUL 	shift, and go to state 736



state 1048

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1082



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1083



state 1050

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1084



state 1051

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1085



state 1052

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1086
    ari_operator	go to state 241



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1087
    MUL 	shift, and go to state 579



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1088
    MUL 	shift, and go to state 582



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1089



state 1056

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1090
    ari_operator	go to state 241



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1091
    ari_operator	go to state 241



state 1058

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_PAR	shift, and go to state 1092



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1093



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1094



state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1095



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1096



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1097



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1098



state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1099



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1100



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CHARDECLARATION	shift, and go to state 1101



state 1068

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 347)

    CASE	shift, and go to state 746
    BREAK	shift, and go to state 1102
    DEFAULT	shift, and go to state 747

    $default	reduce using rule 351 (init_case_par)

    case_par	go to state 1103
    init_case_par	go to state 1104



state 1069

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_parameter_list)



state 1070

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 1071

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 1072

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 1073

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 137)

    OPEN_PAR	shift, and go to state 1105
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1106

    function	go to state 1107
    array	go to state 1108



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1109

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1110

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 1111
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1077

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1112

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1113

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 1114
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1082

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 1084

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1086

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1115



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1116
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1117
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1118
    MUL 	shift, and go to state 736



state 1090

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 1119



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1120



state 1092

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 89)

    ASS_P	shift, and go to state 1121

    $default	reduce using rule 88 (declaration)



state 1093

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1122



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1123



state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1124



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1125



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1126



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1127



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1128



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1129



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1130



state 1102

    init_case_par  ->  BREAK . case_par   (rule 349)

    CASE	shift, and go to state 746
    DEFAULT	shift, and go to state 747

    case_par	go to state 1131



state 1103

    init_case_par  ->  case_par .   (rule 350)

    $default	reduce using rule 350 (init_case_par)



state 1104

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 347)

    $default	reduce using rule 347 (case_par)



state 1105

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)

    OPEN_PAR	shift, and go to state 1132
    ID  	shift, and go to state 1133

    array	go to state 556



state 1106

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_PAR	shift, and go to state 188
    OPEN_MPAR	shift, and go to state 189



state 1107

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 137)

    $default	reduce using rule 137 (ass_right)



state 1108

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 205



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1134



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1135



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1136

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1137



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1138



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1139

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1115

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1140

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1141

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 1142
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1119

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1121

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 1143
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1109



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1110



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1144



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1112



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1113



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1145



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1146



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1147



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1148



state 1131

    init_case_par  ->  BREAK case_par .   (rule 349)

    $default	reduce using rule 349 (init_case_par)



state 1132

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
    FLOATDECLARATION	shift, and go to state 603
    OPEN_PAR	shift, and go to state 1132
    UNSIGNED	shift, and go to state 604
    ID  	shift, and go to state 1133

    array	go to state 556



state 1133

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 189



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1149



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1150



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1151



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1152



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1153



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1154



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1155



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1156



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1157

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 1143

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 89)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 491

    $default	reduce using rule 89 (declaration)



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1136



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1139



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1140



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1141



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1158



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1159
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1160
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1161



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1162
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1163
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1164



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1165



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1166



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1167



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1157



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1168
    ari_operator	go to state 241



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1169
    ari_operator	go to state 241



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1170
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1171
    ari_operator	go to state 241



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1172
    ari_operator	go to state 241



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1173
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1174
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1175
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1176



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1177



state 1169

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1178



state 1170

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1179
    ari_operator	go to state 241



state 1171

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1180



state 1172

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1181



state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1182
    ari_operator	go to state 241



state 1174

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1183
    ari_operator	go to state 241



state 1175

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1184
    ari_operator	go to state 241



state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1185
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1177

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1178

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1179

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1186



state 1180

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1181

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1182

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1187



state 1183

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1188



state 1184

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1189



state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1190
    ari_operator	go to state 241



state 1186

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1187

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1188

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1191



state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1192

    $   	go to state 1193



state 1193

    $   	go to state 1194



state 1194

    $default	accept
