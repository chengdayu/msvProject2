Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   FREXP
   PREFIX


Useless rules:

#109   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#110   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#111   inner_option_array_declaration :	;
#112   inner_option_array_declaration :	 COMMA error;


Conflict in state 106 between rule 13 and token CHOP resolved as reduce.
Conflict in state 106 between rule 13 and token IFF resolved as reduce.
Conflict in state 106 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 106 between rule 13 and token OR resolved as reduce.
Conflict in state 106 between rule 13 and token AND resolved as reduce.
Conflict in state 106 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 107 between rule 22 and token CHOP resolved as reduce.
Conflict in state 107 between rule 22 and token IFF resolved as reduce.
Conflict in state 107 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 107 between rule 22 and token OR resolved as reduce.
Conflict in state 107 between rule 22 and token AND resolved as reduce.
Conflict in state 107 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 157 between rule 21 and token CHOP resolved as reduce.
Conflict in state 157 between rule 21 and token IFF resolved as reduce.
Conflict in state 157 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 157 between rule 21 and token OR resolved as reduce.
Conflict in state 157 between rule 21 and token AND resolved as reduce.
Conflict in state 157 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 158 between rule 10 and token CHOP resolved as reduce.
Conflict in state 158 between rule 10 and token IFF resolved as reduce.
Conflict in state 158 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 158 between rule 10 and token OR resolved as reduce.
Conflict in state 158 between rule 10 and token AND resolved as reduce.
Conflict in state 158 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 159 between rule 9 and token CHOP resolved as reduce.
Conflict in state 159 between rule 9 and token IFF resolved as reduce.
Conflict in state 159 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 159 between rule 9 and token OR resolved as reduce.
Conflict in state 159 between rule 9 and token AND resolved as reduce.
Conflict in state 159 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 160 between rule 20 and token CHOP resolved as reduce.
Conflict in state 160 between rule 20 and token IFF resolved as reduce.
Conflict in state 160 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 160 between rule 20 and token OR resolved as reduce.
Conflict in state 160 between rule 20 and token AND resolved as reduce.
Conflict in state 160 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 161 between rule 12 and token CHOP resolved as reduce.
Conflict in state 161 between rule 12 and token IFF resolved as reduce.
Conflict in state 161 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 161 between rule 12 and token OR resolved as reduce.
Conflict in state 161 between rule 12 and token AND resolved as reduce.
Conflict in state 161 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 162 between rule 11 and token CHOP resolved as reduce.
Conflict in state 162 between rule 11 and token IFF resolved as reduce.
Conflict in state 162 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 162 between rule 11 and token OR resolved as reduce.
Conflict in state 162 between rule 11 and token AND resolved as reduce.
Conflict in state 162 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 316 between rule 219 and token IMPLY resolved as reduce.
Conflict in state 319 between rule 218 and token IMPLY resolved as reduce.
Conflict in state 340 between rule 8 and token CHOP resolved as reduce.
Conflict in state 340 between rule 8 and token IFF resolved as shift.
Conflict in state 340 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 340 between rule 8 and token OR resolved as shift.
Conflict in state 340 between rule 8 and token AND resolved as shift.
Conflict in state 340 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 341 between rule 6 and token CHOP resolved as reduce.
Conflict in state 341 between rule 6 and token IFF resolved as reduce.
Conflict in state 341 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 341 between rule 6 and token OR resolved as shift.
Conflict in state 341 between rule 6 and token AND resolved as shift.
Conflict in state 341 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 342 between rule 7 and token CHOP resolved as reduce.
Conflict in state 342 between rule 7 and token IFF resolved as reduce.
Conflict in state 342 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 342 between rule 7 and token OR resolved as shift.
Conflict in state 342 between rule 7 and token AND resolved as shift.
Conflict in state 342 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 343 between rule 5 and token CHOP resolved as reduce.
Conflict in state 343 between rule 5 and token IFF resolved as reduce.
Conflict in state 343 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 343 between rule 5 and token OR resolved as reduce.
Conflict in state 343 between rule 5 and token AND resolved as shift.
Conflict in state 343 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 344 between rule 4 and token CHOP resolved as reduce.
Conflict in state 344 between rule 4 and token IFF resolved as reduce.
Conflict in state 344 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 344 between rule 4 and token OR resolved as reduce.
Conflict in state 344 between rule 4 and token AND resolved as reduce.
Conflict in state 344 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 351 between rule 303 and token OR resolved as reduce.
Conflict in state 351 between rule 303 and token AND resolved as reduce.
Conflict in state 419 between rule 398 and token OR resolved as reduce.
Conflict in state 419 between rule 398 and token AND resolved as reduce.
Conflict in state 483 between rule 32 and token CHOP resolved as reduce.
Conflict in state 483 between rule 32 and token OR resolved as shift.
Conflict in state 483 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 483 between rule 32 and token AND resolved as shift.
Conflict in state 484 between rule 31 and token CHOP resolved as reduce.
Conflict in state 484 between rule 31 and token OR resolved as reduce.
Conflict in state 484 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 484 between rule 31 and token AND resolved as shift.
Conflict in state 485 between rule 54 and token CHOP resolved as reduce.
Conflict in state 485 between rule 54 and token OR resolved as reduce.
Conflict in state 485 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 485 between rule 54 and token AND resolved as shift.
Conflict in state 486 between rule 30 and token CHOP resolved as reduce.
Conflict in state 486 between rule 30 and token OR resolved as reduce.
Conflict in state 486 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 486 between rule 30 and token AND resolved as reduce.
Conflict in state 564 between rule 305 and token OR resolved as reduce.
Conflict in state 564 between rule 305 and token AND resolved as shift.
Conflict in state 565 between rule 304 and token OR resolved as reduce.
Conflict in state 565 between rule 304 and token AND resolved as reduce.
Conflict in state 637 between rule 400 and token OR resolved as reduce.
Conflict in state 637 between rule 400 and token AND resolved as shift.
Conflict in state 638 between rule 399 and token OR resolved as reduce.
Conflict in state 638 between rule 399 and token AND resolved as reduce.
Conflict in state 814 between rule 203 and token CON resolved as reduce.
State 143 contains 2 shift/reduce conflicts.
State 144 contains 2 shift/reduce conflicts.
State 146 contains 14 shift/reduce conflicts.
State 152 contains 2 shift/reduce conflicts.
State 171 contains 2 shift/reduce conflicts.
State 209 contains 3 reduce/reduce conflicts.
State 211 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 212 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 213 contains 1 shift/reduce conflict.
State 215 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 217 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 218 contains 1 shift/reduce conflict.
State 253 contains 1 shift/reduce conflict.
State 284 contains 1 shift/reduce conflict.
State 285 contains 1 shift/reduce conflict.
State 287 contains 1 shift/reduce conflict.
State 288 contains 1 shift/reduce conflict.
State 289 contains 1 shift/reduce conflict.
State 291 contains 8 shift/reduce conflicts.
State 292 contains 8 shift/reduce conflicts.
State 293 contains 8 shift/reduce conflicts.
State 294 contains 8 shift/reduce conflicts.
State 295 contains 8 shift/reduce conflicts.
State 296 contains 8 shift/reduce conflicts.
State 297 contains 8 shift/reduce conflicts.
State 298 contains 8 shift/reduce conflicts.
State 299 contains 8 shift/reduce conflicts.
State 300 contains 8 shift/reduce conflicts.
State 301 contains 8 shift/reduce conflicts.
State 302 contains 8 shift/reduce conflicts.
State 303 contains 8 shift/reduce conflicts.
State 304 contains 8 shift/reduce conflicts.
State 305 contains 8 shift/reduce conflicts.
State 306 contains 8 shift/reduce conflicts.
State 309 contains 8 shift/reduce conflicts.
State 310 contains 8 shift/reduce conflicts.
State 311 contains 8 shift/reduce conflicts.
State 316 contains 1 shift/reduce conflict.
State 319 contains 1 shift/reduce conflict.
State 349 contains 1 shift/reduce conflict.
State 352 contains 2 shift/reduce conflicts.
State 353 contains 2 shift/reduce conflicts.
State 380 contains 1 shift/reduce conflict.
State 381 contains 1 shift/reduce conflict.
State 382 contains 1 shift/reduce conflict.
State 383 contains 1 shift/reduce conflict.
State 400 contains 1 shift/reduce conflict.
State 409 contains 1 shift/reduce conflict.
State 410 contains 1 shift/reduce conflict.
State 411 contains 1 shift/reduce conflict.
State 417 contains 1 shift/reduce conflict.
State 460 contains 1 shift/reduce conflict.
State 461 contains 1 shift/reduce conflict.
State 463 contains 1 shift/reduce conflict.
State 464 contains 1 shift/reduce conflict.
State 466 contains 1 shift/reduce conflict.
State 467 contains 1 shift/reduce conflict.
State 490 contains 2 shift/reduce conflicts.
State 491 contains 2 shift/reduce conflicts.
State 493 contains 2 shift/reduce conflicts.
State 494 contains 2 shift/reduce conflicts.
State 495 contains 2 shift/reduce conflicts.
State 496 contains 2 shift/reduce conflicts.
State 497 contains 2 shift/reduce conflicts.
State 498 contains 2 shift/reduce conflicts.
State 500 contains 2 shift/reduce conflicts.
State 501 contains 2 shift/reduce conflicts.
State 503 contains 2 shift/reduce conflicts.
State 504 contains 2 shift/reduce conflicts.
State 527 contains 1 shift/reduce conflict.
State 549 contains 8 shift/reduce conflicts.
State 551 contains 8 shift/reduce conflicts.
State 571 contains 1 shift/reduce conflict.
State 605 contains 1 shift/reduce conflict.
State 606 contains 1 shift/reduce conflict.
State 607 contains 1 shift/reduce conflict.
State 624 contains 1 shift/reduce conflict.
State 625 contains 1 shift/reduce conflict.
State 629 contains 1 shift/reduce conflict.
State 659 contains 1 shift/reduce conflict.
State 660 contains 1 shift/reduce conflict.
State 661 contains 1 shift/reduce conflict.
State 685 contains 1 shift/reduce conflict.
State 705 contains 9 shift/reduce conflicts.
State 708 contains 10 shift/reduce conflicts.
State 825 contains 2 shift/reduce conflicts.
State 826 contains 2 shift/reduce conflicts.
State 842 contains 1 shift/reduce conflict.
State 843 contains 1 shift/reduce conflict.
State 855 contains 1 shift/reduce conflict.
State 856 contains 1 shift/reduce conflict.
State 861 contains 2 shift/reduce conflicts.
State 862 contains 2 shift/reduce conflicts.
State 864 contains 2 shift/reduce conflicts.
State 865 contains 2 shift/reduce conflicts.
State 971 contains 1 shift/reduce conflict.
State 972 contains 1 shift/reduce conflict.
State 974 contains 1 shift/reduce conflict.
State 975 contains 1 shift/reduce conflict.
State 976 contains 1 shift/reduce conflict.
State 977 contains 1 shift/reduce conflict.
State 994 contains 8 shift/reduce conflicts.
State 1002 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1008 contains 1 shift/reduce conflict.
State 1014 contains 8 shift/reduce conflicts.
State 1017 contains 8 shift/reduce conflicts.
State 1083 contains 1 shift/reduce conflict.
State 1085 contains 1 shift/reduce conflict.
State 1086 contains 1 shift/reduce conflict.
State 1088 contains 1 shift/reduce conflict.
State 1163 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1164 contains 1 shift/reduce conflict.
State 1165 contains 1 shift/reduce conflict.
State 1252 contains 1 shift/reduce conflict.
State 1253 contains 1 shift/reduce conflict.
State 1257 contains 1 shift/reduce conflict.
State 1258 contains 1 shift/reduce conflict.
State 1289 contains 1 shift/reduce conflict.
State 1292 contains 1 shift/reduce conflict.
State 1294 contains 1 shift/reduce conflict.
State 1295 contains 1 shift/reduce conflict.
State 1320 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 60   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 61   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 62   statement -> struct_define_statement
rule 63   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 64   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 65   statement -> function
rule 66   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 67   statement -> OPEN_PAR statement CLOSE_PAR
rule 68   option_struct_declaration -> sign_declaration
rule 69   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 70   empty_statement -> statement
rule 71   empty_statement ->		/* empty */
rule 72   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   function -> file_statement
rule 75   function -> String_Function
rule 76   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 77   struct_identifier -> STRUCT ID
rule 78   struct_identifier -> UNION ID
rule 79   sign_declaration -> SIGNED declaration
rule 80   sign_declaration -> UNSIGNED declaration
rule 81   sign_declaration -> declaration
rule 82   declaration -> type_define option_identifier_array_declaration
rule 83   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> STRUCT ID option_identifier_array_declaration
rule 85   declaration -> UNION ID option_identifier_array_declaration
rule 86   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 87   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 88   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 89   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 90   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 91   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 92   type_define -> INTDECLARATION
rule 93   type_define -> FLOATDECLARATION
rule 94   type_define -> CHARDECLARATION
rule 95   type_define -> STRDECLARATION
rule 96   type_define -> VOIDDECLARATION
rule 97   type_define -> FILEDECLARATION
rule 98   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 106  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 107  inner_option_identifier_array_declaration -> COMMA error
rule 108  inner_option_identifier_array_declaration ->		/* empty */
rule 113  file_statement -> FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR
rule 114  file_statement -> FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR
rule 115  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 116  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 117  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 118  file_statement -> FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR
rule 119  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 120  ass_statement -> ass_left assign_operator ass_right
rule 121  ass_left -> identifier
rule 122  ass_left -> struct_member_exp
rule 123  ass_left -> array
rule 124  ass_left -> point_exp
rule 125  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 126  ass_left -> NEXT ass_left
rule 127  ass_left -> leftaddrshift
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 138  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  assign_operator -> ASS_P
rule 142  assign_operator -> ASS_N
rule 143  ass_right -> ari_exp
rule 144  ass_right -> array_exp
rule 145  ass_right -> strliteral
rule 146  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 147  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 148  ass_right -> rightaddrshift
rule 149  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 150  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 151  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 156  array -> OPEN_PAR array CLOSE_PAR
rule 157  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 158  option_ari_exp -> COMMA error
rule 159  option_ari_exp ->		/* empty */
rule 160  point_exp -> MUL identifier
rule 161  point_exp -> MUL point_exp
rule 162  point_exp -> MUL array
rule 163  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 164  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 165  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 166  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 167  ari_exp -> simple_ari_exp
rule 168  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 169  ari_exp -> ari_exp bi_operator simple_ari_exp
rule 170  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 171  type_cast_alg_exp -> simple_ari_exp
rule 172  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 173  option_exp_else_statement -> ELSE ari_exp
rule 174  option_exp_else_statement ->		/* empty */
rule 175  simple_ari_exp -> member_in_exp
rule 176  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 177  member_in_exp -> intliteral
rule 178  member_in_exp -> SUB member_in_exp
rule 179  member_in_exp -> BNE member_in_exp
rule 180  member_in_exp -> POINTERNULL
rule 181  member_in_exp -> floatliteral
rule 182  member_in_exp -> identifier
rule 183  member_in_exp -> array
rule 184  member_in_exp -> point_exp
rule 185  member_in_exp -> function
rule 186  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 187  member_in_exp -> math_function
rule 188  member_in_exp -> charliteral
rule 189  member_in_exp -> address_exp
rule 190  member_in_exp -> type_cast
rule 191  member_in_exp -> struct_member_exp
rule 192  member_in_exp -> size_of
rule 193  bi_operator -> MUL
rule 194  bi_operator -> DIV
rule 195  bi_operator -> MOD
rule 196  bi_operator -> LST
rule 197  bi_operator -> RST
rule 198  bi_operator -> ADDRESS
rule 199  bi_operator -> INTER_OR
rule 200  bi_operator -> CON
rule 201  ari_operator -> ADD
rule 202  ari_operator -> SUB
rule 203  array_exp -> array_exp CON array_exp
rule 204  array_exp -> option_list_value
rule 205  array_exp -> option_struct_list_value
rule 206  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 207  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 208  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 209  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 210  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 211  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 212  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 213  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 214  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 215  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 216  inner_option_list_value ->		/* empty */
rule 217  inner_option_list_value -> COMMA error
rule 218  address_exp -> ADDRESS identifier
rule 219  address_exp -> ADDRESS array
rule 220  address_exp -> ADDRESS struct_member_exp
rule 221  address_exp -> ADDRESS address_exp
rule 222  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 223  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 225  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 226  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 227  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 228  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 240  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 241  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 242  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 243  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 244  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 245  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 246  casted_element -> type_cast_alg_exp
rule 247  casted_element -> MALLOC OPEN_PAR ari_exp CLOSE_PAR
rule 248  all_sizeof_type -> all_type_define
rule 249  all_sizeof_type -> INTDECLARATION MUL
rule 250  all_sizeof_type -> FLOATDECLARATION MUL
rule 251  all_sizeof_type -> CHARDECLARATION MUL
rule 252  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 253  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 254  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 255  all_sizeof_type -> STRUCT_TYPE MUL
rule 256  size_of -> SIZEOF OPEN_PAR ari_exp CLOSE_PAR
rule 257  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 258  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 259  size_of -> SIZEOF OPEN_PAR strliteral CLOSE_PAR
rule 260  String_Function -> String_Function_head
rule 261  String_Function -> String_Function_tail
rule 262  String_Function -> String_Function_cat
rule 263  String_Function -> String_Function_cpy
rule 264  String_Function -> String_Function_cmp
rule 265  String_Function -> String_Function_len
rule 266  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 267  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 268  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 269  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 270  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 271  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 272  str_func_parameter -> identifier
rule 273  str_func_parameter -> array
rule 274  str_func_parameter -> point_exp
rule 275  str_func_parameter -> strliteral
rule 276  str_func_parameter -> String_Function
rule 277  str_func_parameter -> struct_member_exp
rule 278  math_function -> ROUND ari_exp
rule 279  math_function -> CEIL ari_exp
rule 280  math_function -> FLOOR ari_exp
rule 281  math_function -> SIN ari_exp
rule 282  math_function -> COS ari_exp
rule 283  math_function -> TAN ari_exp
rule 284  math_function -> ASIN ari_exp
rule 285  math_function -> ACOS ari_exp
rule 286  math_function -> ATAN ari_exp
rule 287  math_function -> SINH ari_exp
rule 288  math_function -> COSH ari_exp
rule 289  math_function -> TANH ari_exp
rule 290  math_function -> EXP ari_exp
rule 291  math_function -> LOG ari_exp
rule 292  math_function -> LOG10 ari_exp
rule 293  math_function -> SQRT ari_exp
rule 294  math_function -> ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 295  math_function -> POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 296  math_function -> FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 297  math_function -> MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 298  math_function -> LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 299  math_function -> ABS ari_exp
rule 300  math_function -> FABS ari_exp
rule 301  math_function -> LABS ari_exp
rule 302  bool_exp -> prime_bool_exp
rule 303  bool_exp -> NEGATION bool_exp
rule 304  bool_exp -> bool_exp AND bool_exp
rule 305  bool_exp -> bool_exp OR bool_exp
rule 306  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 307  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 308  prime_bool_exp -> MY_TRUE
rule 309  prime_bool_exp -> MY_FALSE
rule 310  prime_bool_exp -> ari_exp
rule 311  prime_bool_exp -> ari_exp EQ strliteral
rule 312  prime_bool_exp -> ari_exp NE strliteral
rule 313  prime_bool_exp -> strliteral EQ ari_exp
rule 314  prime_bool_exp -> strliteral NE ari_exp
rule 315  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 316  prime_bool_exp -> ari_exp NE POINTERNULL
rule 317  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 318  prime_bool_exp -> POINTERNULL NE ari_exp
rule 319  prime_bool_exp -> ari_exp EQ charliteral
rule 320  prime_bool_exp -> ari_exp NE charliteral
rule 321  relation_operator -> GE
rule 322  relation_operator -> LE
rule 323  relation_operator -> NE
rule 324  relation_operator -> GT
rule 325  relation_operator -> LT
rule 326  relation_operator -> EQ
rule 327  sign_type_define -> UNSIGNED INTDECLARATION
rule 328  sign_type_define -> UNSIGNED CHARDECLARATION
rule 329  all_type_define -> sign_type_define
rule 330  all_type_define -> type_define
rule 331  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 332  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 333  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 334  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 335  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 336  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 337  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 338  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 339  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 340  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 341  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 342  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 343  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 344  option_function_parameter_list -> ID inner_option_define_identifier
rule 345  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 346  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 347  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 348  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 349  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 350  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 351  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 352  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 353  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 354  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 355  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 356  option_function_parameter_list ->		/* empty */
rule 357  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 358  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 359  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 360  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 361  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 362  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 363  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 364  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 365  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 366  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 367  inner_option_define_identifier ->		/* empty */
rule 368  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 369  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 370  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 371  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 372  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 373  inner_option_define_identifier -> COMMA error
rule 374  option_function_identifier -> ass_right inner_option_function_identifier
rule 375  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 376  option_function_identifier ->		/* empty */
rule 377  option_function_identifier -> ADDRESS error
rule 378  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 379  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 380  inner_option_function_identifier ->		/* empty */
rule 381  inner_option_function_identifier -> COMMA error
rule 382  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 383  statement_bpar -> error CLOSE_BPAR
rule 384  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 385  bool_par -> error CLOSE_PAR
rule 386  identifier -> ID
rule 387  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 388  strliteral -> STRLITERAL
rule 389  intliteral -> INTLITERAL
rule 390  charliteral -> CHARLITERAL
rule 391  floatliteral -> FLOATLITERAL
rule 392  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 393  option_frame_identifier ->		/* empty */
rule 394  option_frame_identifier -> COMMA error
rule 395  option_projection ->		/* empty */
rule 396  option_projection -> COMMA statement option_projection
rule 397  imply_pre -> prime_bool_exp
rule 398  imply_pre -> NEGATION imply_pre
rule 399  imply_pre -> imply_pre AND imply_pre
rule 400  imply_pre -> imply_pre OR imply_pre
rule 401  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 402  while_statement -> WHILE bool_par statement_bpar
rule 403  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 404  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 405  for_sta_init -> ass_statement
rule 406  for_sta_init -> declaration
rule 407  for_sta_init ->		/* empty */
rule 408  for_sta_condition -> bool_exp
rule 409  for_sta_condition ->		/* empty */
rule 410  for_sta_control -> ass_statement
rule 411  for_sta_control ->		/* empty */
rule 412  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 413  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par
rule 414  option_case_par -> BREAK case_par
rule 415  option_case_par -> case_par
rule 416  option_case_par ->		/* empty */
rule 417  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 418  option_else_statement -> ELSE statement_bpar
rule 419  option_else_statement ->		/* empty */
rule 420  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 421  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 422  option_output ->		/* empty */
rule 423  option_output -> COMMA ass_right option_output
rule 424  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 425  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 426  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 427  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 428  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 429  option_input ->		/* empty */
rule 430  option_input -> COMMA identifier option_input
rule 431  option_input -> COMMA array option_input
rule 432  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 433  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 434  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 435  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 436  struct_member_exp -> array DOT array option_struct_member_exp
rule 437  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 438  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 439  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 440  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 441  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 442  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 443  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 444  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 445  struct_member_exp -> identifier DOT function
rule 446  struct_member_exp -> identifier IMPLY function
rule 447  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 448  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 449  option_struct_member_exp ->		/* empty */
rule 450  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 451  option_struct_member_exp -> DOT array option_struct_member_exp
rule 452  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 453  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 454  option_struct_member_exp -> DOT function
rule 455  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 107 112 158 217 373 377 381 383 385 394
SWITCH (258) 412
CASE (259) 413
BREAK (260) 414
IF (261) 170 417
ELSE (262) 173 418
EMPTY (263) 18 46
AWAIT (264) 43
PROJECTION (265) 23 57 58
PBEGIN (266) 2
PEND (267) 2
POINTERNULL (268) 180 315 316 317 318
ARRAY (269) 101 102 336 340 347 348 351 362 363 364 365 370
STRUCT (270) 77 84 86 242 244 254
DOT (271) 432 433 434 435 436 437 445 450 451 454
UNION (272) 78 85 87
FOPEN (273) 113
FCLOSE (274) 119
FILEDECLARATION (275) 97
FGETS (276) 114
FPUTS (277) 116
FGETC (278) 115
FPUTC (279) 117 118
MORE (280) 19 47
DEFINE (281) 25 59
MY_TRUE (282) 15 308
MY_FALSE (283) 16 309
EXIST (284) 66
FRAME (285) 56
FOR (286) 403 404
WHILE (287) 402
DO (288) 403
TRUE (289) 51
FALSE (290) 52
REPEAT (291) 44
UNTIL (292) 44
DISPLAY (293) 420 421
SKIP (294) 14 45
THEN (295) 170 417
COMMA (296) 28 106 107 110 112 113 114 116 117 118 157 158 213 214
    215 217 268 269 270 294 295 296 297 298 350 357 358 359 360 361
    362 363 364 365 366 368 369 370 371 372 373 378 379 381 392 394
    396 404 423 430 431
COLON (297) 25 66 413
INTDECLARATION (298) 92 130 134 137 138 139 140 151 152 223 226 228
    230 231 236 237 249 252 327
STRDECLARATION (299) 95
POINTERDECLARATION (300)
CHARDECLARATION (301) 94 128 129 132 133 134 135 136 137 138 139 154
    155 225 227 229 233 234 239 240 251 253 328
VOIDDECLARATION (302) 96 235 241
FLOATDECLARATION (303) 93 131 153 224 232 238 250
LISTDECLARATION (304)
OPEN_PAR (305) 27 40 41 42 43 44 48 53 55 56 59 60 61 63 64 67 72 73
    88 89 90 91 113 114 115 116 117 118 119 125 128 129 130 131 132
    133 134 135 136 137 138 139 140 146 147 149 151 152 153 154 155
    156 163 164 165 166 186 206 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 247
    256 257 258 259 266 267 268 269 270 271 294 295 296 297 298 306
    355 366 375 379 384 387 401 404 412 413 420 421 424 425 426 427
    428 440 444 448
CLOSE_PAR (306) 27 40 41 42 43 44 48 53 55 56 59 60 61 63 64 67 72
    73 88 89 90 91 113 114 115 116 117 118 119 125 128 129 130 131
    132 133 134 135 136 137 138 139 140 146 147 149 151 152 153 154
    155 156 163 164 165 166 186 206 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
    247 256 257 258 259 266 267 268 269 270 271 294 295 296 297 298
    306 355 366 375 379 384 385 387 401 404 412 413 420 421 424 425
    426 427 428 440 444 448
TIMES (307) 403
OPEN_BPAR (308) 23 44 57 58 59 60 61 66 76 210 211 212 382 412
CLOSE_BPAR (309) 23 44 57 58 59 60 61 66 76 210 211 212 382 383 412
OPEN_MPAR (310) 55 90 91 99 103 104 109 110 128 129 130 131 132 133
    134 135 136 137 138 139 140 150 151 152 153 154 155 163 207 208
    209 349 350 351 368 369 370
CLOSE_MPAR (311) 55 90 91 99 103 104 109 110 128 129 130 131 132 133
    134 135 136 137 138 139 140 150 151 152 153 154 155 163 207 208
    209 349 350 351 368 369 370
FUNCTION (312) 60
OVER (313)
CYLINDER (314)
OVEREP (315)
INTER_OR (316) 199
NON_DETERMINED (317)
SEND (318)
RECEIVE (319)
PROCESS (320) 61
CHANNEL (321)
PUT (322)
GET (323)
ERROR_TOKEN (324)
STRFUNCHEAD (325) 266
STRFUNCTAIL (326) 267
STRFUNCCAT (327) 268
STRFUNCCMP (328) 269
STRFUNCCPY (329) 270
STRFUNCLEN (330) 271
SIZEOF (331) 256 257 258 259
SYSTEM (332) 64
CEIL (333) 279
FLOOR (334) 280
ROUND (335) 278
SIN (336) 281
COS (337) 282
TAN (338) 283
ASIN (339) 284
ACOS (340) 285
ATAN (341) 286
SINH (342) 287
COSH (343) 288
TANH (344) 289
EXP (345) 290
LOG (346) 291
LOG10 (347) 292
SQRT (348) 293
ATAN2 (349) 294
POW (350) 295
ABS (351) 299
FABS (352) 300
LABS (353) 301
FMOD (354) 296
MODF (355) 297
LDEXP (356) 298
FREXP (357)
UNSIGNED (358) 80 129 133 135 136 137 139 152 155 228 229 231 234 237
    240 252 253 327 328
SIGNED (359) 79 226 227
MALLOC (360) 247
FREE (361) 63
CHOP (362) 8 32
IMPLY (363) 55 438 439 440 441 442 443 444 446 447 452 453 455
IFF (364) 6
PROPIMPLY (365) 7
OR (366) 5 31 305 400
PARALLEL (367) 54
AND (368) 4 30 56 69 304 399
ASS_P (369) 59 61 91 100 101 102 103 104 141
ASS_N (370) 142
CON (371) 200 203
ADDRESS (372) 198 218 219 220 221 377
NE (373) 312 314 316 318 320 323
EQ (374) 311 313 315 317 319 326
GE (375) 321
LE (376) 322
GT (377) 324
LT (378) 325
LST (379) 196
RST (380) 197
ADD (381) 201
SUB (382) 178 202
MUL (383) 88 89 90 91 105 128 129 130 131 132 133 134 135 136 137 138
    139 140 149 151 152 153 154 155 160 161 162 164 165 193 230 231
    232 233 234 235 236 237 238 239 240 241 242 243 244 245 249 250
    251 252 253 254 255 334 335 338 339 342 343 345 346 348 352 353
    354 355 361 365 366 371 372
DIV (384) 194
MOD (385) 195
BNE (386) 179
CHOPSTAR (387) 26
NEXT (388) 13 40 126
NEGATION (389) 22 303 398
LENGTH (390) 17 48
REQUEST (391) 424 425 426 427 428
FINAL (392) 21 53
KEEP (393) 10 41
ALWAYS (394) 9 42
HALT (395) 20
W_NEXT (396) 12
PREFIX (397)
SOMETIMES (398) 11
ID (399) 24 25 59 60 61 72 77 78 84 85 90 91 99 101 102 103 104 109
    110 150 151 152 153 154 155 337 338 339 340 344 345 346 359 362
    375 379 386
STRLITERAL (400) 388
STRUCT_TYPE (401) 83 86 87 242 243 244 245 254 255 258 333 334 335
    336 341 342 343 360 361 363
INTLITERAL (402) 128 129 130 131 132 133 134 135 136 137 138 139 140
    389
FLOATLITERAL (403) 391
CHARLITERAL (404) 390

Nonterminals, with rules where they appear

program (150)
    on left: 1
gComplexProposition (151)
    on left: 2 3, on right: 1
complexProposition (152)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (153)
    on left: 28 29, on right: 23 28
statement (154)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 60 66 67 70
    382 396 413
option_struct_declaration (155)
    on left: 68 69, on right: 69 76
empty_statement (156)
    on left: 70 71, on right: 59 61
function (157)
    on left: 72 73 74 75, on right: 65 146 185 445 446 454 455
struct_define_statement (158)
    on left: 76, on right: 62
struct_identifier (159)
    on left: 77 78, on right: 76
sign_declaration (160)
    on left: 79 80 81, on right: 34 68 69
declaration (161)
    on left: 82 83 84 85 86 87 88 89 90 91, on right: 79 80 81 406
type_define (162)
    on left: 92 93 94 95 96 97, on right: 82 146 330
option_identifier_array_declaration (163)
    on left: 98 99 100 101 102 103 104 105, on right: 82 83 84 85 86
    87 105 106
inner_option_identifier_array_declaration (164)
    on left: 106 107 108, on right: 98 99 100 101 102 103 104
file_statement (165)
    on left: 113 114 115 116 117 118 119, on right: 74
ass_statement (166)
    on left: 120, on right: 33 405 410
ass_left (167)
    on left: 121 122 123 124 125 126 127, on right: 113 120 125 126
leftaddrshift (168)
    on left: 128 129 130 131 132 133 134 135 136 137 138 139 140,
    on right: 127 149
assign_operator (169)
    on left: 141 142, on right: 120
ass_right (170)
    on left: 143 144 145 146 147 148, on right: 100 120 147 374 378
    420 421 423
rightaddrshift (171)
    on left: 149, on right: 148
array (172)
    on left: 150 151 152 153 154 155 156, on right: 73 118 123 156
    162 183 219 273 426 427 431 433 435 436 437 439 442 443 444 447
    451 453
option_ari_exp (173)
    on left: 157 158 159, on right: 90 91 99 103 104 109 110 128 129
    130 131 132 133 134 135 136 137 138 139 140 150 151 152 153 154
    155 157 163
point_exp (174)
    on left: 160 161 162 163 164 165 166, on right: 124 161 163 166
    184 274 434 437 441 447
ari_exp (175)
    on left: 167 168 169 170, on right: 17 48 90 91 99 103 104 109
    110 128 129 130 131 132 133 134 135 136 137 138 139 140 143 150
    151 152 153 154 155 157 163 164 165 168 169 170 173 186 207 210
    213 247 256 278 279 280 281 282 283 284 285 286 287 288 289 290
    291 292 293 294 295 296 297 298 299 300 301 307 310 311 312 313
    314 315 316 317 318 319 320 349 350 351 368 369 370 403
type_cast_alg_exp (176)
    on left: 171 172, on right: 223 224 225 226 227 228 229 246
option_exp_else_statement (177)
    on left: 173 174, on right: 170
simple_ari_exp (178)
    on left: 175 176, on right: 167 168 169 171 172 176
member_in_exp (179)
    on left: 177 178 179 180 181 182 183 184 185 186 187 188 189 190
    191 192, on right: 175 176 178 179 412 413
bi_operator (180)
    on left: 193 194 195 196 197 198 199 200, on right: 169 176
ari_operator (181)
    on left: 201 202, on right: 172
array_exp (182)
    on left: 203 204 205 206, on right: 91 101 103 144 203 206 209
    212 215
option_list_value (183)
    on left: 207 208 209, on right: 204
option_struct_list_value (184)
    on left: 210 211 212, on right: 205
inner_option_list_value (185)
    on left: 213 214 215 216 217, on right: 207 208 209 210 211 212
    213 214 215
address_exp (186)
    on left: 218 219 220 221 222, on right: 189 221 222 440 444
type_cast (187)
    on left: 223 224 225 226 227 228 229 230 231 232 233 234 235 236
    237 238 239 240 241 242 243 244 245, on right: 190
casted_element (188)
    on left: 246 247, on right: 230 231 232 233 234 235 236 237 238
    239 240 241 242 243 244 245
all_sizeof_type (189)
    on left: 248 249 250 251 252 253 254 255, on right: 257
size_of (190)
    on left: 256 257 258 259, on right: 192
String_Function (191)
    on left: 260 261 262 263 264 265, on right: 75 276
String_Function_head (192)
    on left: 266, on right: 260
String_Function_tail (193)
    on left: 267, on right: 261
String_Function_cat (194)
    on left: 268, on right: 262
String_Function_cmp (195)
    on left: 269, on right: 264
String_Function_cpy (196)
    on left: 270, on right: 263
String_Function_len (197)
    on left: 271, on right: 265
str_func_parameter (198)
    on left: 272 273 274 275 276 277, on right: 64 266 267 268 269
    270 271
math_function (199)
    on left: 278 279 280 281 282 283 284 285 286 287 288 289 290 291
    292 293 294 295 296 297 298 299 300 301, on right: 187
bool_exp (200)
    on left: 302 303 304 305 306, on right: 43 44 170 303 304 305 306
    384 408 417
prime_bool_exp (201)
    on left: 307 308 309 310 311 312 313 314 315 316 317 318 319 320
   , on right: 25 302 397
relation_operator (202)
    on left: 321 322 323 324 325 326, on right: 168 307
sign_type_define (203)
    on left: 327 328, on right: 329
all_type_define (204)
    on left: 329 330, on right: 164 248 331 332 347 348 349 350 351
    352 353 354 357 358 364 365 368 369 370 371 372
option_function_parameter_list (205)
    on left: 331 332 333 334 335 336 337 338 339 340 341 342 343 344
    345 346 347 348 349 350 351 352 353 354 355 356,
    on right: 59 60 61 88 89 90 91 146 355 366
inner_option_define_identifier (206)
    on left: 357 358 359 360 361 362 363 364 365 366 367 368 369 370
    371 372 373, on right: 66 331 332 333 334 335 336 337 338 339 340
    341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 357
    358 359 360 361 362 363 364 365 366 368 369 370 371 372
option_function_identifier (207)
    on left: 374 375 376 377, on right: 72 73 375 379
inner_option_function_identifier (208)
    on left: 378 379 380 381, on right: 374 375 378 379
statement_bpar (209)
    on left: 382 383, on right: 57 58 402 403 404 417 418
bool_par (210)
    on left: 384 385, on right: 402
identifier (211)
    on left: 386 387, on right: 56 63 66 88 89 98 100 114 115 116 117
    118 119 121 160 182 218 272 331 333 334 335 336 337 338 339 340
    347 348 349 350 351 352 354 355 357 359 360 361 362 363 364 365
    366 368 369 370 371 387 392 424 425 430 432 433 434 435 438 439
    440 441 442 445 446 450 452
strliteral (212)
    on left: 388, on right: 102 104 113 145 146 208 211 214 259 275
    311 312 313 314
intliteral (213)
    on left: 389, on right: 114 177
charliteral (214)
    on left: 390, on right: 188 319 320
floatliteral (215)
    on left: 391, on right: 181
option_frame_identifier (216)
    on left: 392 393 394, on right: 56 392
option_projection (217)
    on left: 395 396, on right: 57 396
imply_pre (218)
    on left: 397 398 399 400 401, on right: 55 398 399 400 401
while_statement (219)
    on left: 402, on right: 37
for_statement (220)
    on left: 403, on right: 38
extend_for_statement (221)
    on left: 404, on right: 39
for_sta_init (222)
    on left: 405 406 407, on right: 404
for_sta_condition (223)
    on left: 408 409, on right: 404
for_sta_control (224)
    on left: 410 411, on right: 404
switch_statement (225)
    on left: 412, on right: 35
case_par (226)
    on left: 413, on right: 412 414 415
option_case_par (227)
    on left: 414 415 416, on right: 413
if_statement (228)
    on left: 417, on right: 36
option_else_statement (229)
    on left: 418 419, on right: 417
output_statement (230)
    on left: 420 421, on right: 50
option_output (231)
    on left: 422 423, on right: 421 423
input_statement (232)
    on left: 424 425 426 427 428, on right: 49
option_input (233)
    on left: 429 430 431, on right: 425 427 430 431
struct_member_exp (234)
    on left: 432 433 434 435 436 437 438 439 440 441 442 443 444 445
    446 447 448, on right: 122 191 220 277 428 448
option_struct_member_exp (235)
    on left: 449 450 451 452 453 454 455, on right: 432 433 434 435
    436 437 438 439 440 441 442 443 444 447 450 451 452 453


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1370
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 74
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 103



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 104



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 105



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 106



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 107



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 145
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 157



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 158



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 159



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 160



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 161



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 162



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 163
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    OPEN_PAR	shift, and go to state 170



state 23

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 417)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 178
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 24

    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)



state 25

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 181



state 26

    struct_identifier  ->  STRUCT . ID   (rule 77)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)

    ID  	shift, and go to state 182
    STRUCT_TYPE	shift, and go to state 183



state 27

    struct_identifier  ->  UNION . ID   (rule 78)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 184
    STRUCT_TYPE	shift, and go to state 185



state 28

    file_statement  ->  FOPEN . OPEN_PAR ass_left COMMA strliteral CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 186



state 29

    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 187



state 30

    type_define  ->  FILEDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)



state 31

    file_statement  ->  FGETS . OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 188



state 32

    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 189



state 33

    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 190



state 34

    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 117)
    file_statement  ->  FPUTC . OPEN_PAR array COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 191



state 35

    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)



state 36

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 192



state 37

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 195



state 38

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 196



state 39

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 403)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 197
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 198
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 40

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 402)

    error	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200

    bool_par	go to state 201



state 41

    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 42

    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 43

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 202



state 44

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 420)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 421)

    OPEN_PAR	shift, and go to state 203



state 45

    statement  ->  SKIP .   (rule 45)

    $default	reduce using rule 45 (statement)



state 46

    type_define  ->  INTDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 47

    type_define  ->  STRDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 48

    type_define  ->  CHARDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 49

    type_define  ->  VOIDDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)



state 50

    type_define  ->  FLOATDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 51

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 204
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 205
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    SYSTEM	shift, and go to state 61
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 207
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    statement	go to state 208
    function	go to state 209
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 213
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 215
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 216
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 217



state 52

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 218
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 53

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 219



state 54

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ID  	shift, and go to state 220



state 55

    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 266)

    OPEN_PAR	shift, and go to state 221



state 56

    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 267)

    OPEN_PAR	shift, and go to state 222



state 57

    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 223



state 58

    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 224



state 59

    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 225



state 60

    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 226



state 61

    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 64)

    OPEN_PAR	shift, and go to state 227



state 62

    sign_declaration  ->  UNSIGNED . declaration   (rule 80)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 231
    type_define	go to state 80



state 63

    sign_declaration  ->  SIGNED . declaration   (rule 79)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 232
    type_define	go to state 80



state 64

    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 233



state 65

    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 234
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 238



state 66

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 126)

    OPEN_PAR	shift, and go to state 239
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 241
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    struct_member_exp	go to state 102



state 67

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 243



state 68

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 424)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 244



state 69

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 245



state 70

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 246



state 71

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 247



state 72

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)



state 73

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 252
    identifier	go to state 253



state 74

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 1 (program)



state 75

    statement  ->  function .   (rule 65)

    $default	reduce using rule 65 (statement)



state 76

    statement  ->  struct_define_statement .   (rule 62)

    $default	reduce using rule 62 (statement)



state 77

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 76)

    OPEN_BPAR	shift, and go to state 258



state 78

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 79

    sign_declaration  ->  declaration .   (rule 81)

    $default	reduce using rule 81 (sign_declaration)



state 80

    declaration  ->  type_define . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 259
    identifier	go to state 253



state 81

    function  ->  file_statement .   (rule 74)

    $default	reduce using rule 74 (function)



state 82

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 83

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 120)

    ASS_P	shift, and go to state 260
    ASS_N	shift, and go to state 261

    assign_operator	go to state 262



state 84

    ass_left  ->  leftaddrshift .   (rule 127)

    $default	reduce using rule 127 (ass_left)



state 85

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 123)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 265

    $default	reduce using rule 123 (ass_left)



state 86

    ass_left  ->  point_exp .   (rule 124)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267

    $default	reduce using rule 124 (ass_left)



state 87

    function  ->  String_Function .   (rule 75)

    $default	reduce using rule 75 (function)



state 88

    String_Function  ->  String_Function_head .   (rule 260)

    $default	reduce using rule 260 (String_Function)



state 89

    String_Function  ->  String_Function_tail .   (rule 261)

    $default	reduce using rule 261 (String_Function)



state 90

    String_Function  ->  String_Function_cat .   (rule 262)

    $default	reduce using rule 262 (String_Function)



state 91

    String_Function  ->  String_Function_cmp .   (rule 264)

    $default	reduce using rule 264 (String_Function)



state 92

    String_Function  ->  String_Function_cpy .   (rule 263)

    $default	reduce using rule 263 (String_Function)



state 93

    String_Function  ->  String_Function_len .   (rule 265)

    $default	reduce using rule 265 (String_Function)



state 94

    ass_left  ->  identifier .   (rule 121)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    $default	reduce using rule 121 (ass_left)



state 95

    statement  ->  while_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 96

    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 97

    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 98

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 99

    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 100

    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 101

    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 102

    ass_left  ->  struct_member_exp .   (rule 122)

    $default	reduce using rule 122 (ass_left)



state 103

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 270



state 104

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 271
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169



state 105

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 272
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 273



state 106

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 107

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 108

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 170)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 274
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 109

    member_in_exp  ->  POINTERNULL .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 110

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 111

    size_of  ->  SIZEOF . OPEN_PAR ari_exp CLOSE_PAR   (rule 256)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 257)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF . OPEN_PAR strliteral CLOSE_PAR   (rule 259)

    OPEN_PAR	shift, and go to state 290



state 112

    math_function  ->  CEIL . ari_exp   (rule 279)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 291
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 113

    math_function  ->  FLOOR . ari_exp   (rule 280)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 292
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 114

    math_function  ->  ROUND . ari_exp   (rule 278)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 293
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 115

    math_function  ->  SIN . ari_exp   (rule 281)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 294
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 116

    math_function  ->  COS . ari_exp   (rule 282)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 295
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 117

    math_function  ->  TAN . ari_exp   (rule 283)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 296
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 118

    math_function  ->  ASIN . ari_exp   (rule 284)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 297
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 119

    math_function  ->  ACOS . ari_exp   (rule 285)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 298
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 120

    math_function  ->  ATAN . ari_exp   (rule 286)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 299
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 121

    math_function  ->  SINH . ari_exp   (rule 287)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 300
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 122

    math_function  ->  COSH . ari_exp   (rule 288)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 301
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 123

    math_function  ->  TANH . ari_exp   (rule 289)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 302
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 124

    math_function  ->  EXP . ari_exp   (rule 290)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 303
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 125

    math_function  ->  LOG . ari_exp   (rule 291)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 304
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 126

    math_function  ->  LOG10 . ari_exp   (rule 292)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 305
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 127

    math_function  ->  SQRT . ari_exp   (rule 293)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 306
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 128

    math_function  ->  ATAN2 . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 294)

    OPEN_PAR	shift, and go to state 307



state 129

    math_function  ->  POW . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 295)

    OPEN_PAR	shift, and go to state 308



state 130

    math_function  ->  ABS . ari_exp   (rule 299)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 309
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 131

    math_function  ->  FABS . ari_exp   (rule 300)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 310
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 132

    math_function  ->  LABS . ari_exp   (rule 301)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 311
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 133

    math_function  ->  FMOD . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    OPEN_PAR	shift, and go to state 312



state 134

    math_function  ->  MODF . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    OPEN_PAR	shift, and go to state 313



state 135

    math_function  ->  LDEXP . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    OPEN_PAR	shift, and go to state 314



state 136

    address_exp  ->  ADDRESS . identifier   (rule 218)
    address_exp  ->  ADDRESS . array   (rule 219)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 220)
    address_exp  ->  ADDRESS . address_exp   (rule 221)

    OPEN_PAR	shift, and go to state 315
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 316
    point_exp	go to state 317
    address_exp	go to state 318
    identifier	go to state 319
    struct_member_exp	go to state 320



state 137

    member_in_exp  ->  SUB . member_in_exp   (rule 178)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 321
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 138

    member_in_exp  ->  BNE . member_in_exp   (rule 179)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 322
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 139

    intliteral  ->  INTLITERAL .   (rule 389)

    $default	reduce using rule 389 (intliteral)



state 140

    floatliteral  ->  FLOATLITERAL .   (rule 391)

    $default	reduce using rule 391 (floatliteral)



state 141

    charliteral  ->  CHARLITERAL .   (rule 390)

    $default	reduce using rule 390 (charliteral)



state 142

    member_in_exp  ->  function .   (rule 185)

    $default	reduce using rule 185 (member_in_exp)



state 143

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    member_in_exp  ->  array .   (rule 183)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 265

    DOT 	[reduce using rule 183 (member_in_exp)]
    IMPLY	[reduce using rule 183 (member_in_exp)]
    $default	reduce using rule 183 (member_in_exp)



state 144

    member_in_exp  ->  point_exp .   (rule 184)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267

    DOT 	[reduce using rule 184 (member_in_exp)]
    IMPLY	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 145

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 17 (complexProposition)

    bi_operator	go to state 331



state 146

    ari_exp  ->  simple_ari_exp .   (rule 167)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    NE  	shift, and go to state 332
    EQ  	shift, and go to state 333
    GE  	shift, and go to state 334
    LE  	shift, and go to state 335
    GT  	shift, and go to state 336
    LT  	shift, and go to state 337
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 167 (ari_exp)]
    CON 	[reduce using rule 167 (ari_exp)]
    ADDRESS	[reduce using rule 167 (ari_exp)]
    NE  	[reduce using rule 167 (ari_exp)]
    EQ  	[reduce using rule 167 (ari_exp)]
    GE  	[reduce using rule 167 (ari_exp)]
    LE  	[reduce using rule 167 (ari_exp)]
    GT  	[reduce using rule 167 (ari_exp)]
    LT  	[reduce using rule 167 (ari_exp)]
    LST 	[reduce using rule 167 (ari_exp)]
    RST 	[reduce using rule 167 (ari_exp)]
    MUL 	[reduce using rule 167 (ari_exp)]
    DIV 	[reduce using rule 167 (ari_exp)]
    MOD 	[reduce using rule 167 (ari_exp)]
    $default	reduce using rule 167 (ari_exp)

    bi_operator	go to state 338
    relation_operator	go to state 339



state 147

    simple_ari_exp  ->  member_in_exp .   (rule 175)

    $default	reduce using rule 175 (simple_ari_exp)



state 148

    member_in_exp  ->  address_exp .   (rule 189)

    $default	reduce using rule 189 (member_in_exp)



state 149

    member_in_exp  ->  type_cast .   (rule 190)

    $default	reduce using rule 190 (member_in_exp)



state 150

    member_in_exp  ->  size_of .   (rule 192)

    $default	reduce using rule 192 (member_in_exp)



state 151

    member_in_exp  ->  math_function .   (rule 187)

    $default	reduce using rule 187 (member_in_exp)



state 152

    member_in_exp  ->  identifier .   (rule 182)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    DOT 	[reduce using rule 182 (member_in_exp)]
    IMPLY	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



state 153

    member_in_exp  ->  intliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 154

    member_in_exp  ->  charliteral .   (rule 188)

    $default	reduce using rule 188 (member_in_exp)



state 155

    member_in_exp  ->  floatliteral .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 156

    member_in_exp  ->  struct_member_exp .   (rule 191)

    $default	reduce using rule 191 (member_in_exp)



state 157

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 158

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 159

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 160

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 161

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 162

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 163

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 164

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 340



state 165

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 341



state 166

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 342



state 167

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 343



state 168

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 344



state 169

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 170

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 345
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 171

    member_in_exp  ->  POINTERNULL .   (rule 180)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 317)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 318)

    NE  	shift, and go to state 346
    EQ  	shift, and go to state 347

    NE  	[reduce using rule 180 (member_in_exp)]
    EQ  	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 172

    prime_bool_exp  ->  MY_TRUE .   (rule 308)

    $default	reduce using rule 308 (prime_bool_exp)



state 173

    prime_bool_exp  ->  MY_FALSE .   (rule 309)

    $default	reduce using rule 309 (prime_bool_exp)



state 174

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 306)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 348
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 350
    prime_bool_exp	go to state 179
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 175

    bool_exp  ->  NEGATION . bool_exp   (rule 303)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 351
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 176

    strliteral  ->  STRLITERAL .   (rule 388)

    $default	reduce using rule 388 (strliteral)



state 177

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 307)
    prime_bool_exp  ->  ari_exp .   (rule 310)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 311)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 315)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 319)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 320)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    NE  	shift, and go to state 352
    EQ  	shift, and go to state 353
    GE  	shift, and go to state 334
    LE  	shift, and go to state 335
    GT  	shift, and go to state 336
    LT  	shift, and go to state 337
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 310 (prime_bool_exp)

    bi_operator	go to state 331
    relation_operator	go to state 354



state 178

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 417)

    THEN	shift, and go to state 355
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 179

    bool_exp  ->  prime_bool_exp .   (rule 302)

    $default	reduce using rule 302 (bool_exp)



state 180

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 313)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 314)

    NE  	shift, and go to state 358
    EQ  	shift, and go to state 359



state 181

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 360
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 182

    struct_identifier  ->  STRUCT ID .   (rule 77)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    $default	reduce using rule 77 (struct_identifier)

    option_identifier_array_declaration	go to state 361
    identifier	go to state 253



state 183

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 362
    identifier	go to state 253



state 184

    struct_identifier  ->  UNION ID .   (rule 78)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    $default	reduce using rule 78 (struct_identifier)

    option_identifier_array_declaration	go to state 363
    identifier	go to state 253



state 185

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 364
    identifier	go to state 253



state 186

    file_statement  ->  FOPEN OPEN_PAR . ass_left COMMA strliteral CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 366
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    struct_member_exp	go to state 102



state 187

    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 367



state 188

    file_statement  ->  FGETS OPEN_PAR . identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 368



state 189

    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 369



state 190

    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 370



state 191

    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 117)
    file_statement  ->  FPUTC OPEN_PAR . array COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 372
    identifier	go to state 373



state 192

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 374



state 193

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 375



state 194

    identifier  ->  ID .   (rule 386)

    $default	reduce using rule 386 (identifier)



state 195

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 377



state 196

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 378



state 197

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 379
    UNION	shift, and go to state 229
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 380
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 381
    VOIDDECLARATION	shift, and go to state 382
    FLOATDECLARATION	shift, and go to state 383
    OPEN_PAR	shift, and go to state 384
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 385
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 407 (for_sta_init)

    function	go to state 142
    declaration	go to state 386
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 387
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 215
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    for_sta_init	go to state 388
    struct_member_exp	go to state 217



state 198

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 403)

    TIMES	shift, and go to state 389
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 199

    bool_par  ->  error . CLOSE_PAR   (rule 385)

    CLOSE_PAR	shift, and go to state 390



state 200

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 384)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 391
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 201

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 402)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 394



state 202

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 395
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 203

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 420)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 421)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 400
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 204

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 170)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 417)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 407
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 205

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 401)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 204
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 408
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 409
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 382
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 205
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    SYSTEM	shift, and go to state 61
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 413
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 207
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 385
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    statement	go to state 208
    function	go to state 209
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 215
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 414
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 217



state 206

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 234
    MUL 	shift, and go to state 415
    ID  	shift, and go to state 416

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 417



state 207

    imply_pre  ->  NEGATION . imply_pre   (rule 398)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 418
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 419
    struct_member_exp	go to state 156



state 208

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 67)

    CLOSE_PAR	shift, and go to state 420
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 209

    statement  ->  function .   (rule 65)
    member_in_exp  ->  function .   (rule 185)

    CLOSE_PAR	reduce using rule 65 (statement)
    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    CHOP	reduce using rule 65 (statement)
    OR  	reduce using rule 65 (statement)
    OR  	[reduce using rule 185 (member_in_exp)]
    PARALLEL	reduce using rule 65 (statement)
    AND 	reduce using rule 65 (statement)
    AND 	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)



state 210

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 120)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 125)

    CLOSE_PAR	shift, and go to state 421
    ASS_P	shift, and go to state 260
    ASS_N	shift, and go to state 261

    assign_operator	go to state 262



state 211

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 123)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    member_in_exp  ->  array .   (rule 183)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    CLOSE_PAR	[reduce using rule 183 (member_in_exp)]
    ASS_P	reduce using rule 123 (ass_left)
    ASS_N	reduce using rule 123 (ass_left)
    $default	reduce using rule 183 (member_in_exp)



state 212

    ass_left  ->  point_exp .   (rule 124)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    member_in_exp  ->  point_exp .   (rule 184)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    ASS_P	reduce using rule 124 (ass_left)
    ASS_N	reduce using rule 124 (ass_left)
    $default	reduce using rule 184 (member_in_exp)



state 213

    member_in_exp  ->  address_exp .   (rule 189)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 424

    CLOSE_PAR	[reduce using rule 189 (member_in_exp)]
    $default	reduce using rule 189 (member_in_exp)



state 214

    imply_pre  ->  prime_bool_exp .   (rule 397)

    $default	reduce using rule 397 (imply_pre)



state 215

    ass_left  ->  identifier .   (rule 121)
    member_in_exp  ->  identifier .   (rule 182)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 121 (ass_left)]
    CLOSE_PAR	[reduce using rule 182 (member_in_exp)]
    ASS_P	reduce using rule 121 (ass_left)
    ASS_N	reduce using rule 121 (ass_left)
    $default	reduce using rule 182 (member_in_exp)



state 216

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)

    CLOSE_PAR	shift, and go to state 426
    OR  	shift, and go to state 427
    AND 	shift, and go to state 428



state 217

    ass_left  ->  struct_member_exp .   (rule 122)
    member_in_exp  ->  struct_member_exp .   (rule 191)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429

    CLOSE_PAR	[reduce using rule 122 (ass_left)]
    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    ASS_P	reduce using rule 122 (ass_left)
    ASS_N	reduce using rule 122 (ass_left)
    $default	reduce using rule 191 (member_in_exp)



state 218

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    COMMA	shift, and go to state 430
    CLOSE_BPAR	shift, and go to state 431
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    CLOSE_BPAR	[reduce using rule 395 (option_projection)]
    $default	reduce using rule 395 (option_projection)

    option_projection	go to state 432



state 219

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 433



state 220

    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_PAR	shift, and go to state 434



state 221

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 266)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 439
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 222

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 267)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 443
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 223

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 444
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 224

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 445
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 225

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 446
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 226

    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 447
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 227

    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 64)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 448
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 228

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)

    ID  	shift, and go to state 449
    STRUCT_TYPE	shift, and go to state 183



state 229

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 185



state 230

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    MUL 	shift, and go to state 451



state 231

    sign_declaration  ->  UNSIGNED declaration .   (rule 80)

    $default	reduce using rule 80 (sign_declaration)



state 232

    sign_declaration  ->  SIGNED declaration .   (rule 79)

    $default	reduce using rule 79 (sign_declaration)



state 233

    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 452



state 234

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 453
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    type_define	go to state 454
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 455
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    sign_type_define	go to state 456
    all_type_define	go to state 457
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 235

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 386)

    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)



state 236

    point_exp  ->  MUL array .   (rule 162)

    $default	reduce using rule 162 (point_exp)



state 237

    point_exp  ->  MUL point_exp .   (rule 161)

    $default	reduce using rule 161 (point_exp)



state 238

    point_exp  ->  MUL identifier .   (rule 160)

    $default	reduce using rule 160 (point_exp)



state 239

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 458
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 459
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 460
    point_exp	go to state 461
    address_exp	go to state 462
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 463
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 464



state 240

    ass_left  ->  NEXT . ass_left   (rule 126)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 241
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    struct_member_exp	go to state 102



state 241

    ass_left  ->  NEXT ass_left .   (rule 126)

    $default	reduce using rule 126 (ass_left)



state 242

    ass_left  ->  array .   (rule 123)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    IMPLY	shift, and go to state 265

    $default	reduce using rule 123 (ass_left)



state 243

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 465
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 244

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 424)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 435
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 466
    point_exp	go to state 317
    identifier	go to state 467
    struct_member_exp	go to state 468



state 245

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 469
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 246

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 470
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 247

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 471
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 248

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 475
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 249

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 476
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 250

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253



state 251

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)
    identifier  ->  ID .   (rule 386)

    ARRAY	shift, and go to state 478
    OPEN_MPAR	shift, and go to state 479

    $default	reduce using rule 386 (identifier)



state 252

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 253

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 480
    ASS_P	shift, and go to state 481

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 482



state 254

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 483
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 255

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 484
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 256

    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 485
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 257

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 486
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 258

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 76)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 487
    sign_declaration	go to state 488
    declaration	go to state 79
    type_define	go to state 80



state 259

    declaration  ->  type_define option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 260

    assign_operator  ->  ASS_P .   (rule 141)

    $default	reduce using rule 141 (assign_operator)



state 261

    assign_operator  ->  ASS_N .   (rule 142)

    $default	reduce using rule 142 (assign_operator)



state 262

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 120)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 489
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 263

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 436)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 490
    identifier	go to state 491



state 264

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 492
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 265

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 443)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 493
    identifier	go to state 494



state 266

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 437)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 495
    identifier	go to state 496



state 267

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 447)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 497
    identifier	go to state 498



state 268

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier DOT . function   (rule 445)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 499
    file_statement	go to state 81
    array	go to state 500
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 501



state 269

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier IMPLY . function   (rule 446)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 502
    file_statement	go to state 81
    array	go to state 503
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 504



state 270

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 505
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 271

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 272

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 506



state 273

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 507



state 274

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 170)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)

    THEN	shift, and go to state 508
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 275

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)

    STRUCT_TYPE	shift, and go to state 509



state 276

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 511



state 277

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 513



state 278

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    MUL 	shift, and go to state 514



state 279

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 516



state 280

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 281

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 521
    CHARDECLARATION	shift, and go to state 522



state 282

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)

    INTDECLARATION	shift, and go to state 523
    CHARDECLARATION	shift, and go to state 524



state 283

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 245)

    MUL 	shift, and go to state 525



state 284

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    member_in_exp  ->  array .   (rule 183)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 183 (member_in_exp)]
    $default	reduce using rule 183 (member_in_exp)



state 285

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    member_in_exp  ->  point_exp .   (rule 184)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 286

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 186)

    CLOSE_PAR	shift, and go to state 526
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 287

    member_in_exp  ->  address_exp .   (rule 189)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 222)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 527

    CLOSE_PAR	[reduce using rule 189 (member_in_exp)]
    $default	reduce using rule 189 (member_in_exp)



state 288

    member_in_exp  ->  identifier .   (rule 182)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



state 289

    member_in_exp  ->  struct_member_exp .   (rule 191)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429

    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    $default	reduce using rule 191 (member_in_exp)



state 290

    size_of  ->  SIZEOF OPEN_PAR . ari_exp CLOSE_PAR   (rule 256)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 257)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF OPEN_PAR . strliteral CLOSE_PAR   (rule 259)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 528
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 529
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 530
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 531
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 532
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 533
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    type_define	go to state 454
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 534
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    all_sizeof_type	go to state 535
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    sign_type_define	go to state 456
    all_type_define	go to state 536
    identifier	go to state 152
    strliteral	go to state 537
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 291

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  CEIL ari_exp .   (rule 279)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 279 (math_function)]
    CON 	[reduce using rule 279 (math_function)]
    ADDRESS	[reduce using rule 279 (math_function)]
    LST 	[reduce using rule 279 (math_function)]
    RST 	[reduce using rule 279 (math_function)]
    MUL 	[reduce using rule 279 (math_function)]
    DIV 	[reduce using rule 279 (math_function)]
    MOD 	[reduce using rule 279 (math_function)]
    $default	reduce using rule 279 (math_function)

    bi_operator	go to state 331



state 292

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FLOOR ari_exp .   (rule 280)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 280 (math_function)]
    CON 	[reduce using rule 280 (math_function)]
    ADDRESS	[reduce using rule 280 (math_function)]
    LST 	[reduce using rule 280 (math_function)]
    RST 	[reduce using rule 280 (math_function)]
    MUL 	[reduce using rule 280 (math_function)]
    DIV 	[reduce using rule 280 (math_function)]
    MOD 	[reduce using rule 280 (math_function)]
    $default	reduce using rule 280 (math_function)

    bi_operator	go to state 331



state 293

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ROUND ari_exp .   (rule 278)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 278 (math_function)]
    CON 	[reduce using rule 278 (math_function)]
    ADDRESS	[reduce using rule 278 (math_function)]
    LST 	[reduce using rule 278 (math_function)]
    RST 	[reduce using rule 278 (math_function)]
    MUL 	[reduce using rule 278 (math_function)]
    DIV 	[reduce using rule 278 (math_function)]
    MOD 	[reduce using rule 278 (math_function)]
    $default	reduce using rule 278 (math_function)

    bi_operator	go to state 331



state 294

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  SIN ari_exp .   (rule 281)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 281 (math_function)]
    CON 	[reduce using rule 281 (math_function)]
    ADDRESS	[reduce using rule 281 (math_function)]
    LST 	[reduce using rule 281 (math_function)]
    RST 	[reduce using rule 281 (math_function)]
    MUL 	[reduce using rule 281 (math_function)]
    DIV 	[reduce using rule 281 (math_function)]
    MOD 	[reduce using rule 281 (math_function)]
    $default	reduce using rule 281 (math_function)

    bi_operator	go to state 331



state 295

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  COS ari_exp .   (rule 282)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 282 (math_function)]
    CON 	[reduce using rule 282 (math_function)]
    ADDRESS	[reduce using rule 282 (math_function)]
    LST 	[reduce using rule 282 (math_function)]
    RST 	[reduce using rule 282 (math_function)]
    MUL 	[reduce using rule 282 (math_function)]
    DIV 	[reduce using rule 282 (math_function)]
    MOD 	[reduce using rule 282 (math_function)]
    $default	reduce using rule 282 (math_function)

    bi_operator	go to state 331



state 296

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  TAN ari_exp .   (rule 283)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 283 (math_function)]
    CON 	[reduce using rule 283 (math_function)]
    ADDRESS	[reduce using rule 283 (math_function)]
    LST 	[reduce using rule 283 (math_function)]
    RST 	[reduce using rule 283 (math_function)]
    MUL 	[reduce using rule 283 (math_function)]
    DIV 	[reduce using rule 283 (math_function)]
    MOD 	[reduce using rule 283 (math_function)]
    $default	reduce using rule 283 (math_function)

    bi_operator	go to state 331



state 297

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ASIN ari_exp .   (rule 284)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 284 (math_function)]
    CON 	[reduce using rule 284 (math_function)]
    ADDRESS	[reduce using rule 284 (math_function)]
    LST 	[reduce using rule 284 (math_function)]
    RST 	[reduce using rule 284 (math_function)]
    MUL 	[reduce using rule 284 (math_function)]
    DIV 	[reduce using rule 284 (math_function)]
    MOD 	[reduce using rule 284 (math_function)]
    $default	reduce using rule 284 (math_function)

    bi_operator	go to state 331



state 298

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ACOS ari_exp .   (rule 285)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 285 (math_function)]
    CON 	[reduce using rule 285 (math_function)]
    ADDRESS	[reduce using rule 285 (math_function)]
    LST 	[reduce using rule 285 (math_function)]
    RST 	[reduce using rule 285 (math_function)]
    MUL 	[reduce using rule 285 (math_function)]
    DIV 	[reduce using rule 285 (math_function)]
    MOD 	[reduce using rule 285 (math_function)]
    $default	reduce using rule 285 (math_function)

    bi_operator	go to state 331



state 299

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ATAN ari_exp .   (rule 286)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 286 (math_function)]
    CON 	[reduce using rule 286 (math_function)]
    ADDRESS	[reduce using rule 286 (math_function)]
    LST 	[reduce using rule 286 (math_function)]
    RST 	[reduce using rule 286 (math_function)]
    MUL 	[reduce using rule 286 (math_function)]
    DIV 	[reduce using rule 286 (math_function)]
    MOD 	[reduce using rule 286 (math_function)]
    $default	reduce using rule 286 (math_function)

    bi_operator	go to state 331



state 300

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  SINH ari_exp .   (rule 287)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 287 (math_function)]
    CON 	[reduce using rule 287 (math_function)]
    ADDRESS	[reduce using rule 287 (math_function)]
    LST 	[reduce using rule 287 (math_function)]
    RST 	[reduce using rule 287 (math_function)]
    MUL 	[reduce using rule 287 (math_function)]
    DIV 	[reduce using rule 287 (math_function)]
    MOD 	[reduce using rule 287 (math_function)]
    $default	reduce using rule 287 (math_function)

    bi_operator	go to state 331



state 301

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  COSH ari_exp .   (rule 288)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 288 (math_function)]
    CON 	[reduce using rule 288 (math_function)]
    ADDRESS	[reduce using rule 288 (math_function)]
    LST 	[reduce using rule 288 (math_function)]
    RST 	[reduce using rule 288 (math_function)]
    MUL 	[reduce using rule 288 (math_function)]
    DIV 	[reduce using rule 288 (math_function)]
    MOD 	[reduce using rule 288 (math_function)]
    $default	reduce using rule 288 (math_function)

    bi_operator	go to state 331



state 302

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  TANH ari_exp .   (rule 289)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 289 (math_function)]
    CON 	[reduce using rule 289 (math_function)]
    ADDRESS	[reduce using rule 289 (math_function)]
    LST 	[reduce using rule 289 (math_function)]
    RST 	[reduce using rule 289 (math_function)]
    MUL 	[reduce using rule 289 (math_function)]
    DIV 	[reduce using rule 289 (math_function)]
    MOD 	[reduce using rule 289 (math_function)]
    $default	reduce using rule 289 (math_function)

    bi_operator	go to state 331



state 303

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  EXP ari_exp .   (rule 290)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 290 (math_function)]
    CON 	[reduce using rule 290 (math_function)]
    ADDRESS	[reduce using rule 290 (math_function)]
    LST 	[reduce using rule 290 (math_function)]
    RST 	[reduce using rule 290 (math_function)]
    MUL 	[reduce using rule 290 (math_function)]
    DIV 	[reduce using rule 290 (math_function)]
    MOD 	[reduce using rule 290 (math_function)]
    $default	reduce using rule 290 (math_function)

    bi_operator	go to state 331



state 304

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LOG ari_exp .   (rule 291)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 291 (math_function)]
    CON 	[reduce using rule 291 (math_function)]
    ADDRESS	[reduce using rule 291 (math_function)]
    LST 	[reduce using rule 291 (math_function)]
    RST 	[reduce using rule 291 (math_function)]
    MUL 	[reduce using rule 291 (math_function)]
    DIV 	[reduce using rule 291 (math_function)]
    MOD 	[reduce using rule 291 (math_function)]
    $default	reduce using rule 291 (math_function)

    bi_operator	go to state 331



state 305

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LOG10 ari_exp .   (rule 292)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 292 (math_function)]
    CON 	[reduce using rule 292 (math_function)]
    ADDRESS	[reduce using rule 292 (math_function)]
    LST 	[reduce using rule 292 (math_function)]
    RST 	[reduce using rule 292 (math_function)]
    MUL 	[reduce using rule 292 (math_function)]
    DIV 	[reduce using rule 292 (math_function)]
    MOD 	[reduce using rule 292 (math_function)]
    $default	reduce using rule 292 (math_function)

    bi_operator	go to state 331



state 306

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  SQRT ari_exp .   (rule 293)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 293 (math_function)]
    CON 	[reduce using rule 293 (math_function)]
    ADDRESS	[reduce using rule 293 (math_function)]
    LST 	[reduce using rule 293 (math_function)]
    RST 	[reduce using rule 293 (math_function)]
    MUL 	[reduce using rule 293 (math_function)]
    DIV 	[reduce using rule 293 (math_function)]
    MOD 	[reduce using rule 293 (math_function)]
    $default	reduce using rule 293 (math_function)

    bi_operator	go to state 331



state 307

    math_function  ->  ATAN2 OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 294)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 538
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 308

    math_function  ->  POW OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 295)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 539
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 309

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ABS ari_exp .   (rule 299)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 299 (math_function)]
    CON 	[reduce using rule 299 (math_function)]
    ADDRESS	[reduce using rule 299 (math_function)]
    LST 	[reduce using rule 299 (math_function)]
    RST 	[reduce using rule 299 (math_function)]
    MUL 	[reduce using rule 299 (math_function)]
    DIV 	[reduce using rule 299 (math_function)]
    MOD 	[reduce using rule 299 (math_function)]
    $default	reduce using rule 299 (math_function)

    bi_operator	go to state 331



state 310

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FABS ari_exp .   (rule 300)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 300 (math_function)]
    CON 	[reduce using rule 300 (math_function)]
    ADDRESS	[reduce using rule 300 (math_function)]
    LST 	[reduce using rule 300 (math_function)]
    RST 	[reduce using rule 300 (math_function)]
    MUL 	[reduce using rule 300 (math_function)]
    DIV 	[reduce using rule 300 (math_function)]
    MOD 	[reduce using rule 300 (math_function)]
    $default	reduce using rule 300 (math_function)

    bi_operator	go to state 331



state 311

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LABS ari_exp .   (rule 301)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 301 (math_function)]
    CON 	[reduce using rule 301 (math_function)]
    ADDRESS	[reduce using rule 301 (math_function)]
    LST 	[reduce using rule 301 (math_function)]
    RST 	[reduce using rule 301 (math_function)]
    MUL 	[reduce using rule 301 (math_function)]
    DIV 	[reduce using rule 301 (math_function)]
    MOD 	[reduce using rule 301 (math_function)]
    $default	reduce using rule 301 (math_function)

    bi_operator	go to state 331



state 312

    math_function  ->  FMOD OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 540
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 313

    math_function  ->  MODF OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 541
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 314

    math_function  ->  LDEXP OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 542
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 315

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    OPEN_PAR	shift, and go to state 543
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 544
    point_exp	go to state 545
    address_exp	go to state 546
    identifier	go to state 547
    struct_member_exp	go to state 548



state 316

    address_exp  ->  ADDRESS array .   (rule 219)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263

    DOT 	[reduce using rule 219 (address_exp)]
    $default	reduce using rule 219 (address_exp)



state 317

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267



state 318

    address_exp  ->  ADDRESS address_exp .   (rule 221)

    $default	reduce using rule 221 (address_exp)



state 319

    address_exp  ->  ADDRESS identifier .   (rule 218)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268

    DOT 	[reduce using rule 218 (address_exp)]
    $default	reduce using rule 218 (address_exp)



state 320

    address_exp  ->  ADDRESS struct_member_exp .   (rule 220)

    $default	reduce using rule 220 (address_exp)



state 321

    member_in_exp  ->  SUB member_in_exp .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 322

    member_in_exp  ->  BNE member_in_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 323

    bi_operator  ->  INTER_OR .   (rule 199)

    $default	reduce using rule 199 (bi_operator)



state 324

    bi_operator  ->  CON .   (rule 200)

    $default	reduce using rule 200 (bi_operator)



state 325

    bi_operator  ->  ADDRESS .   (rule 198)

    $default	reduce using rule 198 (bi_operator)



state 326

    bi_operator  ->  LST .   (rule 196)

    $default	reduce using rule 196 (bi_operator)



state 327

    bi_operator  ->  RST .   (rule 197)

    $default	reduce using rule 197 (bi_operator)



state 328

    bi_operator  ->  MUL .   (rule 193)

    $default	reduce using rule 193 (bi_operator)



state 329

    bi_operator  ->  DIV .   (rule 194)

    $default	reduce using rule 194 (bi_operator)



state 330

    bi_operator  ->  MOD .   (rule 195)

    $default	reduce using rule 195 (bi_operator)



state 331

    ari_exp  ->  ari_exp bi_operator . simple_ari_exp   (rule 169)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    simple_ari_exp	go to state 549
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 332

    relation_operator  ->  NE .   (rule 323)

    $default	reduce using rule 323 (relation_operator)



state 333

    relation_operator  ->  EQ .   (rule 326)

    $default	reduce using rule 326 (relation_operator)



state 334

    relation_operator  ->  GE .   (rule 321)

    $default	reduce using rule 321 (relation_operator)



state 335

    relation_operator  ->  LE .   (rule 322)

    $default	reduce using rule 322 (relation_operator)



state 336

    relation_operator  ->  GT .   (rule 324)

    $default	reduce using rule 324 (relation_operator)



state 337

    relation_operator  ->  LT .   (rule 325)

    $default	reduce using rule 325 (relation_operator)



state 338

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 176)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 550
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 339

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 168)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 551
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 340

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 8 (complexProposition)



state 341

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 6 (complexProposition)



state 342

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 7 (complexProposition)



state 343

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 5 (complexProposition)



state 344

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 4 (complexProposition)



state 345

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    CLOSE_PAR	shift, and go to state 552



state 346

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 318)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 553
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 347

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 317)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 554
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 348

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 306)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 348
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 350
    prime_bool_exp	go to state 179
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 349

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 186)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 307)
    prime_bool_exp  ->  ari_exp .   (rule 310)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 311)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 315)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 319)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 320)

    CLOSE_PAR	shift, and go to state 526
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    NE  	shift, and go to state 352
    EQ  	shift, and go to state 353
    GE  	shift, and go to state 334
    LE  	shift, and go to state 335
    GT  	shift, and go to state 336
    LT  	shift, and go to state 337
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    CLOSE_PAR	[reduce using rule 310 (prime_bool_exp)]
    $default	reduce using rule 310 (prime_bool_exp)

    bi_operator	go to state 331
    relation_operator	go to state 354



state 350

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 306)

    CLOSE_PAR	shift, and go to state 555
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 351

    bool_exp  ->  NEGATION bool_exp .   (rule 303)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)


    $default	reduce using rule 303 (bool_exp)



state 352

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 320)
    relation_operator  ->  NE .   (rule 323)

    POINTERNULL	shift, and go to state 556
    STRLITERAL	shift, and go to state 176
    CHARLITERAL	shift, and go to state 141

    POINTERNULL	[reduce using rule 323 (relation_operator)]
    CHARLITERAL	[reduce using rule 323 (relation_operator)]
    $default	reduce using rule 323 (relation_operator)

    strliteral	go to state 557
    charliteral	go to state 558



state 353

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 311)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 315)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 319)
    relation_operator  ->  EQ .   (rule 326)

    POINTERNULL	shift, and go to state 559
    STRLITERAL	shift, and go to state 176
    CHARLITERAL	shift, and go to state 141

    POINTERNULL	[reduce using rule 326 (relation_operator)]
    CHARLITERAL	[reduce using rule 326 (relation_operator)]
    $default	reduce using rule 326 (relation_operator)

    strliteral	go to state 560
    charliteral	go to state 561



state 354

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 307)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 562
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 355

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 417)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 563



state 356

    bool_exp  ->  bool_exp OR . bool_exp   (rule 305)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 564
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 357

    bool_exp  ->  bool_exp AND . bool_exp   (rule 304)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 565
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 358

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 314)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 566
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 359

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 313)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 567
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 360

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)

    CLOSE_PAR	shift, and go to state 568
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 361

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 362

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 363

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 364

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 365

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    OPEN_PAR	shift, and go to state 569
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 571
    point_exp	go to state 461
    address_exp	go to state 462
    identifier	go to state 463
    struct_member_exp	go to state 464



state 366

    file_statement  ->  FOPEN OPEN_PAR ass_left . COMMA strliteral CLOSE_PAR   (rule 113)

    COMMA	shift, and go to state 572



state 367

    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 119)

    CLOSE_PAR	shift, and go to state 573



state 368

    file_statement  ->  FGETS OPEN_PAR identifier . COMMA intliteral COMMA identifier CLOSE_PAR   (rule 114)

    COMMA	shift, and go to state 574



state 369

    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 116)

    COMMA	shift, and go to state 575



state 370

    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 576



state 371

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 577
    ID  	shift, and go to state 235

    array	go to state 578
    identifier	go to state 375



state 372

    file_statement  ->  FPUTC OPEN_PAR array . COMMA identifier CLOSE_PAR   (rule 118)

    COMMA	shift, and go to state 579



state 373

    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 117)

    COMMA	shift, and go to state 580



state 374

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 585



state 375

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 425



state 376

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 357)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 363)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA . error   (rule 373)

    error	shift, and go to state 586
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 587
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 588
    STRUCT_TYPE	shift, and go to state 589

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 590



state 377

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COLON	shift, and go to state 591



state 378

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 592

    $default	reduce using rule 393 (option_frame_identifier)

    option_frame_identifier	go to state 593



state 379

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)

    ID  	shift, and go to state 449
    STRUCT_TYPE	shift, and go to state 594



state 380

    type_define  ->  INTDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 511

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 381

    type_define  ->  CHARDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 513

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 382

    type_define  ->  VOIDDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    MUL 	shift, and go to state 514

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 383

    type_define  ->  FLOATDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 516

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 384

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 595
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 215
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 217



state 385

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 596
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 252
    identifier	go to state 253



state 386

    for_sta_init  ->  declaration .   (rule 406)

    $default	reduce using rule 406 (for_sta_init)



state 387

    for_sta_init  ->  ass_statement .   (rule 405)

    $default	reduce using rule 405 (for_sta_init)



state 388

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    COMMA	shift, and go to state 597



state 389

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 403)

    DO  	shift, and go to state 598



state 390

    bool_par  ->  error CLOSE_PAR .   (rule 385)

    $default	reduce using rule 385 (bool_par)



state 391

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 384)

    CLOSE_PAR	shift, and go to state 599
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 392

    statement_bpar  ->  error . CLOSE_BPAR   (rule 383)

    CLOSE_BPAR	shift, and go to state 600



state 393

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 382)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 601
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 394

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 402)

    $default	reduce using rule 402 (while_statement)



state 395

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_BPAR	shift, and go to state 602
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 396

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 603
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 604
    rightaddrshift	go to state 401
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 605
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 606
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    strliteral	go to state 607
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 397

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 210)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 211)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 212)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 609
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 610
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 611
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 398

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 207)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 208)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 209)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 612
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 613
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 614
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 399

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 149)
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 615
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 238



state 400

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 420)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 421)

    COMMA	shift, and go to state 616
    CLOSE_PAR	shift, and go to state 617

    CLOSE_PAR	[reduce using rule 422 (option_output)]
    $default	reduce using rule 422 (option_output)

    option_output	go to state 618



state 401

    ass_right  ->  rightaddrshift .   (rule 148)

    $default	reduce using rule 148 (ass_right)



state 402

    ass_right  ->  ari_exp .   (rule 143)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 143 (ass_right)

    bi_operator	go to state 331



state 403

    ass_right  ->  array_exp .   (rule 144)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    CON 	shift, and go to state 619

    $default	reduce using rule 144 (ass_right)



state 404

    array_exp  ->  option_list_value .   (rule 204)

    $default	reduce using rule 204 (array_exp)



state 405

    array_exp  ->  option_struct_list_value .   (rule 205)

    $default	reduce using rule 205 (array_exp)



state 406

    ass_right  ->  strliteral .   (rule 145)

    $default	reduce using rule 145 (ass_right)



state 407

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 170)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 417)

    THEN	shift, and go to state 620
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 408

    struct_identifier  ->  STRUCT . ID   (rule 77)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)

    ID  	shift, and go to state 182
    STRUCT_TYPE	shift, and go to state 594



state 409

    type_define  ->  INTDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 621

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 410

    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 622

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 411

    type_define  ->  FLOATDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 623

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 412

    sign_declaration  ->  UNSIGNED . declaration   (rule 80)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 624
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 625
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 231
    type_define	go to state 80



state 413

    sign_declaration  ->  SIGNED . declaration   (rule 79)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 626
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 232
    type_define	go to state 80



state 414

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 401)

    CLOSE_PAR	shift, and go to state 628
    OR  	shift, and go to state 427
    AND 	shift, and go to state 428



state 415

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 234
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 629



state 416

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 386)

    OPEN_MPAR	shift, and go to state 630

    $default	reduce using rule 386 (identifier)



state 417

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    point_exp  ->  MUL identifier .   (rule 160)

    CLOSE_PAR	shift, and go to state 631

    CLOSE_PAR	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)



state 418

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 401)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 632
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 633
    struct_member_exp	go to state 289



state 419

    imply_pre  ->  NEGATION imply_pre .   (rule 398)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)


    $default	reduce using rule 398 (imply_pre)



state 420

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 67)

    $default	reduce using rule 67 (statement)



state 421

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 125)

    $default	reduce using rule 125 (ass_left)



state 422

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 156)

    $default	reduce using rule 156 (array)



state 423

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 166)

    OPEN_MPAR	shift, and go to state 634

    $default	reduce using rule 166 (point_exp)



state 424

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 444)

    IMPLY	shift, and go to state 635



state 425

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 387)

    $default	reduce using rule 387 (identifier)



state 426

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    IMPLY	shift, and go to state 636



state 427

    imply_pre  ->  imply_pre OR . imply_pre   (rule 400)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 418
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 637
    struct_member_exp	go to state 156



state 428

    imply_pre  ->  imply_pre AND . imply_pre   (rule 399)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 418
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 638
    struct_member_exp	go to state 156



state 429

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 448)

    $default	reduce using rule 448 (struct_member_exp)



state 430

    option_projection  ->  COMMA . statement option_projection   (rule 396)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 639
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 431

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 640



state 432

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    CLOSE_BPAR	shift, and go to state 641



state 433

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 642



state 434

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 643



state 435

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    OPEN_PAR	shift, and go to state 543
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 544
    point_exp	go to state 545
    address_exp	go to state 462
    identifier	go to state 547
    struct_member_exp	go to state 548



state 436

    str_func_parameter  ->  array .   (rule 273)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    IMPLY	shift, and go to state 265

    $default	reduce using rule 273 (str_func_parameter)



state 437

    str_func_parameter  ->  point_exp .   (rule 274)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267

    $default	reduce using rule 274 (str_func_parameter)



state 438

    str_func_parameter  ->  String_Function .   (rule 276)

    $default	reduce using rule 276 (str_func_parameter)



state 439

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 266)

    CLOSE_PAR	shift, and go to state 644



state 440

    str_func_parameter  ->  identifier .   (rule 272)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    $default	reduce using rule 272 (str_func_parameter)



state 441

    str_func_parameter  ->  strliteral .   (rule 275)

    $default	reduce using rule 275 (str_func_parameter)



state 442

    str_func_parameter  ->  struct_member_exp .   (rule 277)

    $default	reduce using rule 277 (str_func_parameter)



state 443

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 267)

    CLOSE_PAR	shift, and go to state 645



state 444

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 268)

    COMMA	shift, and go to state 646



state 445

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 269)

    COMMA	shift, and go to state 647



state 446

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 270)

    COMMA	shift, and go to state 648



state 447

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 271)

    CLOSE_PAR	shift, and go to state 649



state 448

    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 650



state 449

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 361
    identifier	go to state 253



state 450

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 363
    identifier	go to state 253



state 451

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 651
    ID  	shift, and go to state 652

    identifier	go to state 653



state 452

    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 63)

    CLOSE_PAR	shift, and go to state 654



state 453

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 327)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 328)

    INTDECLARATION	shift, and go to state 655
    CHARDECLARATION	shift, and go to state 656



state 454

    all_type_define  ->  type_define .   (rule 330)

    $default	reduce using rule 330 (all_type_define)



state 455

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 165)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    CLOSE_PAR	shift, and go to state 657
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 456

    all_type_define  ->  sign_type_define .   (rule 329)

    $default	reduce using rule 329 (all_type_define)



state 457

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 164)

    MUL 	shift, and go to state 658



state 458

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 204
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 659
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 660
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 661
    OPEN_PAR	shift, and go to state 205
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    SYSTEM	shift, and go to state 61
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 662
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 207
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    statement	go to state 208
    function	go to state 209
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 215
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 216
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 217



state 459

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 663
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 460

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 123)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    $default	reduce using rule 123 (ass_left)



state 461

    ass_left  ->  point_exp .   (rule 124)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    $default	reduce using rule 124 (ass_left)



state 462

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 424



state 463

    ass_left  ->  identifier .   (rule 121)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 121 (ass_left)]
    $default	reduce using rule 121 (ass_left)



state 464

    ass_left  ->  struct_member_exp .   (rule 122)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429

    CLOSE_PAR	[reduce using rule 122 (ass_left)]
    $default	reduce using rule 122 (ass_left)



state 465

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    CLOSE_PAR	shift, and go to state 664
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 466

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 427)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    COMMA	shift, and go to state 665
    CLOSE_PAR	shift, and go to state 666
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 429 (option_input)]
    $default	reduce using rule 429 (option_input)

    option_input	go to state 667



state 467

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 424)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 425)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    COMMA	shift, and go to state 665
    CLOSE_PAR	shift, and go to state 668
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 429 (option_input)]
    $default	reduce using rule 429 (option_input)

    option_input	go to state 669



state 468

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 428)

    CLOSE_PAR	shift, and go to state 670



state 469

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 671
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 470

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 672
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 471

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 673
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 472

    address_exp  ->  ADDRESS . identifier   (rule 218)
    address_exp  ->  ADDRESS . array   (rule 219)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 220)
    address_exp  ->  ADDRESS . address_exp   (rule 221)
    option_function_identifier  ->  ADDRESS . error   (rule 377)

    error	shift, and go to state 674
    OPEN_PAR	shift, and go to state 315
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 316
    point_exp	go to state 317
    address_exp	go to state 318
    identifier	go to state 319
    struct_member_exp	go to state 320



state 473

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 375)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 675
    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)



state 474

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 374)

    COMMA	shift, and go to state 676

    $default	reduce using rule 380 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 677



state 475

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 678



state 476

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 680
    bi_operator	go to state 331



state 477

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)



state 478

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    ASS_P	shift, and go to state 681



state 479

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 682
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 480

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 106)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 107)

    error	shift, and go to state 683
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 684
    identifier	go to state 253



state 481

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 685
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 482

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 483

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 32 (statement)



state 484

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 257

    $default	reduce using rule 31 (statement)



state 485

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 257

    $default	reduce using rule 54 (statement)



state 486

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)



state 487

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 76)

    CLOSE_BPAR	shift, and go to state 686



state 488

    option_struct_declaration  ->  sign_declaration .   (rule 68)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 69)

    AND 	shift, and go to state 687

    $default	reduce using rule 68 (option_struct_declaration)



state 489

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 120)

    $default	reduce using rule 120 (ass_statement)



state 490

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 436)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 690



state 491

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 433)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 691



state 492

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 692



state 493

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 693



state 494

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 439)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 694



state 495

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 437)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 695



state 496

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 434)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 696



state 497

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 697



state 498

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 441)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 698



state 499

    struct_member_exp  ->  identifier DOT function .   (rule 445)

    $default	reduce using rule 445 (struct_member_exp)



state 500

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 435)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 699



state 501

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 432)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 700



state 502

    struct_member_exp  ->  identifier IMPLY function .   (rule 446)

    $default	reduce using rule 446 (struct_member_exp)



state 503

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 442)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 701



state 504

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 438)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 702



state 505

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 506

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 272
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 703



state 507

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 704



state 508

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 170)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 705
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 509

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 244)

    MUL 	shift, and go to state 706



state 510

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 223)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 707
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 511

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 709
    MUL 	shift, and go to state 710



state 512

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 225)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 513

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 712
    MUL 	shift, and go to state 713



state 514

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 714
    MUL 	shift, and go to state 715



state 515

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 224)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 716
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 516

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 717
    MUL 	shift, and go to state 718



state 517

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 719



state 518

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 720



state 519

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 721



state 520

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 723



state 521

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725



state 522

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 727



state 523

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)

    CLOSE_PAR	shift, and go to state 728



state 524

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)

    CLOSE_PAR	shift, and go to state 729



state 525

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 245)

    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 731



state 526

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 186)

    $default	reduce using rule 186 (member_in_exp)



state 527

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 222)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 444)

    IMPLY	shift, and go to state 635

    IMPLY	[reduce using rule 222 (address_exp)]
    $default	reduce using rule 222 (address_exp)



state 528

    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 254)

    STRUCT_TYPE	shift, and go to state 732



state 529

    type_define  ->  INTDECLARATION .   (rule 92)
    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 249)

    MUL 	shift, and go to state 733

    $default	reduce using rule 92 (type_define)



state 530

    type_define  ->  CHARDECLARATION .   (rule 94)
    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 251)

    MUL 	shift, and go to state 734

    $default	reduce using rule 94 (type_define)



state 531

    type_define  ->  FLOATDECLARATION .   (rule 93)
    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 250)

    MUL 	shift, and go to state 735

    $default	reduce using rule 93 (type_define)



state 532

    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 252)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 253)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 327)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 328)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 737



state 533

    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 255)
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 258)

    CLOSE_PAR	shift, and go to state 738
    MUL 	shift, and go to state 739



state 534

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    size_of  ->  SIZEOF OPEN_PAR ari_exp . CLOSE_PAR   (rule 256)

    CLOSE_PAR	shift, and go to state 740
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 535

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 257)

    CLOSE_PAR	shift, and go to state 741



state 536

    all_sizeof_type  ->  all_type_define .   (rule 248)

    $default	reduce using rule 248 (all_sizeof_type)



state 537

    size_of  ->  SIZEOF OPEN_PAR strliteral . CLOSE_PAR   (rule 259)

    CLOSE_PAR	shift, and go to state 742



state 538

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ATAN2 OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 294)

    COMMA	shift, and go to state 743
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 539

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  POW OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 295)

    COMMA	shift, and go to state 744
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 540

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FMOD OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 296)

    COMMA	shift, and go to state 745
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 541

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  MODF OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 297)

    COMMA	shift, and go to state 746
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 542

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LDEXP OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 298)

    COMMA	shift, and go to state 747
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 543

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    INTDECLARATION	shift, and go to state 748
    CHARDECLARATION	shift, and go to state 749
    FLOATDECLARATION	shift, and go to state 750
    OPEN_PAR	shift, and go to state 543
    UNSIGNED	shift, and go to state 751
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 544
    point_exp	go to state 545
    address_exp	go to state 546
    identifier	go to state 547
    struct_member_exp	go to state 548



state 544

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265



state 545

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267



state 546

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 222)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 527



state 547

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269



state 548

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429



state 549

    ari_exp  ->  ari_exp bi_operator simple_ari_exp .   (rule 169)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 169 (ari_exp)]
    CON 	[reduce using rule 169 (ari_exp)]
    ADDRESS	[reduce using rule 169 (ari_exp)]
    LST 	[reduce using rule 169 (ari_exp)]
    RST 	[reduce using rule 169 (ari_exp)]
    MUL 	[reduce using rule 169 (ari_exp)]
    DIV 	[reduce using rule 169 (ari_exp)]
    MOD 	[reduce using rule 169 (ari_exp)]
    $default	reduce using rule 169 (ari_exp)

    bi_operator	go to state 338



state 550

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 176)

    $default	reduce using rule 176 (simple_ari_exp)



state 551

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 168)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 168 (ari_exp)]
    CON 	[reduce using rule 168 (ari_exp)]
    ADDRESS	[reduce using rule 168 (ari_exp)]
    LST 	[reduce using rule 168 (ari_exp)]
    RST 	[reduce using rule 168 (ari_exp)]
    MUL 	[reduce using rule 168 (ari_exp)]
    DIV 	[reduce using rule 168 (ari_exp)]
    MOD 	[reduce using rule 168 (ari_exp)]
    $default	reduce using rule 168 (ari_exp)

    bi_operator	go to state 331



state 552

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    OPEN_BPAR	shift, and go to state 752



state 553

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 318)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 318 (prime_bool_exp)

    bi_operator	go to state 331



state 554

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 317)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 317 (prime_bool_exp)

    bi_operator	go to state 331



state 555

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 306)

    $default	reduce using rule 306 (bool_exp)



state 556

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 316)

    $default	reduce using rule 316 (prime_bool_exp)



state 557

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 312)

    $default	reduce using rule 312 (prime_bool_exp)



state 558

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 320)

    $default	reduce using rule 320 (prime_bool_exp)



state 559

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 315)

    $default	reduce using rule 315 (prime_bool_exp)



state 560

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 311)

    $default	reduce using rule 311 (prime_bool_exp)



state 561

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 319)

    $default	reduce using rule 319 (prime_bool_exp)



state 562

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 307)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 307 (prime_bool_exp)

    bi_operator	go to state 331



state 563

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 417)

    ELSE	shift, and go to state 753

    $default	reduce using rule 419 (option_else_statement)

    option_else_statement	go to state 754



state 564

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 305)

    AND 	shift, and go to state 357

    $default	reduce using rule 305 (bool_exp)



state 565

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)


    $default	reduce using rule 304 (bool_exp)



state 566

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 314)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 314 (prime_bool_exp)

    bi_operator	go to state 331



state 567

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 313)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 313 (prime_bool_exp)

    bi_operator	go to state 331



state 568

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 569

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    INTDECLARATION	shift, and go to state 755
    CHARDECLARATION	shift, and go to state 756
    FLOATDECLARATION	shift, and go to state 757
    OPEN_PAR	shift, and go to state 569
    UNSIGNED	shift, and go to state 758
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 571
    point_exp	go to state 461
    address_exp	go to state 546
    identifier	go to state 463
    struct_member_exp	go to state 464



state 570

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 125)

    CLOSE_PAR	shift, and go to state 421



state 571

    ass_left  ->  array .   (rule 123)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    $default	reduce using rule 123 (ass_left)



state 572

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA . strliteral CLOSE_PAR   (rule 113)

    STRLITERAL	shift, and go to state 176

    strliteral	go to state 759



state 573

    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 119)

    $default	reduce using rule 119 (file_statement)



state 574

    file_statement  ->  FGETS OPEN_PAR identifier COMMA . intliteral COMMA identifier CLOSE_PAR   (rule 114)

    INTLITERAL	shift, and go to state 139

    intliteral	go to state 760



state 575

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 761



state 576

    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 115)

    $default	reduce using rule 115 (file_statement)



state 577

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    INTDECLARATION	shift, and go to state 748
    CHARDECLARATION	shift, and go to state 749
    FLOATDECLARATION	shift, and go to state 750
    OPEN_PAR	shift, and go to state 577
    UNSIGNED	shift, and go to state 751
    ID  	shift, and go to state 235

    array	go to state 578
    identifier	go to state 375



state 578

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)

    CLOSE_PAR	shift, and go to state 422



state 579

    file_statement  ->  FPUTC OPEN_PAR array COMMA . identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 762



state 580

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 763



state 581

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    MUL 	shift, and go to state 764



state 582

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 344)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 345)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 346)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 765
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766
    identifier	go to state 767



state 583

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 341)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 342)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 343)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 768
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 769
    identifier	go to state 770



state 584

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 331)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 332)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 354)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 771
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 772
    identifier	go to state 773



state 585

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 774



state 586

    inner_option_define_identifier  ->  COMMA error .   (rule 373)

    $default	reduce using rule 373 (inner_option_define_identifier)



state 587

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    MUL 	shift, and go to state 775



state 588

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 362)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 776



state 589

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 363)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 194

    identifier	go to state 778



state 590

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 357)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 372)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 779
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 780
    identifier	go to state 781



state 591

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 782



state 592

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 392)
    option_frame_identifier  ->  COMMA . error   (rule 394)

    error	shift, and go to state 783
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 784



state 593

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 785



state 594

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 244)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 786
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 362
    identifier	go to state 253



state 595

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 787
    CHARDECLARATION	shift, and go to state 788
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 789
    OPEN_PAR	shift, and go to state 595
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 790
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 215
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 217



state 596

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 791
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253



state 597

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 409 (for_sta_condition)

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 792
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    for_sta_condition	go to state 793
    struct_member_exp	go to state 156



state 598

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 403)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 794



state 599

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 384)

    $default	reduce using rule 384 (bool_par)



state 600

    statement_bpar  ->  error CLOSE_BPAR .   (rule 383)

    $default	reduce using rule 383 (statement_bpar)



state 601

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 382)

    CLOSE_BPAR	shift, and go to state 795
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 602

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 796



state 603

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 603
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 604
    rightaddrshift	go to state 401
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 605
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 606
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    strliteral	go to state 607
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 604

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 147)

    CLOSE_PAR	shift, and go to state 797



state 605

    ass_right  ->  ari_exp .   (rule 143)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 186)

    CLOSE_PAR	shift, and go to state 526
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    CLOSE_PAR	[reduce using rule 143 (ass_right)]
    $default	reduce using rule 143 (ass_right)

    bi_operator	go to state 331



state 606

    ass_right  ->  array_exp .   (rule 144)
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 206)

    CLOSE_PAR	shift, and go to state 798
    CON 	shift, and go to state 619

    CLOSE_PAR	[reduce using rule 144 (ass_right)]
    $default	reduce using rule 144 (ass_right)



state 607

    ass_right  ->  strliteral .   (rule 145)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    CLOSE_PAR	shift, and go to state 799

    CLOSE_PAR	[reduce using rule 145 (ass_right)]
    $default	reduce using rule 145 (ass_right)



state 608

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 800
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 801
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 609

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 210)

    COMMA	shift, and go to state 802
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 216 (inner_option_list_value)

    bi_operator	go to state 331
    inner_option_list_value	go to state 803



state 610

    array_exp  ->  array_exp . CON array_exp   (rule 203)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 212)

    COMMA	shift, and go to state 802
    CON 	shift, and go to state 619

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 804



state 611

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 211)

    COMMA	shift, and go to state 802

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 805



state 612

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 207)

    COMMA	shift, and go to state 802
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 216 (inner_option_list_value)

    bi_operator	go to state 331
    inner_option_list_value	go to state 806



state 613

    array_exp  ->  array_exp . CON array_exp   (rule 203)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 209)

    COMMA	shift, and go to state 802
    CON 	shift, and go to state 619

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 807



state 614

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 208)

    COMMA	shift, and go to state 802

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 808



state 615

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 809
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 453
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    type_define	go to state 454
    file_statement	go to state 81
    leftaddrshift	go to state 810
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 455
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    sign_type_define	go to state 456
    all_type_define	go to state 457
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 616

    option_output  ->  COMMA . ass_right option_output   (rule 423)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 811
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 617

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 420)

    $default	reduce using rule 420 (output_statement)



state 618

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 421)

    CLOSE_PAR	shift, and go to state 812



state 619

    array_exp  ->  array_exp CON . array_exp   (rule 203)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398

    array_exp	go to state 814
    option_list_value	go to state 404
    option_struct_list_value	go to state 405



state 620

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 170)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 417)

    error	shift, and go to state 392
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    OPEN_BPAR	shift, and go to state 393
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 705
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    statement_bpar	go to state 563
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 621

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 815
    MUL 	shift, and go to state 710



state 622

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 816
    MUL 	shift, and go to state 713



state 623

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 817
    MUL 	shift, and go to state 718



state 624

    type_define  ->  INTDECLARATION .   (rule 92)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 818

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 625

    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 819

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 626

    type_define  ->  INTDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)

    CLOSE_PAR	shift, and go to state 728

    $default	reduce using rule 92 (type_define)



state 627

    type_define  ->  CHARDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)

    CLOSE_PAR	shift, and go to state 729

    $default	reduce using rule 94 (type_define)



state 628

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 401)

    IMPLY	shift, and go to state 636

    $default	reduce using rule 401 (imply_pre)



state 629

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    point_exp  ->  MUL identifier .   (rule 160)

    CLOSE_PAR	shift, and go to state 820

    CLOSE_PAR	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)



state 630

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 821
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 631

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)

    OPEN_PAR	shift, and go to state 822



state 632

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 401)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 632
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 633
    struct_member_exp	go to state 289



state 633

    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 401)

    CLOSE_PAR	shift, and go to state 823
    OR  	shift, and go to state 427
    AND 	shift, and go to state 428



state 634

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 163)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 824
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 635

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 444)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 825
    identifier	go to state 826



state 636

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 827



state 637

    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 400)

    AND 	shift, and go to state 428

    $default	reduce using rule 400 (imply_pre)



state 638

    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)


    $default	reduce using rule 399 (imply_pre)



state 639

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 396)

    COMMA	shift, and go to state 430
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 395 (option_projection)

    option_projection	go to state 828



state 640

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 829



state 641

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 830



state 642

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 831



state 643

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    CLOSE_PAR	shift, and go to state 832



state 644

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 266)

    $default	reduce using rule 266 (String_Function_head)



state 645

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 267)

    $default	reduce using rule 267 (String_Function_tail)



state 646

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 833
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 647

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 834
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 648

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 835
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442



state 649

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 271)

    $default	reduce using rule 271 (String_Function_len)



state 650

    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 651

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 836



state 652

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    identifier  ->  ID .   (rule 386)

    OPEN_MPAR	shift, and go to state 837

    $default	reduce using rule 386 (identifier)



state 653

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)

    CLOSE_PAR	shift, and go to state 631



state 654

    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 655

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 327)

    $default	reduce using rule 327 (sign_type_define)



state 656

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 328)

    $default	reduce using rule 328 (sign_type_define)



state 657

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 165)

    $default	reduce using rule 165 (point_exp)



state 658

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 164)

    CLOSE_PAR	shift, and go to state 838



state 659

    type_define  ->  INTDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 839

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 660

    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 840

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 661

    type_define  ->  FLOATDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 841

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 662

    sign_declaration  ->  UNSIGNED . declaration   (rule 80)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 842
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 843
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 231
    type_define	go to state 80



state 663

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 664

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)



state 665

    option_input  ->  COMMA . identifier option_input   (rule 430)
    option_input  ->  COMMA . array option_input   (rule 431)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 844
    identifier	go to state 845



state 666

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 426)

    $default	reduce using rule 426 (input_statement)



state 667

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 427)

    CLOSE_PAR	shift, and go to state 846



state 668

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 424)

    $default	reduce using rule 424 (input_statement)



state 669

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 425)

    CLOSE_PAR	shift, and go to state 847



state 670

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 428)

    $default	reduce using rule 428 (input_statement)



state 671

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)



state 672

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 673

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 674

    option_function_identifier  ->  ADDRESS error .   (rule 377)

    $default	reduce using rule 377 (option_function_identifier)



state 675

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 375)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 848
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 676

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 378)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 379)
    inner_option_function_identifier  ->  COMMA . error   (rule 381)

    error	shift, and go to state 849
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 850
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 851
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 677

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 374)

    $default	reduce using rule 374 (option_function_identifier)



state 678

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)



state 679

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 157)
    option_ari_exp  ->  COMMA . error   (rule 158)

    error	shift, and go to state 852
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 853
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 680

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 854



state 681

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRLITERAL	shift, and go to state 176

    array_exp	go to state 855
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    strliteral	go to state 856



state 682

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 857
    bi_operator	go to state 331



state 683

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 107)

    $default	reduce using rule 107 (inner_option_identifier_array_declaration)



state 684

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (inner_option_identifier_array_declaration)



state 685

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 480

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 858



state 686

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 76)

    $default	reduce using rule 76 (struct_define_statement)



state 687

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 69)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 859
    sign_declaration	go to state 488
    declaration	go to state 79
    type_define	go to state 80



state 688

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 450)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 451)
    option_struct_member_exp  ->  DOT . function   (rule 454)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 860
    file_statement	go to state 81
    array	go to state 861
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 862



state 689

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 452)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 453)
    option_struct_member_exp  ->  IMPLY . function   (rule 455)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 863
    file_statement	go to state 81
    array	go to state 864
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 865



state 690

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 436)

    $default	reduce using rule 436 (struct_member_exp)



state 691

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 433)

    $default	reduce using rule 433 (struct_member_exp)



state 692

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)



state 693

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 443)

    $default	reduce using rule 443 (struct_member_exp)



state 694

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 439)

    $default	reduce using rule 439 (struct_member_exp)



state 695

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 437)

    $default	reduce using rule 437 (struct_member_exp)



state 696

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 434)

    $default	reduce using rule 434 (struct_member_exp)



state 697

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 447)

    $default	reduce using rule 447 (struct_member_exp)



state 698

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 441)

    $default	reduce using rule 441 (struct_member_exp)



state 699

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 435)

    $default	reduce using rule 435 (struct_member_exp)



state 700

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 432)

    $default	reduce using rule 432 (struct_member_exp)



state 701

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 442)

    $default	reduce using rule 442 (struct_member_exp)



state 702

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 438)

    $default	reduce using rule 438 (struct_member_exp)



state 703

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 704

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 866



state 705

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 170)

    ELSE	shift, and go to state 867
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    ELSE	[reduce using rule 174 (option_exp_else_statement)]
    INTER_OR	[reduce using rule 174 (option_exp_else_statement)]
    CON 	[reduce using rule 174 (option_exp_else_statement)]
    ADDRESS	[reduce using rule 174 (option_exp_else_statement)]
    LST 	[reduce using rule 174 (option_exp_else_statement)]
    RST 	[reduce using rule 174 (option_exp_else_statement)]
    MUL 	[reduce using rule 174 (option_exp_else_statement)]
    DIV 	[reduce using rule 174 (option_exp_else_statement)]
    MOD 	[reduce using rule 174 (option_exp_else_statement)]
    $default	reduce using rule 174 (option_exp_else_statement)

    option_exp_else_statement	go to state 868
    bi_operator	go to state 331



state 706

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 244)

    CLOSE_PAR	shift, and go to state 869
    MUL 	shift, and go to state 870



state 707

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 708

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 171)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 172)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    ADD 	shift, and go to state 871
    SUB 	shift, and go to state 872
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 171 (type_cast_alg_exp)]
    CON 	[reduce using rule 171 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 171 (type_cast_alg_exp)]
    LST 	[reduce using rule 171 (type_cast_alg_exp)]
    RST 	[reduce using rule 171 (type_cast_alg_exp)]
    ADD 	[reduce using rule 171 (type_cast_alg_exp)]
    SUB 	[reduce using rule 171 (type_cast_alg_exp)]
    MUL 	[reduce using rule 171 (type_cast_alg_exp)]
    DIV 	[reduce using rule 171 (type_cast_alg_exp)]
    MOD 	[reduce using rule 171 (type_cast_alg_exp)]
    $default	reduce using rule 171 (type_cast_alg_exp)

    bi_operator	go to state 338
    ari_operator	go to state 873



state 709

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 710

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 877



state 711

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 712

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 713

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 879



state 714

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 880
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 715

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 881



state 716

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 717

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 882
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 718

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 883



state 719

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 884
    MUL 	shift, and go to state 710



state 720

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 885
    MUL 	shift, and go to state 713



state 721

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 886
    MUL 	shift, and go to state 718



state 722

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 818



state 723

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 887



state 724

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 228)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 888
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 725

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 889
    MUL 	shift, and go to state 890



state 726

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 229)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 891
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 727

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 892
    MUL 	shift, and go to state 893



state 728

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 226)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 894
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 729

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 227)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 895
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 730

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 243)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 896
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 731

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 245)

    CLOSE_PAR	shift, and go to state 897



state 732

    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 254)

    MUL 	shift, and go to state 898



state 733

    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 249)

    $default	reduce using rule 249 (all_sizeof_type)



state 734

    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 251)

    $default	reduce using rule 251 (all_sizeof_type)



state 735

    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 250)

    $default	reduce using rule 250 (all_sizeof_type)



state 736

    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 252)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 327)

    MUL 	shift, and go to state 899

    $default	reduce using rule 327 (sign_type_define)



state 737

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 253)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 328)

    MUL 	shift, and go to state 900

    $default	reduce using rule 328 (sign_type_define)



state 738

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 258)

    $default	reduce using rule 258 (size_of)



state 739

    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 255)

    $default	reduce using rule 255 (all_sizeof_type)



state 740

    size_of  ->  SIZEOF OPEN_PAR ari_exp CLOSE_PAR .   (rule 256)

    $default	reduce using rule 256 (size_of)



state 741

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 257)

    $default	reduce using rule 257 (size_of)



state 742

    size_of  ->  SIZEOF OPEN_PAR strliteral CLOSE_PAR .   (rule 259)

    $default	reduce using rule 259 (size_of)



state 743

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 294)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 901
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 744

    math_function  ->  POW OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 295)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 902
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 745

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 903
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 746

    math_function  ->  MODF OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 904
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 747

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 905
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 748

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 906



state 749

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 907



state 750

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 908



state 751

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    INTDECLARATION	shift, and go to state 909
    CHARDECLARATION	shift, and go to state 910



state 752

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 412)

    CASE	shift, and go to state 911

    case_par	go to state 912



state 753

    option_else_statement  ->  ELSE . statement_bpar   (rule 418)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 913



state 754

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 417)

    $default	reduce using rule 417 (if_statement)



state 755

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 839



state 756

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 840



state 757

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 841



state 758

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    INTDECLARATION	shift, and go to state 909
    CHARDECLARATION	shift, and go to state 914



state 759

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral . CLOSE_PAR   (rule 113)

    CLOSE_PAR	shift, and go to state 915



state 760

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral . COMMA identifier CLOSE_PAR   (rule 114)

    COMMA	shift, and go to state 916



state 761

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 917



state 762

    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier . CLOSE_PAR   (rule 118)

    CLOSE_PAR	shift, and go to state 918



state 763

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 117)

    CLOSE_PAR	shift, and go to state 919



state 764

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 920



state 765

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 345)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 346)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 921
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 922
    identifier	go to state 923



state 766

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 344)

    $default	reduce using rule 344 (option_function_parameter_list)



state 767

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 340)

    ARRAY	shift, and go to state 924
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 925



state 768

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 342)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 343)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 926
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 927
    identifier	go to state 928



state 769

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 341)

    $default	reduce using rule 341 (option_function_parameter_list)



state 770

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 336)

    ARRAY	shift, and go to state 929
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 930



state 771

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 354)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 931
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 932
    identifier	go to state 933



state 772

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 332)

    $default	reduce using rule 332 (option_function_parameter_list)



state 773

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 331)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    ARRAY	shift, and go to state 934
    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 935

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 936



state 774

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    ASS_P	shift, and go to state 937



state 775

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 938



state 776

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 362)

    ARRAY	shift, and go to state 939
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 940



state 777

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 361)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 941



state 778

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 363)

    ARRAY	shift, and go to state 942
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 943



state 779

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 372)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 944
    identifier	go to state 945



state 780

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 358)

    $default	reduce using rule 358 (inner_option_define_identifier)



state 781

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 357)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    ARRAY	shift, and go to state 946
    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 947

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 948



state 782

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 66)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 949
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 783

    option_frame_identifier  ->  COMMA error .   (rule 394)

    $default	reduce using rule 394 (option_frame_identifier)



state 784

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 392)

    COMMA	shift, and go to state 592

    $default	reduce using rule 393 (option_frame_identifier)

    option_frame_identifier	go to state 950



state 785

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 951



state 786

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 244)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 869
    MUL 	shift, and go to state 952
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253



state 787

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 621



state 788

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 622



state 789

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 623



state 790

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 953



state 791

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 897
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253



state 792

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    for_sta_condition  ->  bool_exp .   (rule 408)

    OR  	shift, and go to state 356
    AND 	shift, and go to state 357

    $default	reduce using rule 408 (for_sta_condition)



state 793

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    COMMA	shift, and go to state 954



state 794

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 403)

    $default	reduce using rule 403 (for_statement)



state 795

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 382)

    $default	reduce using rule 382 (statement_bpar)



state 796

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 955



state 797

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 147)

    $default	reduce using rule 147 (ass_right)



state 798

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 206)

    $default	reduce using rule 206 (array_exp)



state 799

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    OPEN_PAR	shift, and go to state 956



state 800

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 800
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 801
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 801

    array_exp  ->  array_exp . CON array_exp   (rule 203)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 206)

    CLOSE_PAR	shift, and go to state 798
    CON 	shift, and go to state 619



state 802

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 213)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 214)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 215)
    inner_option_list_value  ->  COMMA . error   (rule 217)

    error	shift, and go to state 957
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 958
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 959
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 960
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 803

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 210)

    CLOSE_BPAR	shift, and go to state 961



state 804

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 212)

    CLOSE_BPAR	shift, and go to state 962



state 805

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 211)

    CLOSE_BPAR	shift, and go to state 963



state 806

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 207)

    CLOSE_MPAR	shift, and go to state 964



state 807

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 209)

    CLOSE_MPAR	shift, and go to state 965



state 808

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 208)

    CLOSE_MPAR	shift, and go to state 966



state 809

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 967
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 810

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 149)

    CLOSE_PAR	shift, and go to state 968



state 811

    option_output  ->  COMMA ass_right . option_output   (rule 423)

    COMMA	shift, and go to state 616

    $default	reduce using rule 422 (option_output)

    option_output	go to state 969



state 812

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 421)

    $default	reduce using rule 421 (output_statement)



state 813

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398

    array_exp	go to state 801
    option_list_value	go to state 404
    option_struct_list_value	go to state 405



state 814

    array_exp  ->  array_exp . CON array_exp   (rule 203)
    array_exp  ->  array_exp CON array_exp .   (rule 203)


    $default	reduce using rule 203 (array_exp)



state 815

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 970
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 972
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 816

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 973
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 975
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 817

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 977
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 882
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 818

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 978
    MUL 	shift, and go to state 890



state 819

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 979
    MUL 	shift, and go to state 893



state 820

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    OPEN_PAR	shift, and go to state 980



state 821

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 981
    bi_operator	go to state 331



state 822

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 88)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 982



state 823

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 401)

    $default	reduce using rule 401 (imply_pre)



state 824

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 163)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 983
    bi_operator	go to state 331



state 825

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 984



state 826

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 440)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 985



state 827

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 986
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 828

    option_projection  ->  COMMA statement option_projection .   (rule 396)

    $default	reduce using rule 396 (option_projection)



state 829

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 830

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 987



state 831

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 988



state 832

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ASS_P	shift, and go to state 989



state 833

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 268)

    CLOSE_PAR	shift, and go to state 990



state 834

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 269)

    CLOSE_PAR	shift, and go to state 991



state 835

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 270)

    CLOSE_PAR	shift, and go to state 992



state 836

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 820



state 837

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 993
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 838

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 164)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 994
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 839

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 995



state 840

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 996



state 841

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 997



state 842

    type_define  ->  INTDECLARATION .   (rule 92)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 998

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 843

    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 999

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 844

    option_input  ->  COMMA array . option_input   (rule 431)

    COMMA	shift, and go to state 665

    $default	reduce using rule 429 (option_input)

    option_input	go to state 1000



state 845

    option_input  ->  COMMA identifier . option_input   (rule 430)

    COMMA	shift, and go to state 665

    $default	reduce using rule 429 (option_input)

    option_input	go to state 1001



state 846

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 427)

    $default	reduce using rule 427 (input_statement)



state 847

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 425)

    $default	reduce using rule 425 (input_statement)



state 848

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 375)

    CLOSE_PAR	shift, and go to state 1002



state 849

    inner_option_function_identifier  ->  COMMA error .   (rule 381)

    $default	reduce using rule 381 (inner_option_function_identifier)



state 850

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 379)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 1003
    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)



state 851

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 378)

    COMMA	shift, and go to state 676

    $default	reduce using rule 380 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 1004



state 852

    option_ari_exp  ->  COMMA error .   (rule 158)

    $default	reduce using rule 158 (option_ari_exp)



state 853

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 157)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1005
    bi_operator	go to state 331



state 854

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    $default	reduce using rule 150 (array)



state 855

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 101)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    COMMA	shift, and go to state 480
    CON 	shift, and go to state 619

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1006



state 856

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 480

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1007



state 857

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    CLOSE_MPAR	shift, and go to state 1008



state 858

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 859

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 69)

    $default	reduce using rule 69 (option_struct_declaration)



state 860

    option_struct_member_exp  ->  DOT function .   (rule 454)

    $default	reduce using rule 454 (option_struct_member_exp)



state 861

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 451)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1009



state 862

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1010



state 863

    option_struct_member_exp  ->  IMPLY function .   (rule 455)

    $default	reduce using rule 455 (option_struct_member_exp)



state 864

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 453)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1011



state 865

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 452)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1012



state 866

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 1013



state 867

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 173)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1014
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 868

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 170)

    $default	reduce using rule 170 (ari_exp)



state 869

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 242)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1015
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 870

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 244)

    CLOSE_PAR	shift, and go to state 1016



state 871

    ari_operator  ->  ADD .   (rule 201)

    $default	reduce using rule 201 (ari_operator)



state 872

    ari_operator  ->  SUB .   (rule 202)

    $default	reduce using rule 202 (ari_operator)



state 873

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 172)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    simple_ari_exp	go to state 1017
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 874

    casted_element  ->  MALLOC . OPEN_PAR ari_exp CLOSE_PAR   (rule 247)

    OPEN_PAR	shift, and go to state 1018



state 875

    casted_element  ->  type_cast_alg_exp .   (rule 246)

    $default	reduce using rule 246 (casted_element)



state 876

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 877

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1019
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 878

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 879

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1020
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 880

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 881

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 241)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1021
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 882

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 883

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1022
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 884

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 885

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 886

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 882
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 887

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1023
    MUL 	shift, and go to state 893



state 888

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 889

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1024
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 890

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 1025



state 891

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 892

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 893

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1027



state 894

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 895

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 896

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 243)

    $default	reduce using rule 243 (type_cast)



state 897

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 245)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1028
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 898

    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 254)

    $default	reduce using rule 254 (all_sizeof_type)



state 899

    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 252)

    $default	reduce using rule 252 (all_sizeof_type)



state 900

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 253)

    $default	reduce using rule 253 (all_sizeof_type)



state 901

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 294)

    CLOSE_PAR	shift, and go to state 1029
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 902

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 295)

    CLOSE_PAR	shift, and go to state 1030
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 903

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 296)

    CLOSE_PAR	shift, and go to state 1031
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 904

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 297)

    CLOSE_PAR	shift, and go to state 1032
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 905

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 298)

    CLOSE_PAR	shift, and go to state 1033
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 906

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 1034



state 907

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1035



state 908

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1036



state 909

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 998



state 910

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 1037



state 911

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par   (rule 413)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 1038
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 912

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 412)

    CLOSE_BPAR	shift, and go to state 1039



state 913

    option_else_statement  ->  ELSE statement_bpar .   (rule 418)

    $default	reduce using rule 418 (option_else_statement)



state 914

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 999



state 915

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR .   (rule 113)

    $default	reduce using rule 113 (file_statement)



state 916

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA . identifier CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 1040



state 917

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (file_statement)



state 918

    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR .   (rule 118)

    $default	reduce using rule 118 (file_statement)



state 919

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 117)

    $default	reduce using rule 117 (file_statement)



state 920

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    CLOSE_PAR	shift, and go to state 1041



state 921

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 346)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1042
    identifier	go to state 1043



state 922

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 345)

    $default	reduce using rule 345 (option_function_parameter_list)



state 923

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 338)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1044



state 924

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 340)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1045



state 925

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 337)

    $default	reduce using rule 337 (option_function_parameter_list)



state 926

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 343)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1046
    identifier	go to state 1047



state 927

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 342)

    $default	reduce using rule 342 (option_function_parameter_list)



state 928

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 334)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1048



state 929

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 336)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1049



state 930

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 333)

    $default	reduce using rule 333 (option_function_parameter_list)



state 931

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 354)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 1050



state 932

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 353)

    $default	reduce using rule 353 (option_function_parameter_list)



state 933

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 352)

    ARRAY	shift, and go to state 1051
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1052



state 934

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 1053

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1054



state 935

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1055
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 936

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 331)

    $default	reduce using rule 331 (option_function_parameter_list)



state 937

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 1056



state 938

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    CLOSE_PAR	shift, and go to state 1057



state 939

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 362)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1058



state 940

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 359)

    $default	reduce using rule 359 (inner_option_define_identifier)



state 941

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 361)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1059



state 942

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 363)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1060



state 943

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 360)

    $default	reduce using rule 360 (inner_option_define_identifier)



state 944

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 372)

    $default	reduce using rule 372 (inner_option_define_identifier)



state 945

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 371)

    ARRAY	shift, and go to state 1061
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1062



state 946

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 1063

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1064



state 947

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1065
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 948

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 357)

    $default	reduce using rule 357 (inner_option_define_identifier)



state 949

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1066
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 950

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 392)

    $default	reduce using rule 392 (option_frame_identifier)



state 951

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 1067



state 952

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 244)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 1016
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253



state 953

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 819



state 954

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    $default	reduce using rule 411 (for_sta_control)

    ass_statement	go to state 1068
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    for_sta_control	go to state 1069
    struct_member_exp	go to state 102



state 955

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 1070
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 956

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50

    type_define	go to state 1071



state 957

    inner_option_list_value  ->  COMMA error .   (rule 217)

    $default	reduce using rule 217 (inner_option_list_value)



state 958

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 213)

    COMMA	shift, and go to state 802
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 216 (inner_option_list_value)

    bi_operator	go to state 331
    inner_option_list_value	go to state 1072



state 959

    array_exp  ->  array_exp . CON array_exp   (rule 203)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 215)

    COMMA	shift, and go to state 802
    CON 	shift, and go to state 619

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 1073



state 960

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 214)

    COMMA	shift, and go to state 802

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 1074



state 961

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 210)

    $default	reduce using rule 210 (option_struct_list_value)



state 962

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 212)

    $default	reduce using rule 212 (option_struct_list_value)



state 963

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 211)

    $default	reduce using rule 211 (option_struct_list_value)



state 964

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 207)

    $default	reduce using rule 207 (option_list_value)



state 965

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 209)

    $default	reduce using rule 209 (option_list_value)



state 966

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 208)

    $default	reduce using rule 208 (option_list_value)



state 967

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 787
    CHARDECLARATION	shift, and go to state 788
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 789
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 790
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 968

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 149)

    $default	reduce using rule 149 (rightaddrshift)



state 969

    option_output  ->  COMMA ass_right option_output .   (rule 423)

    $default	reduce using rule 423 (option_output)



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 1075
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 971

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1076
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1077

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 973

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 1078
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 974

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1079
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1080

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 976

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1081
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1082

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 978

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1083
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1024
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 1084
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1086
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 980

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 89)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1087



state 981

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 1088



state 982

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 88)

    CLOSE_PAR	shift, and go to state 1089



state 983

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 163)

    CLOSE_MPAR	shift, and go to state 1090



state 984

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 444)

    $default	reduce using rule 444 (struct_member_exp)



state 985

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 440)

    $default	reduce using rule 440 (struct_member_exp)



state 986

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 1091
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 987

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 988

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1092
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 989

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 1093



state 990

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 268)

    $default	reduce using rule 268 (String_Function_cat)



state 991

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 269)

    $default	reduce using rule 269 (String_Function_cmp)



state 992

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 270)

    $default	reduce using rule 270 (String_Function_cpy)



state 993

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1094
    bi_operator	go to state 331



state 994

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 164)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 164 (point_exp)]
    CON 	[reduce using rule 164 (point_exp)]
    ADDRESS	[reduce using rule 164 (point_exp)]
    LST 	[reduce using rule 164 (point_exp)]
    RST 	[reduce using rule 164 (point_exp)]
    MUL 	[reduce using rule 164 (point_exp)]
    DIV 	[reduce using rule 164 (point_exp)]
    MOD 	[reduce using rule 164 (point_exp)]
    $default	reduce using rule 164 (point_exp)

    bi_operator	go to state 331



state 995

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_PAR	shift, and go to state 1095
    ID  	shift, and go to state 1096
    INTLITERAL	shift, and go to state 1097



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    OPEN_PAR	shift, and go to state 1098
    ID  	shift, and go to state 1099
    INTLITERAL	shift, and go to state 1100



state 997

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    ID  	shift, and go to state 1101
    INTLITERAL	shift, and go to state 1102



state 998

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1103



state 999

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1104



state 1000

    option_input  ->  COMMA array option_input .   (rule 431)

    $default	reduce using rule 431 (option_input)



state 1001

    option_input  ->  COMMA identifier option_input .   (rule 430)

    $default	reduce using rule 430 (option_input)



state 1002

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 375)

    COMMA	shift, and go to state 676

    COMMA	[reduce using rule 72 (function)]
    CLOSE_PAR	reduce using rule 72 (function)
    CLOSE_PAR	[reduce using rule 380 (inner_option_function_identifier)]
    $default	reduce using rule 72 (function)

    inner_option_function_identifier	go to state 1105



state 1003

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 379)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 1106
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1004

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 378)

    $default	reduce using rule 378 (inner_option_function_identifier)



state 1005

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 157)

    $default	reduce using rule 157 (option_ari_exp)



state 1006

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 1007

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 1008

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    COMMA	shift, and go to state 480
    ASS_P	shift, and go to state 1107

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1108



state 1009

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 451)

    $default	reduce using rule 451 (option_struct_member_exp)



state 1010

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 450)

    $default	reduce using rule 450 (option_struct_member_exp)



state 1011

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 453)

    $default	reduce using rule 453 (option_struct_member_exp)



state 1012

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 452)

    $default	reduce using rule 452 (option_struct_member_exp)



state 1013

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 1109
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169



state 1014

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 173)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 173 (option_exp_else_statement)]
    CON 	[reduce using rule 173 (option_exp_else_statement)]
    ADDRESS	[reduce using rule 173 (option_exp_else_statement)]
    LST 	[reduce using rule 173 (option_exp_else_statement)]
    RST 	[reduce using rule 173 (option_exp_else_statement)]
    MUL 	[reduce using rule 173 (option_exp_else_statement)]
    DIV 	[reduce using rule 173 (option_exp_else_statement)]
    MOD 	[reduce using rule 173 (option_exp_else_statement)]
    $default	reduce using rule 173 (option_exp_else_statement)

    bi_operator	go to state 331



state 1015

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 242)

    $default	reduce using rule 242 (type_cast)



state 1016

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 244)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1110
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1017

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 172)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 172 (type_cast_alg_exp)]
    CON 	[reduce using rule 172 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 172 (type_cast_alg_exp)]
    LST 	[reduce using rule 172 (type_cast_alg_exp)]
    RST 	[reduce using rule 172 (type_cast_alg_exp)]
    MUL 	[reduce using rule 172 (type_cast_alg_exp)]
    DIV 	[reduce using rule 172 (type_cast_alg_exp)]
    MOD 	[reduce using rule 172 (type_cast_alg_exp)]
    $default	reduce using rule 172 (type_cast_alg_exp)

    bi_operator	go to state 338



state 1018

    casted_element  ->  MALLOC OPEN_PAR . ari_exp CLOSE_PAR   (rule 247)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1111
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1019

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 1020

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)



state 1021

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 241)

    $default	reduce using rule 241 (type_cast)



state 1022

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)



state 1023

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1024

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 1025

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1112
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1026

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 1027

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 240)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1113
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1028

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 245)

    $default	reduce using rule 245 (type_cast)



state 1029

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 294)

    $default	reduce using rule 294 (math_function)



state 1030

    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 295)

    $default	reduce using rule 295 (math_function)



state 1031

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 296)

    $default	reduce using rule 296 (math_function)



state 1032

    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 297)

    $default	reduce using rule 297 (math_function)



state 1033

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 298)

    $default	reduce using rule 298 (math_function)



state 1034

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    ID  	shift, and go to state 1096



state 1035

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    ID  	shift, and go to state 1099



state 1036

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    ID  	shift, and go to state 1101



state 1037

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1114



state 1038

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR option_case_par   (rule 413)

    COLON	shift, and go to state 1115



state 1039

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 412)

    $default	reduce using rule 412 (switch_statement)



state 1040

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 1116



state 1041

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    OPEN_PAR	shift, and go to state 1117



state 1042

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 346)

    $default	reduce using rule 346 (option_function_parameter_list)



state 1043

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 339)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1118



state 1044

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 338)

    $default	reduce using rule 338 (option_function_parameter_list)



state 1045

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 340)

    $default	reduce using rule 340 (option_function_parameter_list)



state 1046

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 343)

    $default	reduce using rule 343 (option_function_parameter_list)



state 1047

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 335)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1119



state 1048

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 334)

    $default	reduce using rule 334 (option_function_parameter_list)



state 1049

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 336)

    $default	reduce using rule 336 (option_function_parameter_list)



state 1050

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 354)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1120



state 1051

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 348)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1121



state 1052

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 352)

    $default	reduce using rule 352 (option_function_parameter_list)



state 1053

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1122
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1054

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 347)

    $default	reduce using rule 347 (option_function_parameter_list)



state 1055

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)

    COMMA	shift, and go to state 1123
    CLOSE_MPAR	shift, and go to state 1124
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1056

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 59)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1125
    empty_statement	go to state 1126
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 1057

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    OPEN_PAR	shift, and go to state 1127



state 1058

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 362)

    $default	reduce using rule 362 (inner_option_define_identifier)



state 1059

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 361)

    $default	reduce using rule 361 (inner_option_define_identifier)



state 1060

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 363)

    $default	reduce using rule 363 (inner_option_define_identifier)



state 1061

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 365)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1128



state 1062

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 371)

    $default	reduce using rule 371 (inner_option_define_identifier)



state 1063

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1129
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1064

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 364)

    $default	reduce using rule 364 (inner_option_define_identifier)



state 1065

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)

    COMMA	shift, and go to state 1130
    CLOSE_MPAR	shift, and go to state 1131
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1066

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)



state 1067

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1132
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 1068

    for_sta_control  ->  ass_statement .   (rule 410)

    $default	reduce using rule 410 (for_sta_control)



state 1069

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 404)

    CLOSE_PAR	shift, and go to state 1133



state 1070

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)

    CLOSE_PAR	shift, and go to state 1134
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357



state 1071

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    CLOSE_PAR	shift, and go to state 1135



state 1072

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 213)

    $default	reduce using rule 213 (inner_option_list_value)



state 1073

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 215)

    $default	reduce using rule 215 (inner_option_list_value)



state 1074

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 214)

    $default	reduce using rule 214 (inner_option_list_value)



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1136
    CHARDECLARATION	shift, and go to state 1137
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 1138
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 1076

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 1139



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1140



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1141
    CHARDECLARATION	shift, and go to state 1142
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 1143
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 1079

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    OPEN_MPAR	shift, and go to state 1144



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1145



state 1081

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    OPEN_MPAR	shift, and go to state 1146



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1147



state 1083

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1148
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 1149
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 1085

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1150
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1151

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1087

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 1152



state 1088

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    CLOSE_PAR	shift, and go to state 1153

    CLOSE_PAR	[reduce using rule 150 (array)]
    $default	reduce using rule 150 (array)



state 1089

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 1090

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 163)

    $default	reduce using rule 163 (point_exp)



state 1091

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 1092

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1154
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 1093

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1125
    empty_statement	go to state 1155
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 1094

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    CLOSE_MPAR	shift, and go to state 1156



state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 1157



state 1096

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 1076



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1077



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_PAR	shift, and go to state 1158



state 1099

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1079



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1080



state 1101

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1081



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1082



state 1103

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    ID  	shift, and go to state 1159



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_PAR	shift, and go to state 1160
    ID  	shift, and go to state 1161
    INTLITERAL	shift, and go to state 1162



state 1105

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 375)

    $default	reduce using rule 375 (option_function_identifier)



state 1106

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 379)

    CLOSE_PAR	shift, and go to state 1163



state 1107

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 104)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRLITERAL	shift, and go to state 176

    array_exp	go to state 1164
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    strliteral	go to state 1165



state 1108

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 1109

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 1110

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 244)

    $default	reduce using rule 244 (type_cast)



state 1111

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    casted_element  ->  MALLOC OPEN_PAR ari_exp . CLOSE_PAR   (rule 247)

    CLOSE_PAR	shift, and go to state 1166
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1112

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 1113

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 240)

    $default	reduce using rule 240 (type_cast)



state 1114

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    ID  	shift, and go to state 1161



state 1115

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR option_case_par   (rule 413)

    OPEN_PAR	shift, and go to state 1167



state 1116

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (file_statement)



state 1117

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1168



state 1118

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 339)

    $default	reduce using rule 339 (option_function_parameter_list)



state 1119

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 335)

    $default	reduce using rule 335 (option_function_parameter_list)



state 1120

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 354)

    $default	reduce using rule 354 (option_function_parameter_list)



state 1121

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 348)

    $default	reduce using rule 348 (option_function_parameter_list)



state 1122

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 351)

    CLOSE_MPAR	shift, and go to state 1169
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1123

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1170
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1124

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 349)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1171



state 1125

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 70)

    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 70 (empty_statement)



state 1126

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 1172



state 1127

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1173



state 1128

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 365)

    $default	reduce using rule 365 (inner_option_define_identifier)



state 1129

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 370)

    CLOSE_MPAR	shift, and go to state 1174
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1130

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1175
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1131

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 368)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1176



state 1132

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 1177
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 1133

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 404)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 1178



state 1134

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 1135

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    OPEN_PAR	shift, and go to state 1179



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 1180



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 1181



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 1182



state 1139

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1183
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1184
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 1185



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 1186



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 1187



state 1144

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1188
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1189
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1146

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1190
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1191
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1148

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    OPEN_MPAR	shift, and go to state 1192



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1193
    CHARDECLARATION	shift, and go to state 1194
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 1195
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 1150

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_MPAR	shift, and go to state 1196



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1197



state 1152

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 89)

    $default	reduce using rule 89 (declaration)



state 1153

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    OPEN_PAR	shift, and go to state 1198



state 1154

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1155

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 61)

    CLOSE_BPAR	shift, and go to state 1199



state 1156

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    CLOSE_PAR	shift, and go to state 1153



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    INTDECLARATION	shift, and go to state 1200
    CHARDECLARATION	shift, and go to state 1201
    UNSIGNED	shift, and go to state 1202



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTDECLARATION	shift, and go to state 1203
    CHARDECLARATION	shift, and go to state 1204
    UNSIGNED	shift, and go to state 1205



state 1159

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1148



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_PAR	shift, and go to state 1206



state 1161

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1150



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1151



state 1163

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 379)

    COMMA	shift, and go to state 676

    COMMA	[reduce using rule 72 (function)]
    CLOSE_PAR	reduce using rule 72 (function)
    CLOSE_PAR	[reduce using rule 380 (inner_option_function_identifier)]
    $default	reduce using rule 72 (function)

    inner_option_function_identifier	go to state 1207



state 1164

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 103)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    COMMA	shift, and go to state 480
    CON 	shift, and go to state 619

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1208



state 1165

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 104)

    COMMA	shift, and go to state 480

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1209



state 1166

    casted_element  ->  MALLOC OPEN_PAR ari_exp CLOSE_PAR .   (rule 247)

    $default	reduce using rule 247 (casted_element)



state 1167

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR option_case_par   (rule 413)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1210
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



state 1168

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 355)

    CLOSE_PAR	shift, and go to state 1211



state 1169

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1212



state 1170

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 350)

    CLOSE_MPAR	shift, and go to state 1213
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1171

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 349)

    $default	reduce using rule 349 (option_function_parameter_list)



state 1172

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 1173

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 366)

    CLOSE_PAR	shift, and go to state 1214



state 1174

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1215



state 1175

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 369)

    CLOSE_MPAR	shift, and go to state 1216
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



state 1176

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 368)

    $default	reduce using rule 368 (inner_option_define_identifier)



state 1177

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 1178

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 404)

    $default	reduce using rule 404 (extend_for_statement)



state 1179

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 146)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1217



state 1180

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 1218
    MUL 	shift, and go to state 710



state 1181

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1219
    MUL 	shift, and go to state 713



state 1182

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 1220



state 1183

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1221
    bi_operator	go to state 331



state 1184

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1222
    bi_operator	go to state 331



state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 1223
    MUL 	shift, and go to state 710



state 1186

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1224
    MUL 	shift, and go to state 713



state 1187

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 1225



state 1188

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1226
    bi_operator	go to state 331



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1227
    bi_operator	go to state 331



state 1190

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1228
    bi_operator	go to state 331



state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1229
    bi_operator	go to state 331



state 1192

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1230
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1193

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 1231



state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 1232



state 1195

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 1233



state 1196

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1234
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1197

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1235
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1198

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1236



state 1199

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 61)

    $default	reduce using rule 61 (statement)



state 1200

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 1237



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    MUL 	shift, and go to state 1238



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CHARDECLARATION	shift, and go to state 1239



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1240



state 1204

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1241



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CHARDECLARATION	shift, and go to state 1242



state 1206

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    INTDECLARATION	shift, and go to state 1243
    CHARDECLARATION	shift, and go to state 1244
    UNSIGNED	shift, and go to state 1245



state 1207

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 379)

    $default	reduce using rule 379 (inner_option_function_identifier)



state 1208

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 1209

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)



state 1210

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR option_case_par   (rule 413)

    CLOSE_PAR	shift, and go to state 1246
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257



state 1211

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 355)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1247



state 1212

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 351)

    $default	reduce using rule 351 (option_function_parameter_list)



state 1213

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 350)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1248



state 1214

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 366)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1249



state 1215

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 370)

    $default	reduce using rule 370 (inner_option_define_identifier)



state 1216

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 369)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1250



state 1217

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 146)

    CLOSE_PAR	shift, and go to state 1251



state 1218

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 1252
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1219

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 1253
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1220

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1254
    MUL 	shift, and go to state 893



state 1221

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

    CLOSE_MPAR	shift, and go to state 1255



state 1222

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1256



state 1223

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 1257
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1224

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 1258
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1225

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1259
    MUL 	shift, and go to state 893



state 1226

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 1260



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1261



state 1228

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1262



state 1229

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1263



state 1230

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1264
    bi_operator	go to state 331



state 1231

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 1265
    MUL 	shift, and go to state 710



state 1232

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1266
    MUL 	shift, and go to state 713



state 1233

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 1267



state 1234

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 155)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1268
    bi_operator	go to state 331



state 1235

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1269
    bi_operator	go to state 331



state 1236

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 91)

    CLOSE_PAR	shift, and go to state 1270



state 1237

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1271



state 1238

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1272



state 1239

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    MUL 	shift, and go to state 1273



state 1240

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1274



state 1241

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1275



state 1242

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1276



state 1243

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    MUL 	shift, and go to state 1277



state 1244

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1278



state 1245

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CHARDECLARATION	shift, and go to state 1279



state 1246

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . option_case_par   (rule 413)

    CASE	shift, and go to state 911
    BREAK	shift, and go to state 1280

    $default	reduce using rule 416 (option_case_par)

    case_par	go to state 1281
    option_case_par	go to state 1282



state 1247

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 355)

    $default	reduce using rule 355 (option_function_parameter_list)



state 1248

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 350)

    $default	reduce using rule 350 (option_function_parameter_list)



state 1249

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 366)

    $default	reduce using rule 366 (inner_option_define_identifier)



state 1250

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 369)

    $default	reduce using rule 369 (inner_option_define_identifier)



state 1251

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 146)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 1283
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 1284

    function	go to state 1285
    file_statement	go to state 81
    array	go to state 1286
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93



state 1252

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1287

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1253

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1288

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1254

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1289
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1255

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    $default	reduce using rule 151 (array)



state 1256

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1257

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1290

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1258

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1291

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1259

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1292
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1260

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (array)



state 1261

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1262

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (array)



state 1263

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1264

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 1293



state 1265

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 1294
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1266

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 1295
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1267

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1296
    MUL 	shift, and go to state 893



state 1268

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 155)

    CLOSE_MPAR	shift, and go to state 1297



state 1269

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1298



state 1270

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 91)

    ASS_P	shift, and go to state 1299

    $default	reduce using rule 90 (declaration)



state 1271

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    INTLITERAL	shift, and go to state 1300



state 1272

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    INTLITERAL	shift, and go to state 1301



state 1273

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1302



state 1274

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1303



state 1275

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    INTLITERAL	shift, and go to state 1304



state 1276

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1305



state 1277

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1306



state 1278

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1307



state 1279

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1308



state 1280

    option_case_par  ->  BREAK . case_par   (rule 414)

    CASE	shift, and go to state 911

    case_par	go to state 1309



state 1281

    option_case_par  ->  case_par .   (rule 415)

    $default	reduce using rule 415 (option_case_par)



state 1282

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par .   (rule 413)

    $default	reduce using rule 413 (case_par)



state 1283

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 1310
    ID  	shift, and go to state 1311

    array	go to state 578



state 1284

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_PAR	shift, and go to state 248
    OPEN_MPAR	shift, and go to state 249



state 1285

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 146)

    $default	reduce using rule 146 (ass_right)



state 1286

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 264



state 1287

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1312



state 1288

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1313



state 1289

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1314

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1290

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1315



state 1291

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1316



state 1292

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1317

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1293

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (array)



state 1294

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1318

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1295

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1319

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1296

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1320
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1297

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 155)

    $default	reduce using rule 155 (array)



state 1298

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1299

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 91)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398

    array_exp	go to state 1321
    option_list_value	go to state 404
    option_struct_list_value	go to state 405



state 1300

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1287



state 1301

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1288



state 1302

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    INTLITERAL	shift, and go to state 1322



state 1303

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1290



state 1304

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1291



state 1305

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1323



state 1306

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    INTLITERAL	shift, and go to state 1324



state 1307

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1325



state 1308

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1326



state 1309

    option_case_par  ->  BREAK case_par .   (rule 414)

    $default	reduce using rule 414 (option_case_par)



state 1310

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)

    INTDECLARATION	shift, and go to state 748
    CHARDECLARATION	shift, and go to state 749
    FLOATDECLARATION	shift, and go to state 750
    OPEN_PAR	shift, and go to state 1310
    UNSIGNED	shift, and go to state 751
    ID  	shift, and go to state 1311

    array	go to state 578



state 1311

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_MPAR	shift, and go to state 249



state 1312

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 1327



state 1313

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_MPAR	shift, and go to state 1328



state 1314

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1329



state 1315

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1330



state 1316

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1331



state 1317

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1332



state 1318

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1333



state 1319

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1334



state 1320

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1335

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



state 1321

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 91)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    CON 	shift, and go to state 619

    $default	reduce using rule 91 (declaration)



state 1322

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1314



state 1323

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1317



state 1324

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1318



state 1325

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1319



state 1326

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTLITERAL	shift, and go to state 1336



state 1327

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1337
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1328

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1338
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1329

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 1339



state 1330

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1340
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1331

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1341
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1332

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1342



state 1333

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_MPAR	shift, and go to state 1343



state 1334

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1344



state 1335

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1345



state 1336

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1335



state 1337

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1346
    bi_operator	go to state 331



state 1338

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1347
    bi_operator	go to state 331



state 1339

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1348
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1340

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1349
    bi_operator	go to state 331



state 1341

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1350
    bi_operator	go to state 331



state 1342

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1351
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1343

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1352
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1344

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1353
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1345

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1354



state 1346

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1355



state 1347

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 1356



state 1348

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1357
    bi_operator	go to state 331



state 1349

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1358



state 1350

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1359



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1360
    bi_operator	go to state 331



state 1352

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 137)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1361
    bi_operator	go to state 331



state 1353

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1362
    bi_operator	go to state 331



state 1354

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1363
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



state 1355

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (leftaddrshift)



state 1356

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    $default	reduce using rule 138 (leftaddrshift)



state 1357

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 1364



state 1358

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1359

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1360

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1365



state 1361

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 137)

    CLOSE_MPAR	shift, and go to state 1366



state 1362

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1367



state 1363

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1368
    bi_operator	go to state 331



state 1364

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (leftaddrshift)



state 1365

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1366

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 137)

    $default	reduce using rule 137 (leftaddrshift)



state 1367

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1368

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1369



state 1369

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)



state 1370

    $   	go to state 1371



state 1371

    $   	go to state 1372



state 1372

    $default	accept
