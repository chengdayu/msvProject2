#include<stdio.h>
#include<stdlib.h>
 struct S_TAG_RECOG__00_FF {
 int index;
 int state;
 int counter;
 int num;
 };
 struct S_TAG_DECODE_00_FF {
 unsigned char *decodeAddr;
 int decodeSt;
 int delelteIdx[32];
 int blkNum;
 int blkIdx; 
 int blkLen[4]; 
 int winPos;
 };

int $$state_num=0;
S_TAG_DECODE_00_FF mDecodeVar;
char *  memcpy(int $$Ext,unsigned char *des,unsigned char * src,int num);
void  DecodeRec00(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer);
void  DecodeRecFF(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer);
int  DecodeFindIndexDelete(int $$Ext,unsigned char buffer[],int len$,int deleteIdx[]);
void  DecodeRemoveBytes(int $$Ext,unsigned char buffer[],int bLen,int deleteIdx[],int dLen);
int  DecodeWinMerge(int $$Ext,unsigned char *startAddr,int blkSize,int blkNum,int blkLen[]);
void  DecodeRemoveBlk(int $$Ext,unsigned char *startAddr,int winPos,int blkNum,int winRemoveNum);
int  DecodeLenUpdate(int $$Ext,int lastIdx,int winPos,int winSize,int blkNum,int newLen[]);
int  DecodeRemoveByteBlk(int $$Ext,unsigned char buffer[],int len$,int delelteIdx[]);
int  DecodeDataMerge(int $$Ext,unsigned char *startAddr,int winPos,int * blkNum,int newLen[]);
void  DecodeInitial(int $$Ext,unsigned char *addr);
void  DecodeGetState(int $$Ext,int *st,int * blockNum,int * lastLen);
void  DecodeEntry(int $$Ext);
void  FillBuffer(int $$Ext,unsigned char buffer[],int len$);
void  TestCmdE2DataMerge(int $$Ext);
char *  memcpy(int $$Ext,unsigned char *des,unsigned char * src,int num){
char *  RValue=0;
int i;
i=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
while(i<num){if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
des[i]=src[i];
if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
i=(i)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeRec00(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer){
int return_1;
unsigned char DecodeRec00_ch;
unsigned char DecodeRec00_ch1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRec00_ch=buffer[recog->index];
if (DecodeRec00_ch==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=(recog->counter)+(1);
if (recog->counter==20){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRec00_ch1=buffer[(recog->index)+(1)];
if (DecodeRec00_ch1==170){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
deleteIdx[recog->num]=(recog->index)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->num=(recog->num)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->index=(recog->index)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if (DecodeRec00_ch==255){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=43690;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
}
;
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  DecodeRecFF(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer){
int return_1;
unsigned char DecodeRecFF_ch;
unsigned char DecodeRecFF_ch1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRecFF_ch=buffer[recog->index];
if (DecodeRecFF_ch==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=21845;
} else {if (DecodeRecFF_ch==255){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=(recog->counter)+(1);
if (recog->counter==20){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRecFF_ch1=buffer[(recog->index)+(1)];
if (DecodeRecFF_ch1==85){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
deleteIdx[recog->num]=(recog->index)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->num=(recog->num)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->index=(recog->index)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
}
;
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
int  DecodeFindIndexDelete(int $$Ext,unsigned char buffer[],int len$,int deleteIdx[]){
int  RValue=0;
int return_1;
S_TAG_RECOG__00_FF DecodeFindIndexDelete_recog;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.state=13107;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.num=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.index=0;
while(DecodeFindIndexDelete_recog.index<(len$)-(1)){if (DecodeFindIndexDelete_recog.state==21845){DecodeRec00(0,deleteIdx,&DecodeFindIndexDelete_recog,buffer);
} else {if (DecodeFindIndexDelete_recog.state==43690){DecodeRecFF(0,deleteIdx,&DecodeFindIndexDelete_recog,buffer);
} else {if (buffer[DecodeFindIndexDelete_recog.index]==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.state=21845;
} else {if (buffer[DecodeFindIndexDelete_recog.index]==255){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.state=43690;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
}
;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.index=(DecodeFindIndexDelete_recog.index)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=DecodeFindIndexDelete_recog.num;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeRemoveBytes(int $$Ext,unsigned char buffer[],int bLen,int deleteIdx[],int dLen){
int return_1;
int DecodeRemoveBytes_i;
int DecodeRemoveBytes_j;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_i=0;
while(DecodeRemoveBytes_i<(dLen)-(1)){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(deleteIdx[DecodeRemoveBytes_i])+(1);
while(DecodeRemoveBytes_j<deleteIdx[(DecodeRemoveBytes_i)+(1)]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[((DecodeRemoveBytes_j)-(DecodeRemoveBytes_i))-(1)]=buffer[DecodeRemoveBytes_j];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(DecodeRemoveBytes_j)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_i=(DecodeRemoveBytes_i)+(1);
}
;
if (dLen>0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(deleteIdx[(dLen)-(1)])+(1);
while(DecodeRemoveBytes_j<bLen){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[(DecodeRemoveBytes_j)-(dLen)]=buffer[DecodeRemoveBytes_j];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(DecodeRemoveBytes_j)+(1);
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
int  DecodeWinMerge(int $$Ext,unsigned char *startAddr,int blkSize,int blkNum,int blkLen[]){
int  RValue=0;
int return_1;
int DecodeWinMerge_i;
int DecodeWinMerge_j;
unsigned char DecodeWinMerge_tmpBuffer[40];
int DecodeWinMerge_tmpRemoveIdx[16];
int DecodeWinMerge_tmpNum;
int DecodeWinMerge_shiftLen;
int DecodeWinMerge_removeLen;
int DecodeWinMerge_idxTarget;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpRemoveIdx[0]=-1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=1;
while(DecodeWinMerge_i<blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=0;
while(DecodeWinMerge_j<20){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpBuffer[DecodeWinMerge_j]=startAddr[(((((DecodeWinMerge_i)-(1))*blkSize)+(blkLen[(DecodeWinMerge_i)-(1)]))-(20))+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpBuffer[(20)+(DecodeWinMerge_j)]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
DecodeWinMerge_tmpNum=DecodeFindIndexDelete(0,DecodeWinMerge_tmpBuffer,40,&DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]);
if (DecodeWinMerge_tmpNum==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]=-1;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]=(DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i])-(20);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=(DecodeWinMerge_i)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_shiftLen=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_removeLen=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=-1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=1;
while(DecodeWinMerge_i<blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_shiftLen=(DecodeWinMerge_shiftLen)+((blkSize)-(blkLen[(DecodeWinMerge_i)-(1)]));
if (DecodeWinMerge_tmpRemoveIdx[(DecodeWinMerge_i)-(1)]>=0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_removeLen=(DecodeWinMerge_removeLen)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if (DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]<0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=0;
while(DecodeWinMerge_j<blkLen[DecodeWinMerge_i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=(((DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j))-(DecodeWinMerge_removeLen))-(DecodeWinMerge_shiftLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
startAddr[DecodeWinMerge_idxTarget]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=0;
while(DecodeWinMerge_j<DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=(((DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j))-(DecodeWinMerge_removeLen))-(DecodeWinMerge_shiftLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
startAddr[DecodeWinMerge_idxTarget]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i])+(1);
while(DecodeWinMerge_j<blkLen[DecodeWinMerge_i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=((((DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j))-(DecodeWinMerge_removeLen))-(DecodeWinMerge_shiftLen))-(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
startAddr[DecodeWinMerge_idxTarget]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=(DecodeWinMerge_i)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=(DecodeWinMerge_idxTarget)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeRemoveBlk(int $$Ext,unsigned char *startAddr,int winPos,int blkNum,int winRemoveNum){
int return_1;
int DecodeRemoveBlk_i;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBlk_i=(winPos)+(4);
while(DecodeRemoveBlk_i<blkNum){memcpy(0,&startAddr[((DecodeRemoveBlk_i)-(winRemoveNum))*32],&startAddr[DecodeRemoveBlk_i*32],32);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBlk_i=(DecodeRemoveBlk_i)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
int  DecodeLenUpdate(int $$Ext,int lastIdx,int winPos,int winSize,int blkNum,int newLen[]){
int  RValue=0;
int break_1;
int return_1;
int DecodeLenUpdate_i;
int DecodeLenUpdate_winRemoveNum;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=0;
while((break_1==0) && (DecodeLenUpdate_i<winSize)){if (lastIdx>32){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
newLen[(winPos)+(DecodeLenUpdate_i)]=32;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
lastIdx=(lastIdx)-(32);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
newLen[(winPos)+(DecodeLenUpdate_i)]=lastIdx;
break_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if (break_1==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=(DecodeLenUpdate_i)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_winRemoveNum=((winSize)-(DecodeLenUpdate_i))-(1);
if (DecodeLenUpdate_winRemoveNum>0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=(winPos)+(winSize);
while(DecodeLenUpdate_i<blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
newLen[(DecodeLenUpdate_i)-(DecodeLenUpdate_winRemoveNum)]=newLen[DecodeLenUpdate_i];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=(DecodeLenUpdate_i)+(1);
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=DecodeLenUpdate_winRemoveNum;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
int  DecodeRemoveByteBlk(int $$Ext,unsigned char buffer[],int len$,int delelteIdx[]){
int  RValue=0;
int return_1;
int DecodeRemoveByteBlk_delCnt;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveByteBlk_delCnt=DecodeFindIndexDelete(0,buffer,32,delelteIdx);
DecodeRemoveBytes(0,buffer,len$,delelteIdx,DecodeRemoveByteBlk_delCnt);
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=(len$)-(DecodeRemoveByteBlk_delCnt);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
int  DecodeDataMerge(int $$Ext,unsigned char *startAddr,int winPos,int * blkNum,int newLen[]){
int  RValue=0;
int return_1;
int DecodeDataMerge_winEleCnt;
int DecodeDataMerge_tmpWinSize;
int DecodeDataMerge_winRemoveNum;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if ((winPos)+(4)>*(blkNum)){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeDataMerge_tmpWinSize=(*(blkNum))-(winPos);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeDataMerge_tmpWinSize=4;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeDataMerge_winRemoveNum=0;
if (DecodeDataMerge_tmpWinSize>1){DecodeDataMerge_winEleCnt=DecodeWinMerge(0,&startAddr[winPos*32],32,DecodeDataMerge_tmpWinSize,&newLen[winPos]);
DecodeDataMerge_winRemoveNum=DecodeLenUpdate(0,DecodeDataMerge_winEleCnt,winPos,DecodeDataMerge_tmpWinSize,*(blkNum),newLen);
if (DecodeDataMerge_winRemoveNum>0){DecodeRemoveBlk(0,startAddr,winPos,*(blkNum),DecodeDataMerge_winRemoveNum);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(blkNum)=(*(blkNum))-(DecodeDataMerge_winRemoveNum);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=DecodeDataMerge_winRemoveNum;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeInitial(int $$Ext,unsigned char *addr){
int return_1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeAddr=addr;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=13107;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.blkNum=4;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.blkIdx=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.winPos=0;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  DecodeGetState(int $$Ext,int *st,int * blockNum,int * lastLen){
int return_1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(st)=mDecodeVar.decodeSt;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(blockNum)=mDecodeVar.blkNum;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(lastLen)=mDecodeVar.blkLen[(mDecodeVar.blkNum)-(1)];
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  DecodeEntry(int $$Ext){
int return_1;
int DecodeEntry_i;
int DecodeEntry_winRemoveNum;
int switch_1;
int break_1$;
int nm_1$;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
break_1$=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
switch_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
nm_1$=mDecodeVar.decodeSt;
if ((nm_1$==13107) || (((switch_1==1) && (break_1$==0)) && (return_1==0))){switch_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=21845;
break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if ((nm_1$==21845) || (((switch_1==1) && (break_1$==0)) && (return_1==0))){switch_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=0;
while((mDecodeVar.blkIdx<mDecodeVar.blkNum) && (DecodeEntry_i<4)){mDecodeVar.blkLen[(mDecodeVar.blkIdx)+(DecodeEntry_i)]=DecodeRemoveByteBlk(0,&mDecodeVar.decodeAddr[((mDecodeVar.blkIdx)+(DecodeEntry_i))*32],32,mDecodeVar.delelteIdx);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=(DecodeEntry_i)+(1);
}
;
if (mDecodeVar.blkIdx>=mDecodeVar.blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=43690;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.blkIdx=(mDecodeVar.blkIdx)+(4);
}
;
break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if ((nm_1$==43690) || (((switch_1==1) && (break_1$==0)) && (return_1==0))){switch_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=0;
while((mDecodeVar.winPos<mDecodeVar.blkNum) && (DecodeEntry_i<4)){DecodeEntry_winRemoveNum=DecodeDataMerge(0,mDecodeVar.decodeAddr,mDecodeVar.winPos,&mDecodeVar.blkNum,mDecodeVar.blkLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.winPos=(((mDecodeVar.winPos)+(4))-(1))-(DecodeEntry_winRemoveNum);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=(DecodeEntry_i)+(1);
}
;
if (mDecodeVar.winPos>=mDecodeVar.blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=52428;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if ((break_1$==0) && (return_1==0)){break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  FillBuffer(int $$Ext,unsigned char buffer[],int len$){
int return_1;
unsigned char FillBuffer_flg;
int FillBuffer_i;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_flg=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_i=0;
while(FillBuffer_i<len$){if (FillBuffer_flg==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=0;
if (((FillBuffer_i)+(1))%21==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=170;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_flg=1;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=255;
if (((FillBuffer_i)+(1))%21==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=85;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_flg=0;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_i=(FillBuffer_i)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  TestCmdE2DataMerge(int $$Ext){
int break_1;
int return_1;
int TestCmdE2DataMerge_len08;
unsigned char TestCmdE2DataMerge_buffer[4][32];
int TestCmdE2DataMerge_blkNum;
int TestCmdE2DataMerge_i;
int TestCmdE2DataMerge_cnt;
int TestCmdE2DataMerge_lastLen;
int TestCmdE2DataMerge_st;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("break_1=%d ",break_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_len08=32*4;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_blkNum=4;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer(0,(unsigned char *)(TestCmdE2DataMerge_buffer),TestCmdE2DataMerge_len08);
DecodeInitial(0,(unsigned char *)(TestCmdE2DataMerge_buffer));
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
while((break_1==0) && (1)){DecodeEntry(0);
DecodeGetState(0,&TestCmdE2DataMerge_st,&TestCmdE2DataMerge_blkNum,&TestCmdE2DataMerge_lastLen);
if (TestCmdE2DataMerge_st==52428){break_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_cnt=(((TestCmdE2DataMerge_blkNum)-(1))*32)+(TestCmdE2DataMerge_lastLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_i=0;
while(TestCmdE2DataMerge_i<TestCmdE2DataMerge_cnt){printf("%c",TestCmdE2DataMerge_buffer[TestCmdE2DataMerge_i]);
printf("x ");
printf("x ");
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if (((TestCmdE2DataMerge_i)+(1))%20==0){printf("\n");
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_i=(TestCmdE2DataMerge_i)+(1);
}
;
printf("%d",TestCmdE2DataMerge_cnt);
printf("\n");
printf("\n");
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}

int main() {
DecodeEntry(0);
printf("state %d:", $$state_num);
printf("Global: ");
printf("\n");
$$state_num++;
printf("state %d:", $$state_num);
printf("Global: ");
printf("\n");
$$state_num++;
return 0;
}
