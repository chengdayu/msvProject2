#include<stdio.h>
#include<stdlib.h>
int $$state_num=0;
int a[20,4];
int b[20];
char name[4]={空手"空手",带狼"带狼",带羊"带羊",带菜"带菜"};
char *  memcpy(int $$Ext,char *des,char * src,int num){
char *  RValue;
int i;
i=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("i=%d ",i);
printf("num=%d ",num);
printf("\n");
$$state_num++;
};
while(i<num){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("i=%d ",i);
printf("num=%d ",num);
printf("\n");
$$state_num++;
};
des[i]=src[i];
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("i=%d ",i);
printf("num=%d ",num);
printf("\n");
$$state_num++;
};
i=i+1;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("i=%d ",i);
printf("num=%d ",num);
printf("\n");
$$state_num++;
};
return RValue;
}
int  memcmp(int $$Ext,char *buf1,char * buf2,int count){
int  RValue;
int i;
i=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("\n");
$$state_num++;
};
int resFlag;
resFlag=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
while(i<count && resFlag==0){if (buf1[i]==buf2[i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
i=i+1;
} else {if (buf1[i]>buf2[i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
resFlag=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
RValue=1;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
resFlag=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
RValue=-1;
}
;
}
;
}
;
if (resFlag==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
RValue=0;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("RValue=%d ",RValue);
printf("count=%d ",count);
printf("i=%d ",i);
printf("resFlag=%d ",resFlag);
printf("\n");
$$state_num++;
};
return RValue;
}
 main_1(int $$Ext){
int continue_1;
continue_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("\n");
$$state_num++;
};
int return_1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
continue_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
int main_iStep;
main_iStep=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
while(return_1==0 && main_iStep<8){continue_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
int main_i;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
if (a[main_iStep,0]+a[main_iStep,1]+a[main_iStep,2]+a[main_iStep,3]==4){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
main_i=0;
while(main_i<main_iStep){if (a[main_i,3]==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
main_i=main_i+1;
}
;
printf("\n");
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
if (return_1==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
main_i=0;
while(return_1==0 && main_i<main_iStep){if (memcmp(a[main_i],a[main_iStep],4,RValue)==0){return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
if (return_1==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
main_i=main_i+1;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
}
;
if (return_1==0){if (a[main_iStep,1]!=a[main_iStep,3] && a[main_iStep,2]==a[main_iStep,1] || a[main_iStep,0]==a[main_iStep,1]){return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
if (return_1==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
b[main_iStep]=-1;
memcpy(0,a[main_iStep+1],a[main_iStep],4);
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
a[main_iStep+1,3]=1-a[main_iStep+1,3];
if (b[main_iStep]==-1){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
main_iStep=main_iStep+1;
continue_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
if (continue_1==0){int main_j;
main_j=b[main_iStep];
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("main_j=%d ",main_j);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
if (a[main_iStep,main_j]==a[main_iStep,3]){if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("main_j=%d ",main_j);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
a[main_iStep+1,main_j]=a[main_iStep+1,3];
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("main_j=%d ",main_j);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
main_iStep=main_iStep+1;
continue_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("main_j=%d ",main_j);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("main_j=%d ",main_j);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
}
;
continue_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
if (return_1==0){return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("continue_1=%d ",continue_1);
printf("main_i=%d ",main_i);
printf("main_iStep=%d ",main_iStep);
printf("return_1=%d ",return_1);
printf("\n");
$$state_num++;
};
}

int main() {
printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("\n");
$$state_num++;
printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("\n");
$$state_num++;
printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("\n");
$$state_num++;
main_1(0);
printf("state %d:", $$state_num);
printf("a[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19]);
printf("b[20]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15],b[16],b[17],b[18],b[19]);
printf("\n");
$$state_num++;
return 0;
}
