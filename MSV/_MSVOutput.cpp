#include<stdio.h>
#include<stdlib.h>
 struct S_TAG_RECOG__00_FF {
 int index;
 int state;
 int counter;
 int num;
 };
 struct S_TAG_DECODE_00_FF {
 unsigned char *decodeAddr;
 int decodeSt;
 int delelteIdx[32];
 int blkNum;
 int blkIdx; 
 int blkLen[4]; 
 int winPos;
 };

int $$state_num=0;
<<<<<<< HEAD
S_TAG_DECODE_00_FF mDecodeVar;
char *  memcpy(int $$Ext,unsigned char *des,unsigned char * src,int num);
void  DecodeRec00(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer);
void  DecodeRecFF(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer);
int  DecodeFindIndexDelete(int $$Ext,unsigned char buffer[],int len$,int deleteIdx[]);
void  DecodeRemoveBytes(int $$Ext,unsigned char buffer[],int bLen,int deleteIdx[],int dLen);
int  DecodeWinMerge(int $$Ext,unsigned char *startAddr,int blkSize,int blkNum,int blkLen[]);
void  DecodeRemoveBlk(int $$Ext,unsigned char *startAddr,int winPos,int blkNum,int winRemoveNum);
int  DecodeLenUpdate(int $$Ext,int lastIdx,int winPos,int winSize,int blkNum,int newLen[]);
int  DecodeRemoveByteBlk(int $$Ext,unsigned char buffer[],int len$,int delelteIdx[]);
int  DecodeDataMerge(int $$Ext,unsigned char *startAddr,int winPos,int * blkNum,int newLen[]);
void  DecodeInitial(int $$Ext,unsigned char *addr);
void  DecodeGetState(int $$Ext,int *st,int * blockNum,int * lastLen);
void  DecodeEntry(int $$Ext);
void  FillBuffer(int $$Ext,unsigned char buffer[],int len$);
void  TestCmdE2DataMerge(int $$Ext);
char *  memcpy(int $$Ext,unsigned char *des,unsigned char * src,int num){
char *  RValue=0;
int i;
i=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
while(i<num){if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
des[i]=src[i];
if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
i=(i)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("memcpy: " );
printf("i=%d ",i);
printf("num=%d ",num);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeRec00(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer){
int return_1;
unsigned char DecodeRec00_ch;
unsigned char DecodeRec00_ch1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRec00_ch=buffer[recog->index];
if (DecodeRec00_ch==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=(recog->counter)+(1);
if (recog->counter==20){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRec00_ch1=buffer[(recog->index)+(1)];
if (DecodeRec00_ch1==170){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
deleteIdx[recog->num]=(recog->index)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->num=(recog->num)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->index=(recog->index)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if (DecodeRec00_ch==255){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=43690;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
}
;
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRec00: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  DecodeRecFF(int $$Ext,int deleteIdx[],S_TAG_RECOG__00_FF* recog,unsigned char * buffer){
int return_1;
unsigned char DecodeRecFF_ch;
unsigned char DecodeRecFF_ch1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRecFF_ch=buffer[recog->index];
if (DecodeRecFF_ch==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=21845;
} else {if (DecodeRecFF_ch==255){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=(recog->counter)+(1);
if (recog->counter==20){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRecFF_ch1=buffer[(recog->index)+(1)];
if (DecodeRecFF_ch1==85){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
deleteIdx[recog->num]=(recog->index)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->num=(recog->num)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->index=(recog->index)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
recog->state=13107;
}
;
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRecFF: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
int  DecodeFindIndexDelete(int $$Ext,unsigned char buffer[],int len$,int deleteIdx[]){
int  RValue=0;
int return_1;
S_TAG_RECOG__00_FF DecodeFindIndexDelete_recog;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.state=13107;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.counter=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.num=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.index=0;
while(DecodeFindIndexDelete_recog.index<(len$)-(1)){if (DecodeFindIndexDelete_recog.state==21845){DecodeRec00(0,deleteIdx,&DecodeFindIndexDelete_recog,buffer);
} else {if (DecodeFindIndexDelete_recog.state==43690){DecodeRecFF(0,deleteIdx,&DecodeFindIndexDelete_recog,buffer);
} else {if (buffer[DecodeFindIndexDelete_recog.index]==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.state=21845;
} else {if (buffer[DecodeFindIndexDelete_recog.index]==255){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.counter=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.state=43690;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
}
;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeFindIndexDelete_recog.index=(DecodeFindIndexDelete_recog.index)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=DecodeFindIndexDelete_recog.num;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeFindIndexDelete: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeRemoveBytes(int $$Ext,unsigned char buffer[],int bLen,int deleteIdx[],int dLen){
int return_1;
int DecodeRemoveBytes_i;
int DecodeRemoveBytes_j;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_i=0;
while(DecodeRemoveBytes_i<(dLen)-(1)){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(deleteIdx[DecodeRemoveBytes_i])+(1);
while(DecodeRemoveBytes_j<deleteIdx[(DecodeRemoveBytes_i)+(1)]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[((DecodeRemoveBytes_j)-(DecodeRemoveBytes_i))-(1)]=buffer[DecodeRemoveBytes_j];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(DecodeRemoveBytes_j)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_i=(DecodeRemoveBytes_i)+(1);
}
;
if (dLen>0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(deleteIdx[(dLen)-(1)])+(1);
while(DecodeRemoveBytes_j<bLen){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[(DecodeRemoveBytes_j)-(dLen)]=buffer[DecodeRemoveBytes_j];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBytes_j=(DecodeRemoveBytes_j)+(1);
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBytes: " );
printf("DecodeRemoveBytes_i=%d ",DecodeRemoveBytes_i);
printf("DecodeRemoveBytes_j=%d ",DecodeRemoveBytes_j);
printf("bLen=%d ",bLen);
printf("dLen=%d ",dLen);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
int  DecodeWinMerge(int $$Ext,unsigned char *startAddr,int blkSize,int blkNum,int blkLen[]){
int  RValue=0;
int return_1;
int DecodeWinMerge_i;
int DecodeWinMerge_j;
unsigned char DecodeWinMerge_tmpBuffer[40];
int DecodeWinMerge_tmpRemoveIdx[16];
int DecodeWinMerge_tmpNum;
int DecodeWinMerge_shiftLen;
int DecodeWinMerge_removeLen;
int DecodeWinMerge_idxTarget;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpRemoveIdx[0]=-1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=1;
while(DecodeWinMerge_i<blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=0;
while(DecodeWinMerge_j<20){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpBuffer[DecodeWinMerge_j]=startAddr[(((((DecodeWinMerge_i)-(1))*blkSize)+(blkLen[(DecodeWinMerge_i)-(1)]))-(20))+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpBuffer[(20)+(DecodeWinMerge_j)]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
DecodeWinMerge_tmpNum=DecodeFindIndexDelete(0,DecodeWinMerge_tmpBuffer,40,&DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]);
if (DecodeWinMerge_tmpNum==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]=-1;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]=(DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i])-(20);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=(DecodeWinMerge_i)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_shiftLen=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_removeLen=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=-1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=1;
while(DecodeWinMerge_i<blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_shiftLen=(DecodeWinMerge_shiftLen)+((blkSize)-(blkLen[(DecodeWinMerge_i)-(1)]));
if (DecodeWinMerge_tmpRemoveIdx[(DecodeWinMerge_i)-(1)]>=0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_removeLen=(DecodeWinMerge_removeLen)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if (DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]<0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=0;
while(DecodeWinMerge_j<blkLen[DecodeWinMerge_i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=(((DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j))-(DecodeWinMerge_removeLen))-(DecodeWinMerge_shiftLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
startAddr[DecodeWinMerge_idxTarget]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=0;
while(DecodeWinMerge_j<DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=(((DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j))-(DecodeWinMerge_removeLen))-(DecodeWinMerge_shiftLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
startAddr[DecodeWinMerge_idxTarget]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_tmpRemoveIdx[DecodeWinMerge_i])+(1);
while(DecodeWinMerge_j<blkLen[DecodeWinMerge_i]){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_idxTarget=((((DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j))-(DecodeWinMerge_removeLen))-(DecodeWinMerge_shiftLen))-(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
startAddr[DecodeWinMerge_idxTarget]=startAddr[(DecodeWinMerge_i*blkSize)+(DecodeWinMerge_j)];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_j=(DecodeWinMerge_j)+(1);
}
;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeWinMerge_i=(DecodeWinMerge_i)+(1);
}
=======
<<<<<<< HEAD

unsigned int a[4][32];
=======
<<<<<<< HEAD
int $$len_i=0;
int $$flag[10] = { 0 };
int $$length = 0, $$current = -1,$$firstTime=0;
void $$changeState()
{if ($$current == $$length){
$$length++; $$flag[$$length - 1] = 0;}
$$current++; }
int y;
int  f(int $$Ext,int x);
int  f(int $$Ext,int x){
int  RValue=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("f: " );
printf("RValue=%d ",RValue);
printf("x=%d ",x);
printf("Global: ");
printf("y=%d ",y);
printf("\n");
$$state_num++;
};
RValue=(x)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("f: " );
printf("RValue=%d ",RValue);
printf("x=%d ",x);
printf("Global: ");
printf("y=%d ",y);
printf("\n");
$$state_num++;
};
return RValue;
}

int main() {
while (true){
while ($$length > 0){
if ($$flag[$$length - 1] == 1){
$$length--;}
else {
$$flag[$$length - 1] = 1; break;}}
if ($$length == 0 && $$flag[0] == 1 || $$current == -1 && $$firstTime==1){break;}
y=0;
printf("state %d:", $$state_num);
=======
>>>>>>> f302894b28712b50d5ce84928fa1216f211122fc
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=(DecodeWinMerge_idxTarget)+(1);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeWinMerge: " );
printf("DecodeWinMerge_i=%d ",DecodeWinMerge_i);
printf("DecodeWinMerge_idxTarget=%d ",DecodeWinMerge_idxTarget);
printf("DecodeWinMerge_j=%d ",DecodeWinMerge_j);
printf("DecodeWinMerge_removeLen=%d ",DecodeWinMerge_removeLen);
printf("DecodeWinMerge_shiftLen=%d ",DecodeWinMerge_shiftLen);
printf("DecodeWinMerge_tmpNum=%d ",DecodeWinMerge_tmpNum);
printf("DecodeWinMerge_tmpRemoveIdx[16]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",DecodeWinMerge_tmpRemoveIdx[0],DecodeWinMerge_tmpRemoveIdx[1],DecodeWinMerge_tmpRemoveIdx[2],DecodeWinMerge_tmpRemoveIdx[3],DecodeWinMerge_tmpRemoveIdx[4],DecodeWinMerge_tmpRemoveIdx[5],DecodeWinMerge_tmpRemoveIdx[6],DecodeWinMerge_tmpRemoveIdx[7],DecodeWinMerge_tmpRemoveIdx[8],DecodeWinMerge_tmpRemoveIdx[9],DecodeWinMerge_tmpRemoveIdx[10],DecodeWinMerge_tmpRemoveIdx[11],DecodeWinMerge_tmpRemoveIdx[12],DecodeWinMerge_tmpRemoveIdx[13],DecodeWinMerge_tmpRemoveIdx[14],DecodeWinMerge_tmpRemoveIdx[15]);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("blkSize=%d ",blkSize);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeRemoveBlk(int $$Ext,unsigned char *startAddr,int winPos,int blkNum,int winRemoveNum){
int return_1;
int DecodeRemoveBlk_i;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBlk_i=(winPos)+(4);
while(DecodeRemoveBlk_i<blkNum){memcpy(0,&startAddr[((DecodeRemoveBlk_i)-(winRemoveNum))*32],&startAddr[DecodeRemoveBlk_i*32],32);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveBlk_i=(DecodeRemoveBlk_i)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveBlk: " );
printf("DecodeRemoveBlk_i=%d ",DecodeRemoveBlk_i);
printf("blkNum=%d ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winRemoveNum=%d ",winRemoveNum);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
int  DecodeLenUpdate(int $$Ext,int lastIdx,int winPos,int winSize,int blkNum,int newLen[]){
int  RValue=0;
int break_1;
int return_1;
int DecodeLenUpdate_i;
int DecodeLenUpdate_winRemoveNum;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=0;
while((break_1==0) && (DecodeLenUpdate_i<winSize)){if (lastIdx>32){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
newLen[(winPos)+(DecodeLenUpdate_i)]=32;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
lastIdx=(lastIdx)-(32);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
newLen[(winPos)+(DecodeLenUpdate_i)]=lastIdx;
break_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if (break_1==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=(DecodeLenUpdate_i)+(1);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_winRemoveNum=((winSize)-(DecodeLenUpdate_i))-(1);
if (DecodeLenUpdate_winRemoveNum>0){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
<<<<<<< HEAD
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
=======
>>>>>>> a6e7802144bcbb7cdaf3d55dcaf36d30388d2393
>>>>>>> f302894b28712b50d5ce84928fa1216f211122fc
printf("Global: ");
printf("\n");
$$state_num++;
<<<<<<< HEAD
if (f(1,y)){printf("state %d:", $$state_num);
=======
};
DecodeLenUpdate_i=(winPos)+(winSize);
while(DecodeLenUpdate_i<blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
<<<<<<< HEAD
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
=======
>>>>>>> a6e7802144bcbb7cdaf3d55dcaf36d30388d2393
>>>>>>> f302894b28712b50d5ce84928fa1216f211122fc
printf("Global: ");
printf("\n");
$$state_num++;
<<<<<<< HEAD
y=4;
} else {printf("state %d:", $$state_num);
=======
};
newLen[(DecodeLenUpdate_i)-(DecodeLenUpdate_winRemoveNum)]=newLen[DecodeLenUpdate_i];
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeLenUpdate_i=(DecodeLenUpdate_i)+(1);
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
<<<<<<< HEAD
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
=======
>>>>>>> a6e7802144bcbb7cdaf3d55dcaf36d30388d2393
>>>>>>> f302894b28712b50d5ce84928fa1216f211122fc
printf("Global: ");
printf("\n");
$$state_num++;
<<<<<<< HEAD
y=5;
}
;
printf("state %d:", $$state_num);
printf("Global: ");
printf("y=%d ",y);
printf("\n");
$$state_num++;
$$firstTime=1;
$$state_num=0;
printf("\n");
}
=======
};
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=DecodeLenUpdate_winRemoveNum;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeLenUpdate: " );
printf("DecodeLenUpdate_i=%d ",DecodeLenUpdate_i);
printf("DecodeLenUpdate_winRemoveNum=%d ",DecodeLenUpdate_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%d ",blkNum);
printf("break_1=%d ",break_1);
printf("lastIdx=%d ",lastIdx);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("winSize=%d ",winSize);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
int  DecodeRemoveByteBlk(int $$Ext,unsigned char buffer[],int len$,int delelteIdx[]){
int  RValue=0;
int return_1;
int DecodeRemoveByteBlk_delCnt;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeRemoveByteBlk_delCnt=DecodeFindIndexDelete(0,buffer,32,delelteIdx);
DecodeRemoveBytes(0,buffer,len$,delelteIdx,DecodeRemoveByteBlk_delCnt);
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=(len$)-(DecodeRemoveByteBlk_delCnt);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeRemoveByteBlk: " );
printf("DecodeRemoveByteBlk_delCnt=%d ",DecodeRemoveByteBlk_delCnt);
printf("RValue=%d ",RValue);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
int  DecodeDataMerge(int $$Ext,unsigned char *startAddr,int winPos,int * blkNum,int newLen[]){
int  RValue=0;
int return_1;
int DecodeDataMerge_winEleCnt;
int DecodeDataMerge_tmpWinSize;
int DecodeDataMerge_winRemoveNum;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if ((winPos)+(4)>*(blkNum)){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeDataMerge_tmpWinSize=(*(blkNum))-(winPos);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeDataMerge_tmpWinSize=4;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeDataMerge_winRemoveNum=0;
if (DecodeDataMerge_tmpWinSize>1){DecodeDataMerge_winEleCnt=DecodeWinMerge(0,&startAddr[winPos*32],32,DecodeDataMerge_tmpWinSize,&newLen[winPos]);
DecodeDataMerge_winRemoveNum=DecodeLenUpdate(0,DecodeDataMerge_winEleCnt,winPos,DecodeDataMerge_tmpWinSize,*(blkNum),newLen);
if (DecodeDataMerge_winRemoveNum>0){DecodeRemoveBlk(0,startAddr,winPos,*(blkNum),DecodeDataMerge_winRemoveNum);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(blkNum)=(*(blkNum))-(DecodeDataMerge_winRemoveNum);
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
RValue=DecodeDataMerge_winRemoveNum;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeDataMerge: " );
printf("DecodeDataMerge_tmpWinSize=%d ",DecodeDataMerge_tmpWinSize);
printf("DecodeDataMerge_winEleCnt=%d ",DecodeDataMerge_winEleCnt);
printf("DecodeDataMerge_winRemoveNum=%d ",DecodeDataMerge_winRemoveNum);
printf("RValue=%d ",RValue);
printf("blkNum=%p ",blkNum);
printf("return_1=%d ",return_1);
printf("winPos=%d ",winPos);
printf("Global: ");
printf("\n");
$$state_num++;
};
return RValue;
}
void  DecodeInitial(int $$Ext,unsigned char *addr){
int return_1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeAddr=addr;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=13107;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.blkNum=4;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.blkIdx=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.winPos=0;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeInitial: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  DecodeGetState(int $$Ext,int *st,int * blockNum,int * lastLen){
int return_1;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(st)=mDecodeVar.decodeSt;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(blockNum)=mDecodeVar.blkNum;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
*(lastLen)=mDecodeVar.blkLen[(mDecodeVar.blkNum)-(1)];
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeGetState: " );
printf("blockNum=%p ",blockNum);
printf("lastLen=%p ",lastLen);
printf("return_1=%d ",return_1);
printf("st=%p ",st);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  DecodeEntry(int $$Ext){
int return_1;
int DecodeEntry_i;
int DecodeEntry_winRemoveNum;
int switch_1;
int break_1$;
int nm_1$;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
break_1$=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
switch_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
nm_1$=mDecodeVar.decodeSt;
if ((nm_1$==13107) || (((switch_1==1) && (break_1$==0)) && (return_1==0))){switch_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=21845;
break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if ((nm_1$==21845) || (((switch_1==1) && (break_1$==0)) && (return_1==0))){switch_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=0;
while((mDecodeVar.blkIdx<mDecodeVar.blkNum) && (DecodeEntry_i<4)){mDecodeVar.blkLen[(mDecodeVar.blkIdx)+(DecodeEntry_i)]=DecodeRemoveByteBlk(0,&mDecodeVar.decodeAddr[((mDecodeVar.blkIdx)+(DecodeEntry_i))*32],32,mDecodeVar.delelteIdx);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=(DecodeEntry_i)+(1);
}
;
if (mDecodeVar.blkIdx>=mDecodeVar.blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=43690;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.blkIdx=(mDecodeVar.blkIdx)+(4);
}
;
break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if ((nm_1$==43690) || (((switch_1==1) && (break_1$==0)) && (return_1==0))){switch_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=0;
while((mDecodeVar.winPos<mDecodeVar.blkNum) && (DecodeEntry_i<4)){DecodeEntry_winRemoveNum=DecodeDataMerge(0,mDecodeVar.decodeAddr,mDecodeVar.winPos,&mDecodeVar.blkNum,mDecodeVar.blkLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.winPos=(((mDecodeVar.winPos)+(4))-(1))-(DecodeEntry_winRemoveNum);
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
DecodeEntry_i=(DecodeEntry_i)+(1);
}
;
if (mDecodeVar.winPos>=mDecodeVar.blkNum){if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
mDecodeVar.decodeSt=52428;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if ((break_1$==0) && (return_1==0)){break_1$=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("DecodeEntry: " );
printf("DecodeEntry_i=%d ",DecodeEntry_i);
printf("DecodeEntry_winRemoveNum=%d ",DecodeEntry_winRemoveNum);
printf("break_1$=%d ",break_1$);
printf("nm_1$=%d ",nm_1$);
printf("return_1=%d ",return_1);
printf("switch_1=%d ",switch_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  FillBuffer(int $$Ext,unsigned char buffer[],int len$){
int return_1;
unsigned char FillBuffer_flg;
int FillBuffer_i;
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_flg=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_i=0;
while(FillBuffer_i<len$){if (FillBuffer_flg==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=0;
if (((FillBuffer_i)+(1))%21==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=170;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_flg=1;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=255;
if (((FillBuffer_i)+(1))%21==0){if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
buffer[FillBuffer_i]=85;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_flg=0;
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer_i=(FillBuffer_i)+(1);
}
;
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("FillBuffer: " );
printf("FillBuffer_i=%d ",FillBuffer_i);
printf("len$=%d ",len$);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
void  TestCmdE2DataMerge(int $$Ext){
int break_1;
int return_1;
int TestCmdE2DataMerge_len08;
unsigned char TestCmdE2DataMerge_buffer[4][32];
int TestCmdE2DataMerge_blkNum;
int TestCmdE2DataMerge_i;
int TestCmdE2DataMerge_cnt;
int TestCmdE2DataMerge_lastLen;
int TestCmdE2DataMerge_st;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("break_1=%d ",break_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_len08=32*4;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_blkNum=4;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
FillBuffer(0,(unsigned char *)(TestCmdE2DataMerge_buffer),TestCmdE2DataMerge_len08);
DecodeInitial(0,(unsigned char *)(TestCmdE2DataMerge_buffer));
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
while((break_1==0) && (1)){DecodeEntry(0);
DecodeGetState(0,&TestCmdE2DataMerge_st,&TestCmdE2DataMerge_blkNum,&TestCmdE2DataMerge_lastLen);
if (TestCmdE2DataMerge_st==52428){break_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
}
;
break_1=0;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_cnt=(((TestCmdE2DataMerge_blkNum)-(1))*32)+(TestCmdE2DataMerge_lastLen);
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_i=0;
while(TestCmdE2DataMerge_i<TestCmdE2DataMerge_cnt){printf("%c",TestCmdE2DataMerge_buffer[TestCmdE2DataMerge_i]);
printf("x ");
printf("x ");
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
if (((TestCmdE2DataMerge_i)+(1))%20==0){printf("\n");
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
} else {if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}
;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
TestCmdE2DataMerge_i=(TestCmdE2DataMerge_i)+(1);
}
;
printf("%d",TestCmdE2DataMerge_cnt);
printf("\n");
printf("\n");
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
return_1=1;
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
<<<<<<< HEAD
if(!$$Ext){printf("state %d:", $$state_num);
printf("TestCmdE2DataMerge: " );
printf("TestCmdE2DataMerge_blkNum=%d ",TestCmdE2DataMerge_blkNum);
printf("TestCmdE2DataMerge_cnt=%d ",TestCmdE2DataMerge_cnt);
printf("TestCmdE2DataMerge_i=%d ",TestCmdE2DataMerge_i);
printf("TestCmdE2DataMerge_lastLen=%d ",TestCmdE2DataMerge_lastLen);
printf("TestCmdE2DataMerge_len08=%d ",TestCmdE2DataMerge_len08);
printf("TestCmdE2DataMerge_st=%d ",TestCmdE2DataMerge_st);
printf("break_1=%d ",break_1);
printf("return_1=%d ",return_1);
printf("Global: ");
printf("\n");
$$state_num++;
};
}

int main() {
DecodeEntry(0);
printf("state %d:", $$state_num);
printf("Global: ");
=======
}
>>>>>>> 1ed553aa624d176f8e9ad29593483645dab81eeb

int main() {
printf("state %d:", $$state_num);
printf("Global: ");
printf("\n");
$$state_num++;
<<<<<<< HEAD
printf(,a[3]);
printf("state %d:", $$state_num);
printf("Global: ");
=======
printf("state %d:", $$state_num);
printf("Global: ");
printf("stone[5]= [%d,%d,%d,%d,%d]",::stone[0],::stone[1],::stone[2],::stone[3],::stone[4]);
>>>>>>> 1ed553aa624d176f8e9ad29593483645dab81eeb
>>>>>>> f302894b28712b50d5ce84928fa1216f211122fc
printf("\n");
$$state_num++;
printf("state %d:", $$state_num);
printf("Global: ");
<<<<<<< HEAD
printf("\n");
$$state_num++;
=======
<<<<<<< HEAD
printf("\n");
$$state_num++;
=======
printf("step[524]= [%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d]",::step[0],::step[1],::step[2],::step[3],::step[4],::step[5],::step[6],::step[7],::step[8],::step[9],::step[10],::step[11],::step[12],::step[13],::step[14],::step[15],::step[16],::step[17],::step[18],::step[19],::step[20],::step[21],::step[22],::step[23],::step[24],::step[25],::step[26],::step[27],::step[28],::step[29],::step[30],::step[31],::step[32],::step[33],::step[34],::step[35],::step[36],::step[37],::step[38],::step[39],::step[40],::step[41],::step[42],::step[43],::step[44],::step[45],::step[46],::step[47],::step[48],::step[49],::step[50],::step[51],::step[52],::step[53],::step[54],::step[55],::step[56],::step[57],::step[58],::step[59],::step[60],::step[61],::step[62],::step[63],::step[64],::step[65],::step[66],::step[67],::step[68],::step[69],::step[70],::step[71],::step[72],::step[73],::step[74],::step[75],::step[76],::step[77],::step[78],::step[79],::step[80],::step[81],::step[82],::step[83],::step[84],::step[85],::step[86],::step[87],::step[88],::step[89],::step[90],::step[91],::step[92],::step[93],::step[94],::step[95],::step[96],::step[97],::step[98],::step[99],::step[100],::step[101],::step[102],::step[103],::step[104],::step[105],::step[106],::step[107],::step[108],::step[109],::step[110],::step[111],::step[112],::step[113],::step[114],::step[115],::step[116],::step[117],::step[118],::step[119],::step[120],::step[121],::step[122],::step[123],::step[124],::step[125],::step[126],::step[127],::step[128],::step[129],::step[130],::step[131],::step[132],::step[133],::step[134],::step[135],::step[136],::step[137],::step[138],::step[139],::step[140],::step[141],::step[142],::step[143],::step[144],::step[145],::step[146],::step[147],::step[148],::step[149],::step[150],::step[151],::step[152],::step[153],::step[154],::step[155],::step[156],::step[157],::step[158],::step[159],::step[160],::step[161],::step[162],::step[163],::step[164],::step[165],::step[166],::step[167],::step[168],::step[169],::step[170],::step[171],::step[172],::step[173],::step[174],::step[175],::step[176],::step[177],::step[178],::step[179],::step[180],::step[181],::step[182],::step[183],::step[184],::step[185],::step[186],::step[187],::step[188],::step[189],::step[190],::step[191],::step[192],::step[193],::step[194],::step[195],::step[196],::step[197],::step[198],::step[199],::step[200],::step[201],::step[202],::step[203],::step[204],::step[205],::step[206],::step[207],::step[208],::step[209],::step[210],::step[211],::step[212],::step[213],::step[214],::step[215],::step[216],::step[217],::step[218],::step[219],::step[220],::step[221],::step[222],::step[223],::step[224],::step[225],::step[226],::step[227],::step[228],::step[229],::step[230],::step[231],::step[232],::step[233],::step[234],::step[235],::step[236],::step[237],::step[238],::step[239],::step[240],::step[241],::step[242],::step[243],::step[244],::step[245],::step[246],::step[247],::step[248],::step[249],::step[250],::step[251],::step[252],::step[253],::step[254],::step[255],::step[256],::step[257],::step[258],::step[259],::step[260],::step[261],::step[262],::step[263],::step[264],::step[265],::step[266],::step[267],::step[268],::step[269],::step[270],::step[271],::step[272],::step[273],::step[274],::step[275],::step[276],::step[277],::step[278],::step[279],::step[280],::step[281],::step[282],::step[283],::step[284],::step[285],::step[286],::step[287],::step[288],::step[289],::step[290],::step[291],::step[292],::step[293],::step[294],::step[295],::step[296],::step[297],::step[298],::step[299],::step[300],::step[301],::step[302],::step[303],::step[304],::step[305],::step[306],::step[307],::step[308],::step[309],::step[310],::step[311],::step[312],::step[313],::step[314],::step[315],::step[316],::step[317],::step[318],::step[319],::step[320],::step[321],::step[322],::step[323],::step[324],::step[325],::step[326],::step[327],::step[328],::step[329],::step[330],::step[331],::step[332],::step[333],::step[334],::step[335],::step[336],::step[337],::step[338],::step[339],::step[340],::step[341],::step[342],::step[343],::step[344],::step[345],::step[346],::step[347],::step[348],::step[349],::step[350],::step[351],::step[352],::step[353],::step[354],::step[355],::step[356],::step[357],::step[358],::step[359],::step[360],::step[361],::step[362],::step[363],::step[364],::step[365],::step[366],::step[367],::step[368],::step[369],::step[370],::step[371],::step[372],::step[373],::step[374],::step[375],::step[376],::step[377],::step[378],::step[379],::step[380],::step[381],::step[382],::step[383],::step[384],::step[385],::step[386],::step[387],::step[388],::step[389],::step[390],::step[391],::step[392],::step[393],::step[394],::step[395],::step[396],::step[397],::step[398],::step[399],::step[400],::step[401],::step[402],::step[403],::step[404],::step[405],::step[406],::step[407],::step[408],::step[409],::step[410],::step[411],::step[412],::step[413],::step[414],::step[415],::step[416],::step[417],::step[418],::step[419],::step[420],::step[421],::step[422],::step[423],::step[424],::step[425],::step[426],::step[427],::step[428],::step[429],::step[430],::step[431],::step[432],::step[433],::step[434],::step[435],::step[436],::step[437],::step[438],::step[439],::step[440],::step[441],::step[442],::step[443],::step[444],::step[445],::step[446],::step[447],::step[448],::step[449],::step[450],::step[451],::step[452],::step[453],::step[454],::step[455],::step[456],::step[457],::step[458],::step[459],::step[460],::step[461],::step[462],::step[463],::step[464],::step[465],::step[466],::step[467],::step[468],::step[469],::step[470],::step[471],::step[472],::step[473],::step[474],::step[475],::step[476],::step[477],::step[478],::step[479],::step[480],::step[481],::step[482],::step[483],::step[484],::step[485],::step[486],::step[487],::step[488],::step[489],::step[490],::step[491],::step[492],::step[493],::step[494],::step[495],::step[496],::step[497],::step[498],::step[499],::step[500],::step[501],::step[502],::step[503],::step[504],::step[505],::step[506],::step[507],::step[508],::step[509],::step[510],::step[511],::step[512],::step[513],::step[514],::step[515],::step[516],::step[517],::step[518],::step[519],::step[520],::step[521],::step[522],::step[523]);
printf("stone[5]= [%d,%d,%d,%d,%d]",::stone[0],::stone[1],::stone[2],::stone[3],::stone[4]);
printf("\n");
$$state_num++;
main_1(0);
>>>>>>> a6e7802144bcbb7cdaf3d55dcaf36d30388d2393
>>>>>>> 1ed553aa624d176f8e9ad29593483645dab81eeb
>>>>>>> f302894b28712b50d5ce84928fa1216f211122fc
return 0;
}
