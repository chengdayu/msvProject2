
/*  A Bison parser, made from msv.y with Bison version GNU Bison version 1.24
  */

#define YYBISON 1  /* Identify Bison output.  */

<<<<<<< HEAD
#define	SWITCH	258
#define	CASE	259
#define	BREAK	260
#define	IF	261
#define	ELSE	262
#define	EMPTY	263
#define	AWAIT	264
#define	PROJECTION	265
#define	PBEGIN	266
#define	PEND	267
#define	POINTERNULL	268
#define	ARRAY	269
#define	STRUCT	270
#define	DOT	271
#define	UNION	272
#define	FOPEN	273
#define	FCLOSE	274
#define	FILEDECLARATION	275
#define	FGETS	276
#define	FPUTS	277
#define	FGETC	278
#define	FPUTC	279
#define	MORE	280
#define	DEFINE	281
#define	MY_TRUE	282
#define	MY_FALSE	283
#define	EXIST	284
#define	FRAME	285
#define	FOR	286
#define	WHILE	287
#define	DO	288
#define	TRUE	289
#define	FALSE	290
#define	REPEAT	291
#define	UNTIL	292
#define	DISPLAY	293
#define	SKIP	294
#define	THEN	295
#define	COMMA	296
#define	COLON	297
#define	INTDECLARATION	298
#define	STRDECLARATION	299
#define	POINTERDECLARATION	300
#define	CHARDECLARATION	301
#define	VOIDDECLARATION	302
#define	FLOATDECLARATION	303
#define	LISTDECLARATION	304
#define	OPEN_PAR	305
#define	CLOSE_PAR	306
#define	TIMES	307
#define	OPEN_BPAR	308
#define	CLOSE_BPAR	309
#define	OPEN_MPAR	310
#define	CLOSE_MPAR	311
#define	FUNCTION	312
#define	OVER	313
#define	CYLINDER	314
#define	OVEREP	315
#define	INTER_OR	316
#define	NON_DETERMINED	317
#define	SEND	318
#define	RECEIVE	319
#define	PROCESS	320
#define	CHANNEL	321
#define	PUT	322
#define	GET	323
#define	ERROR_TOKEN	324
#define	STRFUNCHEAD	325
#define	STRFUNCTAIL	326
#define	STRFUNCCAT	327
#define	STRFUNCCMP	328
#define	STRFUNCCPY	329
#define	STRFUNCLEN	330
#define	SIZEOF	331
#define	SYSTEM	332
#define	CEIL	333
#define	FLOOR	334
#define	ROUND	335
#define	SIN	336
#define	COS	337
#define	TAN	338
#define	ASIN	339
#define	ACOS	340
#define	ATAN	341
#define	SINH	342
#define	COSH	343
#define	TANH	344
#define	EXP	345
#define	LOG	346
#define	LOG10	347
#define	SQRT	348
#define	ATAN2	349
#define	POW	350
#define	ABS	351
#define	FABS	352
#define	LABS	353
#define	FMOD	354
#define	MODF	355
#define	LDEXP	356
#define	FREXP	357
#define	UNSIGNED	358
#define	SIGNED	359
#define	MALLOC	360
#define	FREE	361
#define	CHOP	362
#define	IMPLY	363
#define	IFF	364
#define	PROPIMPLY	365
#define	OR	366
#define	PARALLEL	367
#define	AND	368
#define	ASS_P	369
#define	ASS_N	370
#define	CON	371
#define	ADDRESS	372
#define	NE	373
#define	EQ	374
#define	GE	375
#define	LE	376
#define	GT	377
#define	LT	378
#define	LST	379
#define	RST	380
#define	ADD	381
#define	SUB	382
#define	MUL	383
#define	DIV	384
#define	MOD	385
#define	BNE	386
#define	CHOPSTAR	387
#define	NEXT	388
#define	NEGATION	389
#define	LENGTH	390
#define	REQUEST	391
#define	FINAL	392
#define	KEEP	393
#define	ALWAYS	394
#define	HALT	395
#define	W_NEXT	396
#define	PREFIX	397
#define	SOMETIMES	398
#define	ID	399
#define	STRLITERAL	400
#define	STRUCT_TYPE	401
#define	INTLITERAL	402
=======
#define	IF	258
#define	ELSE	259
#define	EMPTY	260
#define	AWAIT	261
#define	PROJECTION	262
#define	PBEGIN	263
#define	PEND	264
#define	POINTERNULL	265
#define	ARRAY	266
#define	STRUCT	267
#define	DOT	268
#define	UNION	269
#define	FOPEN	270
#define	FCLOSE	271
#define	FILEDECLARATION	272
#define	FGETS	273
#define	FPUTS	274
#define	FGETC	275
#define	FPUTC	276
#define	MORE	277
#define	DEFINE	278
#define	MY_TRUE	279
#define	MY_FALSE	280
#define	EXIST	281
#define	FRAME	282
#define	FOR	283
#define	WHILE	284
#define	DO	285
#define	REPEAT	286
#define	UNTIL	287
#define	DISPLAY	288
#define	SKIP	289
#define	THEN	290
#define	COMMA	291
#define	COLON	292
#define	INTDECLARATION	293
#define	STRDECLARATION	294
#define	POINTERDECLARATION	295
#define	CHARDECLARATION	296
#define	VOIDDECLARATION	297
#define	FLOATDECLARATION	298
#define	LISTDECLARATION	299
#define	OPEN_PAR	300
#define	CLOSE_PAR	301
#define	TIMES	302
#define	OPEN_BPAR	303
#define	CLOSE_BPAR	304
#define	OPEN_MPAR	305
#define	CLOSE_MPAR	306
#define	FUNCTION	307
#define	OVER	308
#define	CYLINDER	309
#define	OVEREP	310
#define	INTER_OR	311
#define	NON_DETERMINED	312
#define	SEND	313
#define	RECEIVE	314
#define	PROCESS	315
#define	CHANNEL	316
#define	PUT	317
#define	GET	318
#define	ERROR_TOKEN	319
#define	STRFUNCHEAD	320
#define	STRFUNCTAIL	321
#define	STRFUNCCAT	322
#define	STRFUNCCMP	323
#define	STRFUNCCPY	324
#define	STRFUNCLEN	325
#define	SIZEOF	326
#define	SYSTEM	327
#define	SWITCH	328
#define	BREAK	329
#define	CASE	330
#define	DEFAULT	331
#define	CEIL	332
#define	FLOOR	333
#define	ROUND	334
#define	SIN	335
#define	COS	336
#define	TAN	337
#define	ASIN	338
#define	ACOS	339
#define	ATAN	340
#define	SINH	341
#define	COSH	342
#define	TANH	343
#define	EXP	344
#define	LOG	345
#define	LOG10	346
#define	SQRT	347
#define	ATAN2	348
#define	POW	349
#define	ABS	350
#define	FABS	351
#define	LABS	352
#define	FMOD	353
#define	MODF	354
#define	LDEXP	355
#define	FREXP	356
#define	UNSIGNED	357
#define	SIGNED	358
#define	MALLOC	359
#define	FREE	360
#define	CHOP	361
#define	IMPLY	362
#define	IFF	363
#define	PROPIMPLY	364
#define	OR	365
#define	PARALLEL	366
#define	AND	367
#define	ASS_EQU	368
#define	UNITASSIGN	369
#define	CON	370
#define	ADDRESS	371
#define	NE	372
#define	EQU	373
#define	GE	374
#define	LE	375
#define	GT	376
#define	LT	377
#define	LST	378
#define	RST	379
#define	ADD	380
#define	SUB	381
#define	MUL	382
#define	DIV	383
#define	MOD	384
#define	BNE	385
#define	CHOPSTAR	386
#define	NEXT	387
#define	NEGATION	388
#define	LENGTH	389
#define	REQUEST	390
#define	FINAL	391
#define	KEEP	392
#define	ALWAYS	393
#define	HALT	394
#define	W_NEXT	395
#define	PREFIX	396
#define	PREVIOUS	397
#define	SOMETIMES	398
#define	ID	399
#define	STR	400
#define	STRUCT_TYPE	401
#define	INTEGER	402
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
#define	FLOATLITERAL	403
#define	CHARLITERAL	404

#line 1 "msv.y"

#include"function.h"
<<<<<<< HEAD
#include "MyMap.h"
#include <malloc.h>
#include <string.h>      // strcpy
#include "Symbol.h"
#include "SymbolTable.h"
#include "SyntaxNode.h"
#include "SyntaxTree.h"
//#include "inherit.h"
//#include <afxtempl.h>
CMAP g_StructNameMap;

//类的层次关系
//typedef CArray<Inherit,Inherit> ClassHier;//这行代码相当于定义了一个数组，数组中的每个元素都是一个Inherit对象
//ClassHier classarray;//定义一个数组用来保存Tempura程序中类定义的继承关系
=======
#include <malloc.h>
#include <string.h>      // strcpy
//#include"MSV.scanner.cc"
#include "SyntaxNode.h"
#include "SyntaxTree.h"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

//******************  用来存储程序语法树以及性质树 *******************************/
/***************************************************************************/
//程序语法树节点指针
CSyntaxNode *g_syntaxTree = NULL;
//性质语法树节点指针
CSyntaxNode *g_propositionTree=NULL;

CSyntaxNode *function_tree=NULL, *propositionDefineTree=NULL;

CSyntaxNode *struct_tree=NULL;//存储结构体的定义

CSyntaxTree *g_tree=NULL, *g_proptree=NULL;     

int g_nErrors=0;

extern void yyerror(const char *msg);

<<<<<<< HEAD
int g_nErrors=0;
extern void yyerror(const char *msg);

extern int yylex (void);

=======
extern int yylex (void);
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

#define YYDEBUG 1	          // Generate debug code; needed for YYERROR_VERBOSE
#define YYERROR_VERBOSE       // Give a more specific parse error message


<<<<<<< HEAD
#line 47 "msv.y"
=======


#line 35 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
typedef union{
   char     * cString;   /* A character string */
   int       nInteger;   /* An intliteral value */
   float floatval;	/* A float value added by Jane 2012-06-06 */
   char character;	/* A character added by Jane 2012-06-06*/
   CSyntaxNode *tnode;    /* Node in the syntax tree */
   enum NODETYPE  nodetype;
   enum RETURNTYPE  returntype;
} YYSTYPE;

#ifndef YYLTYPE
typedef
  struct yyltype
    {
      int timestamp;
      int first_line;
      int first_column;
      int last_line;
      int last_column;
      char *text;
   }
  yyltype;

#define YYLTYPE yyltype
#endif

#include <stdio.h>

#ifndef __cplusplus
#ifndef __STDC__
#define const
#endif
#endif



<<<<<<< HEAD
#define	YYFINAL		1372
#define	YYFLAG		-32768
#define	YYNTBASE	150

#define YYTRANSLATE(x) ((unsigned)(x) <= 404 ? yytranslate[x] : 236)
=======
#define	YYFINAL		1484
#define	YYFLAG		-32768
#define	YYNTBASE	150

#define YYTRANSLATE(x) ((unsigned)(x) <= 404 ? yytranslate[x] : 241)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

static const short yytranslate[] = {     0,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,
     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
    46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
    66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
    76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
   106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
   116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   148,   149
};

#if YYDEBUG != 0
static const short yyprhs[] = {     0,
     0,     3,     7,     8,    12,    16,    20,    24,    28,    31,
<<<<<<< HEAD
    34,    37,    40,    43,    45,    47,    49,    52,    54,    56,
    59,    62,    65,    74,    76,    81,    84,    88,    92,    93,
    97,   101,   105,   107,   109,   111,   113,   115,   117,   119,
   124,   129,   134,   139,   148,   150,   152,   154,   159,   161,
   163,   165,   167,   172,   176,   184,   194,   201,   207,   217,
   226,   236,   238,   243,   248,   250,   258,   262,   264,   268,
   270,   271,   276,   281,   283,   285,   290,   293,   296,   299,
   302,   304,   307,   310,   314,   318,   322,   326,   334,   343,
   355,   369,   371,   373,   375,   377,   379,   381,   384,   391,
   396,   402,   408,   417,   426,   429,   432,   435,   436,   443,
   451,   452,   455,   462,   471,   476,   483,   490,   497,   502,
   506,   508,   510,   512,   514,   518,   521,   523,   535,   548,
   560,   572,   590,   609,   627,   646,   666,   685,   703,   722,
   740,   742,   744,   746,   748,   750,   761,   765,   767,   772,
   778,   790,   803,   815,   827,   840,   844,   848,   851,   852,
   855,   858,   861,   869,   876,   881,   885,   887,   891,   895,
   901,   903,   907,   910,   911,   913,   917,   919,   922,   925,
   927,   929,   931,   933,   935,   937,   941,   943,   945,   947,
   949,   951,   953,   955,   957,   959,   961,   963,   965,   967,
   969,   971,   973,   977,   979,   981,   985,   990,   995,  1000,
  1005,  1010,  1015,  1019,  1023,  1027,  1028,  1031,  1034,  1037,
  1040,  1043,  1047,  1052,  1057,  1062,  1068,  1074,  1080,  1086,
  1092,  1099,  1105,  1111,  1118,  1124,  1131,  1139,  1146,  1153,
  1161,  1168,  1175,  1181,  1189,  1196,  1198,  1203,  1205,  1208,
  1211,  1214,  1218,  1222,  1226,  1229,  1234,  1239,  1244,  1249,
  1251,  1253,  1255,  1257,  1259,  1261,  1266,  1271,  1278,  1285,
  1292,  1297,  1299,  1301,  1303,  1305,  1307,  1309,  1312,  1315,
  1318,  1321,  1324,  1327,  1330,  1333,  1336,  1339,  1342,  1345,
  1348,  1351,  1354,  1357,  1364,  1371,  1378,  1385,  1392,  1395,
  1398,  1401,  1403,  1406,  1410,  1414,  1418,  1422,  1424,  1426,
  1428,  1432,  1436,  1440,  1444,  1448,  1452,  1456,  1460,  1464,
  1468,  1470,  1472,  1474,  1476,  1478,  1480,  1483,  1486,  1488,
  1490,  1494,  1497,  1501,  1506,  1512,  1517,  1521,  1526,  1532,
  1537,  1540,  1544,  1549,  1552,  1556,  1561,  1566,  1572,  1579,
  1588,  1596,  1601,  1605,  1611,  1620,  1621,  1626,  1630,  1635,
  1640,  1646,  1652,  1658,  1664,  1671,  1681,  1682,  1690,  1700,
  1709,  1715,  1720,  1723,  1726,  1732,  1733,  1736,  1740,  1747,
  1748,  1751,  1755,  1758,  1762,  1765,  1767,  1771,  1773,  1775,
  1777,  1779,  1783,  1784,  1787,  1788,  1792,  1794,  1797,  1801,
  1805,  1809,  1813,  1819,  1829,  1831,  1833,  1834,  1836,  1837,
  1839,  1840,  1848,  1856,  1859,  1861,  1862,  1868,  1871,  1872,
  1877,  1883,  1884,  1888,  1893,  1899,  1904,  1910,  1915,  1916,
  1920,  1924,  1929,  1934,  1939,  1944,  1949,  1954,  1959,  1964,
  1971,  1976,  1981,  1986,  1993,  1997,  2001,  2006,  2010,  2011,
  2015,  2019,  2023,  2027,  2030
};

static const short yyrhs[] = {   151,
   154,     0,    11,   152,    12,     0,     0,   152,   113,   152,
     0,   152,   111,   152,     0,   152,   109,   152,     0,   152,
   110,   152,     0,   152,   107,   152,     0,   139,   152,     0,
   138,   152,     0,   143,   152,     0,   141,   152,     0,   133,
   152,     0,    39,     0,    27,     0,    28,     0,   135,   175,
     0,     8,     0,    25,     0,   140,   152,     0,   137,   152,
     0,   134,   152,     0,    53,   152,   153,    54,    10,    53,
   152,    54,     0,   144,     0,    26,   144,    42,   201,     0,
   152,   132,     0,    50,   152,    51,     0,    41,   152,   153,
     0,     0,   154,   113,   154,     0,   154,   111,   154,     0,
   154,   107,   154,     0,   166,     0,   160,     0,   225,     0,
   228,     0,   219,     0,   220,     0,   221,     0,   133,    50,
   154,    51,     0,   138,    50,   154,    51,     0,   139,    50,
   154,    51,     0,     9,    50,   200,    51,     0,    36,    53,
   154,    54,    37,    50,   200,    51,     0,    39,     0,     8,
     0,    25,     0,   135,    50,   175,    51,     0,   232,     0,
   230,     0,    34,     0,    35,     0,   137,    50,   154,    51,
     0,   154,   112,   154,     0,    50,   218,    51,   108,    55,
   154,    56,     0,    30,    50,   211,   216,    51,   113,    50,
   154,    51,     0,    53,   154,   217,    54,    10,   209,     0,
    53,   154,    54,    10,   209,     0,    26,   144,    50,   205,
    51,   114,    53,   156,    54,     0,    57,   144,    50,   205,
    51,    53,   154,    54,     0,    65,   144,    50,   205,    51,
   114,    53,   156,    54,     0,   158,     0,   106,    50,   211,
    51,     0,    77,    50,   198,    51,     0,   157,     0,    29,
   211,   206,    42,    53,   154,    54,     0,    50,   154,    51,
     0,   160,     0,   160,   113,   155,     0,   154,     0,     0,
   144,    50,   207,    51,     0,   172,    50,   207,    51,     0,
   165,     0,   191,     0,   159,    53,   155,    54,     0,    15,
   144,     0,    17,   144,     0,   104,   161,     0,   103,   161,
     0,   161,     0,   162,   163,     0,   146,   163,     0,    15,
   144,   163,     0,    17,   144,   163,     0,    15,   146,   163,
     0,    17,   146,   163,     0,    50,   128,   211,    51,    50,
   205,    51,     0,    50,   128,   128,   211,    51,    50,   205,
    51,     0,    50,   128,   144,    55,   175,   173,    56,    51,
    50,   205,    51,     0,    50,   128,   144,    55,   175,   173,
    56,    51,    50,   205,    51,   114,   182,     0,    43,     0,
    48,     0,    46,     0,    44,     0,    47,     0,    20,     0,
   211,   164,     0,   144,    55,   175,   173,    56,   164,     0,
   211,   114,   170,   164,     0,   144,    14,   114,   182,   164,
     0,   144,    14,   114,   212,   164,     0,   144,    55,   175,
   173,    56,   114,   182,   164,     0,   144,    55,   175,   173,
    56,   114,   212,   164,     0,   128,   163,     0,    41,   163,
     0,    41,     1,     0,     0,   144,    55,   175,   173,    56,
     0,     0,    41,   144,    55,   175,   173,    56,     0,     0,
     0,    41,     1,     0,    18,    50,   167,    41,   212,    51,
     0,    21,    50,   211,    41,   213,    41,   211,    51,     0,
    23,    50,   211,    51,     0,    22,    50,   211,    41,   211,
    51,     0,    24,    50,   211,    41,   211,    51,     0,    24,
    50,   172,    41,   211,    51,     0,    19,    50,   211,    51,
     0,   167,   169,   170,     0,   211,     0,   234,     0,   172,
     0,   174,     0,    50,   167,    51,     0,   133,   167,     0,
   168,     0,    50,    50,    46,   128,    51,   147,    51,    55,
   175,   173,    56,     0,    50,    50,   103,    46,   128,    51,
   147,    51,    55,   175,   173,    56,     0,    50,    50,    43,
   128,    51,   147,    51,    55,   175,   173,    56,     0,    50,
    50,    48,   128,    51,   147,    51,    55,   175,   173,    56,
     0,    50,    50,    46,   128,    51,    50,    50,    46,   128,
    51,   147,    51,    51,    55,   175,   173,    56,     0,    50,
    50,    46,   128,    51,    50,    50,   103,    46,   128,    51,
   147,    51,    51,    55,   175,   173,    56,     0,    50,    50,
    46,   128,    51,    50,    50,    43,   128,    51,   147,    51,
    51,    55,   175,   173,    56,     0,    50,    50,   103,    46,
   128,    51,    50,    50,    46,   128,    51,   147,    51,    51,
    55,   175,   173,    56,     0,    50,    50,   103,    46,   128,
    51,    50,    50,   103,    46,   128,    51,   147,    51,    51,
    55,   175,   173,    56,     0,    50,    50,   103,    46,   128,
    51,    50,    50,    43,   128,    51,   147,    51,    51,    55,
   175,   173,    56,     0,    50,    50,    43,   128,    51,    50,
    50,    46,   128,    51,   147,    51,    51,    55,   175,   173,
    56,     0,    50,    50,    43,   128,    51,    50,    50,   103,
    46,   128,    51,   147,    51,    51,    55,   175,   173,    56,
     0,    50,    50,    43,   128,    51,    50,    50,    43,   128,
    51,   147,    51,    51,    55,   175,   173,    56,     0,   114,
     0,   115,     0,   175,     0,   182,     0,   212,     0,    50,
   212,    51,    50,   162,    51,    50,   205,    51,   157,     0,
    50,   170,    51,     0,   171,     0,   128,    50,   168,    51,
     0,   144,    55,   175,   173,    56,     0,    50,    50,    43,
   128,    51,   144,    51,    55,   175,   173,    56,     0,    50,
    50,   103,    43,   128,    51,   144,    51,    55,   175,   173,
    56,     0,    50,    50,    48,   128,    51,   144,    51,    55,
   175,   173,    56,     0,    50,    50,    46,   128,    51,   144,
    51,    55,   175,   173,    56,     0,    50,    50,   103,    46,
   128,    51,   144,    51,    55,   175,   173,    56,     0,    50,
   172,    51,     0,    41,   175,   173,     0,    41,     1,     0,
     0,   128,   211,     0,   128,   174,     0,   128,   172,     0,
    50,   174,    51,    55,   175,   173,    56,     0,   128,    50,
   204,   128,    51,   175,     0,   128,    50,   175,    51,     0,
    50,   174,    51,     0,   178,     0,   178,   202,   175,     0,
   175,   180,   178,     0,     6,   200,    40,   175,   177,     0,
   178,     0,   178,   181,   178,     0,     7,   175,     0,     0,
   179,     0,   178,   180,   179,     0,   213,     0,   127,   179,
     0,   131,   179,     0,    13,     0,   215,     0,   211,     0,
   172,     0,   174,     0,   157,     0,    50,   175,    51,     0,
   199,     0,   214,     0,   186,     0,   187,     0,   234,     0,
   190,     0,   128,     0,   129,     0,   130,     0,   124,     0,
   125,     0,   117,     0,    61,     0,   116,     0,   126,     0,
   127,     0,   182,   116,   182,     0,   183,     0,   184,     0,
    50,   182,    51,     0,    55,   175,   185,    56,     0,    55,
   212,   185,    56,     0,    55,   182,   185,    56,     0,    53,
   175,   185,    54,     0,    53,   212,   185,    54,     0,    53,
   182,   185,    54,     0,    41,   175,   185,     0,    41,   212,
   185,     0,    41,   182,   185,     0,     0,    41,     1,     0,
   117,   211,     0,   117,   172,     0,   117,   234,     0,   117,
   186,     0,    50,   186,    51,     0,    50,    43,    51,   176,
     0,    50,    48,    51,   176,     0,    50,    46,    51,   176,
     0,    50,   104,    43,    51,   176,     0,    50,   104,    46,
    51,   176,     0,    50,   103,    43,    51,   176,     0,    50,
   103,    46,    51,   176,     0,    50,    43,   128,    51,   188,
     0,    50,   103,    43,   128,    51,   188,     0,    50,    48,
   128,    51,   188,     0,    50,    46,   128,    51,   188,     0,
    50,   103,    46,   128,    51,   188,     0,    50,    47,   128,
    51,   188,     0,    50,    43,   128,   128,    51,   188,     0,
    50,   103,    43,   128,   128,    51,   188,     0,    50,    48,
   128,   128,    51,   188,     0,    50,    46,   128,   128,    51,
   188,     0,    50,   103,    46,   128,   128,    51,   188,     0,
    50,    47,   128,   128,    51,   188,     0,    50,    15,   146,
   128,    51,   188,     0,    50,   146,   128,    51,   188,     0,
    50,    15,   146,   128,   128,    51,   188,     0,    50,   146,
   128,   128,    51,   188,     0,   176,     0,   105,    50,   175,
    51,     0,   204,     0,    43,   128,     0,    48,   128,     0,
    46,   128,     0,   103,    43,   128,     0,   103,    46,   128,
     0,    15,   146,   128,     0,   146,   128,     0,    76,    50,
   175,    51,     0,    76,    50,   189,    51,     0,    76,    50,
   146,    51,     0,    76,    50,   212,    51,     0,   192,     0,
   193,     0,   194,     0,   196,     0,   195,     0,   197,     0,
    70,    50,   198,    51,     0,    71,    50,   198,    51,     0,
    72,    50,   198,    41,   198,    51,     0,    73,    50,   198,
    41,   198,    51,     0,    74,    50,   198,    41,   198,    51,
     0,    75,    50,   198,    51,     0,   211,     0,   172,     0,
   174,     0,   212,     0,   191,     0,   234,     0,    80,   175,
     0,    78,   175,     0,    79,   175,     0,    81,   175,     0,
    82,   175,     0,    83,   175,     0,    84,   175,     0,    85,
   175,     0,    86,   175,     0,    87,   175,     0,    88,   175,
     0,    89,   175,     0,    90,   175,     0,    91,   175,     0,
    92,   175,     0,    93,   175,     0,    94,    50,   175,    41,
   175,    51,     0,    95,    50,   175,    41,   175,    51,     0,
    99,    50,   175,    41,   175,    51,     0,   100,    50,   175,
    41,   175,    51,     0,   101,    50,   175,    41,   175,    51,
     0,    96,   175,     0,    97,   175,     0,    98,   175,     0,
   201,     0,   134,   200,     0,   200,   113,   200,     0,   200,
   111,   200,     0,    50,   200,    51,     0,   175,   202,   175,
     0,    27,     0,    28,     0,   175,     0,   175,   119,   212,
     0,   175,   118,   212,     0,   212,   119,   175,     0,   212,
   118,   175,     0,   175,   119,    13,     0,   175,   118,    13,
     0,    13,   119,   175,     0,    13,   118,   175,     0,   175,
   119,   214,     0,   175,   118,   214,     0,   120,     0,   121,
     0,   118,     0,   122,     0,   123,     0,   119,     0,   103,
    43,     0,   103,    46,     0,   203,     0,   162,     0,   204,
   211,   206,     0,   204,   206,     0,   146,   211,   206,     0,
   146,   128,   211,   206,     0,   146,   128,   128,   211,   206,
     0,   146,   211,    14,   206,     0,   144,   211,   206,     0,
   144,   128,   211,   206,     0,   144,   128,   128,   211,   206,
     0,   144,   211,    14,   206,     0,   146,   206,     0,   146,
   128,   206,     0,   146,   128,   128,   206,     0,   144,   206,
     0,   144,   128,   206,     0,   144,   128,   128,   206,     0,
   204,   211,    14,   206,     0,   204,   128,   211,    14,   206,
     0,   204,   211,    55,   175,    56,   206,     0,   204,   211,
    55,   175,    41,   175,    56,   206,     0,   204,   211,    14,
    55,   175,    56,   206,     0,   204,   128,   211,   206,     0,
   204,   128,   206,     0,   204,   128,   128,   211,   206,     0,
    50,   128,   211,    51,    50,   205,    51,   206,     0,     0,
    41,   204,   211,   206,     0,    41,   204,   206,     0,    41,
   144,   211,   206,     0,    41,   146,   211,   206,     0,    41,
   146,   128,   211,   206,     0,    41,   144,   211,    14,   206,
     0,    41,   146,   211,    14,   206,     0,    41,   204,   211,
    14,   206,     0,    41,   204,   128,   211,    14,   206,     0,
    41,    50,   128,   211,    51,    50,   205,    51,   206,     0,
     0,    41,   204,   211,    55,   175,    56,   206,     0,    41,
   204,   211,    55,   175,    41,   175,    56,   206,     0,    41,
   204,   211,    14,    55,   175,    56,   206,     0,    41,   204,
   128,   211,   206,     0,    41,   204,   128,   206,     0,    41,
     1,     0,   170,   208,     0,   144,    50,   207,    51,   208,
     0,     0,   117,     1,     0,    41,   170,   208,     0,    41,
   144,    50,   207,    51,   208,     0,     0,    41,     1,     0,
    53,   154,    54,     0,     1,    54,     0,    50,   200,    51,
     0,     1,    51,     0,   144,     0,    50,   211,    51,     0,
   145,     0,   147,     0,   149,     0,   148,     0,    41,   211,
   216,     0,     0,    41,     1,     0,     0,    41,   154,   217,
     0,   201,     0,   134,   218,     0,   218,   113,   218,     0,
   218,   111,   218,     0,    50,   218,    51,     0,    32,   210,
   209,     0,    31,   175,    52,    33,   209,     0,    31,    50,
   222,    41,   223,    41,   224,    51,   209,     0,   166,     0,
   161,     0,     0,   200,     0,     0,   166,     0,     0,     3,
    50,   179,    51,    53,   226,    54,     0,     4,   179,    42,
    50,   154,    51,   227,     0,     5,   226,     0,   226,     0,
     0,     6,   200,    40,   209,   229,     0,     7,   209,     0,
     0,    38,    50,   170,    51,     0,    38,    50,   170,   231,
    51,     0,     0,    41,   170,   231,     0,   136,    50,   211,
    51,     0,   136,    50,   211,   233,    51,     0,   136,    50,
   172,    51,     0,   136,    50,   172,   233,    51,     0,   136,
    50,   234,    51,     0,     0,    41,   211,   233,     0,    41,
   172,   233,     0,   211,    16,   211,   235,     0,   172,    16,
   211,   235,     0,   174,    16,   211,   235,     0,   211,    16,
   172,   235,     0,   172,    16,   172,   235,     0,   174,    16,
   172,   235,     0,   211,   108,   211,   235,     0,   172,   108,
   211,   235,     0,    50,   186,    51,   108,   211,   235,     0,
   174,   108,   211,   235,     0,   211,   108,   172,   235,     0,
   172,   108,   172,   235,     0,    50,   186,    51,   108,   172,
   235,     0,   211,    16,   157,     0,   211,   108,   157,     0,
   174,   108,   172,   235,     0,    50,   234,    51,     0,     0,
    16,   211,   235,     0,    16,   172,   235,     0,   108,   211,
   235,     0,   108,   172,   235,     0,    16,   157,     0,   108,
   157,     0
=======
    34,    37,    40,    43,    45,    47,    49,    52,    55,    57,
    59,    62,    65,    68,    77,    79,    84,    87,    91,    95,
    96,   100,   104,   108,   112,   117,   119,   121,   123,   125,
   127,   129,   131,   136,   141,   146,   151,   156,   161,   170,
   172,   174,   176,   181,   183,   185,   187,   189,   194,   198,
   206,   216,   223,   229,   239,   248,   258,   260,   265,   270,
   272,   278,   285,   292,   299,   306,   308,   316,   320,   322,
   324,   328,   332,   334,   338,   344,   349,   351,   355,   359,
   363,   367,   371,   373,   375,   376,   381,   386,   391,   394,
   397,   400,   403,   405,   408,   411,   415,   419,   423,   427,
   430,   433,   441,   450,   462,   476,   478,   480,   482,   484,
   486,   488,   491,   498,   503,   508,   514,   520,   529,   538,
   541,   544,   547,   548,   555,   563,   564,   567,   574,   583,
   588,   595,   602,   609,   614,   618,   620,   622,   624,   626,
   630,   633,   635,   647,   660,   672,   684,   702,   721,   739,
   758,   778,   797,   815,   834,   852,   854,   856,   858,   860,
   862,   864,   866,   868,   879,   883,   885,   890,   896,   908,
   921,   933,   945,   958,   962,   966,   969,   970,   973,   976,
   979,   987,   994,   999,  1003,  1005,  1009,  1013,  1019,  1021,
  1025,  1028,  1029,  1031,  1035,  1037,  1039,  1042,  1045,  1047,
  1049,  1051,  1053,  1055,  1057,  1059,  1063,  1065,  1067,  1069,
  1071,  1073,  1075,  1080,  1082,  1084,  1086,  1088,  1090,  1092,
  1094,  1096,  1098,  1100,  1104,  1106,  1108,  1112,  1117,  1122,
  1127,  1132,  1137,  1142,  1147,  1152,  1156,  1160,  1164,  1168,
  1169,  1172,  1175,  1178,  1181,  1184,  1188,  1193,  1198,  1203,
  1209,  1215,  1221,  1227,  1233,  1240,  1246,  1252,  1259,  1265,
  1272,  1280,  1287,  1294,  1302,  1309,  1316,  1322,  1330,  1337,
  1339,  1344,  1346,  1349,  1352,  1355,  1359,  1363,  1367,  1370,
  1375,  1380,  1385,  1390,  1392,  1394,  1396,  1398,  1400,  1402,
  1407,  1412,  1419,  1426,  1433,  1438,  1440,  1442,  1444,  1446,
  1448,  1450,  1453,  1456,  1459,  1462,  1465,  1468,  1471,  1474,
  1477,  1480,  1483,  1486,  1489,  1492,  1495,  1498,  1505,  1512,
  1519,  1526,  1533,  1536,  1539,  1542,  1544,  1548,  1552,  1556,
  1560,  1564,  1568,  1572,  1576,  1580,  1584,  1587,  1591,  1595,
  1599,  1603,  1606,  1608,  1610,  1612,  1614,  1616,  1618,  1620,
  1622,  1624,  1626,  1628,  1630,  1632,  1635,  1638,  1640,  1642,
  1646,  1649,  1653,  1658,  1664,  1669,  1673,  1678,  1684,  1689,
  1692,  1696,  1701,  1704,  1708,  1713,  1718,  1724,  1731,  1740,
  1748,  1753,  1757,  1763,  1772,  1773,  1778,  1782,  1787,  1792,
  1798,  1804,  1810,  1816,  1823,  1829,  1839,  1840,  1848,  1858,
  1867,  1873,  1878,  1882,  1885,  1888,  1894,  1895,  1898,  1902,
  1909,  1910,  1913,  1917,  1920,  1924,  1927,  1929,  1933,  1935,
  1937,  1939,  1941,  1945,  1946,  1949,  1950,  1954,  1956,  1959,
  1963,  1967,  1971,  1975,  1983,  1991,  1998,  2001,  2003,  2004,
  2010,  2020,  2022,  2024,  2025,  2027,  2028,  2030,  2031,  2037,
  2040,  2041,  2046,  2052,  2053,  2057,  2062,  2068,  2073,  2079,
  2084,  2085,  2089,  2093,  2098,  2103,  2108,  2113,  2118,  2123,
  2128,  2133,  2140,  2145,  2150,  2155,  2162,  2166,  2170,  2175,
  2179,  2180,  2184,  2188,  2192,  2196,  2199
};

static const short yyrhs[] = {   151,
   155,     0,     8,   152,     9,     0,     0,   152,   112,   152,
     0,   152,   110,   152,     0,   152,   108,   152,     0,   152,
   109,   152,     0,   152,   106,   152,     0,   138,   152,     0,
   137,   152,     0,   143,   152,     0,   140,   152,     0,   132,
   152,     0,    34,     0,    24,     0,    25,     0,   134,   182,
     0,   134,   221,     0,     5,     0,    22,     0,   139,   152,
     0,   136,   152,     0,   133,   152,     0,    48,   152,   153,
    49,     7,    48,   152,    49,     0,   144,     0,    23,   144,
    37,   209,     0,   152,   131,     0,    45,   152,    46,     0,
    36,   152,   153,     0,     0,   182,   210,   182,     0,   155,
   112,   155,     0,   155,   110,   155,     0,   155,   106,   155,
     0,   141,    45,   155,    46,     0,   173,     0,   172,     0,
   165,     0,   233,     0,   227,     0,   228,     0,   229,     0,
   132,    45,   155,    46,     0,   140,    45,   155,    46,     0,
   137,    45,   155,    46,     0,   138,    45,   155,    46,     0,
   139,    45,   208,    46,     0,     6,    45,   208,    46,     0,
    31,    48,   155,    49,    32,    45,   208,    46,     0,    34,
     0,     5,     0,    22,     0,   134,    45,   182,    46,     0,
   237,     0,   235,     0,    24,     0,    25,     0,   136,    45,
   155,    46,     0,   155,   111,   155,     0,    45,   226,    46,
   107,    50,   155,    51,     0,    27,    45,   219,   224,    46,
   112,    45,   155,    46,     0,    48,   155,   225,    49,     7,
   217,     0,    48,   155,    49,     7,   217,     0,    23,   144,
    45,   213,    46,   113,    48,   161,    49,     0,    52,   144,
    45,   213,    46,    48,   155,    49,     0,    60,   144,    45,
   213,    46,   113,    48,   161,    49,     0,   163,     0,   105,
    45,   219,    46,     0,    72,    45,   206,    46,     0,   199,
     0,    61,   219,    45,   221,    46,     0,    58,    45,   174,
    36,   177,    46,     0,    62,    45,   174,    36,   177,    46,
     0,    59,    45,   174,    36,   219,    46,     0,    63,    45,
   174,    36,   219,    46,     0,   162,     0,    26,   219,   214,
    37,    48,   155,    49,     0,    45,   155,    46,     0,   157,
     0,   165,     0,   165,   112,   156,     0,   157,    54,   157,
     0,   158,     0,    45,   158,    46,     0,   217,    53,    45,
   159,    46,     0,   217,    53,    45,    46,     0,   160,     0,
   159,    36,   159,     0,   159,    56,   159,     0,   159,    55,
   182,     0,   159,    55,    57,     0,    45,   159,    46,     0,
   182,     0,   155,     0,     0,   144,    45,   215,    46,     0,
   179,    45,   215,    46,     0,   164,    48,   156,    49,     0,
    12,   144,     0,    14,   144,     0,   103,   166,     0,   102,
   166,     0,   166,     0,   167,   168,     0,   146,   168,     0,
    12,   144,   168,     0,    14,   144,   168,     0,    12,   146,
   168,     0,    14,   146,   168,     0,    40,   213,     0,    44,
   170,     0,    45,   127,   219,    46,    45,   213,    46,     0,
    45,   127,   127,   219,    46,    45,   213,    46,     0,    45,
   127,   144,    50,   182,   180,    51,    46,    45,   213,    46,
     0,    45,   127,   144,    50,   182,   180,    51,    46,    45,
   213,    46,   113,   190,     0,    38,     0,    43,     0,    41,
     0,    39,     0,    42,     0,    17,     0,   219,   169,     0,
   144,    50,   182,   180,    51,   169,     0,   219,   113,   177,
   169,     0,   219,   113,   220,   169,     0,   144,    11,   113,
   190,   169,     0,   144,    11,   113,   220,   169,     0,   144,
    50,   182,   180,    51,   113,   190,   169,     0,   144,    50,
   182,   180,    51,   113,   220,   169,     0,   127,   168,     0,
    36,   168,     0,    36,     1,     0,     0,   144,    50,   182,
   180,    51,   171,     0,    36,   144,    50,   182,   180,    51,
   171,     0,     0,    36,     1,     0,    15,    45,   174,    36,
   220,    46,     0,    18,    45,   219,    36,   221,    36,   219,
    46,     0,    20,    45,   219,    46,     0,    19,    45,   219,
    36,   219,    46,     0,    21,    45,   219,    36,   219,    46,
     0,    21,    45,   179,    36,   219,    46,     0,    16,    45,
   219,    46,     0,   174,   176,   177,     0,   219,     0,   239,
     0,   179,     0,   181,     0,    45,   174,    46,     0,   132,
   174,     0,   175,     0,    45,    45,    41,   127,    46,   147,
    46,    50,   182,   180,    51,     0,    45,    45,   102,    41,
   127,    46,   147,    46,    50,   182,   180,    51,     0,    45,
    45,    38,   127,    46,   147,    46,    50,   182,   180,    51,
     0,    45,    45,    43,   127,    46,   147,    46,    50,   182,
   180,    51,     0,    45,    45,    41,   127,    46,    45,    45,
    41,   127,    46,   147,    46,    46,    50,   182,   180,    51,
     0,    45,    45,    41,   127,    46,    45,    45,   102,    41,
   127,    46,   147,    46,    46,    50,   182,   180,    51,     0,
    45,    45,    41,   127,    46,    45,    45,    38,   127,    46,
   147,    46,    46,    50,   182,   180,    51,     0,    45,    45,
   102,    41,   127,    46,    45,    45,    41,   127,    46,   147,
    46,    46,    50,   182,   180,    51,     0,    45,    45,   102,
    41,   127,    46,    45,    45,   102,    41,   127,    46,   147,
    46,    46,    50,   182,   180,    51,     0,    45,    45,   102,
    41,   127,    46,    45,    45,    38,   127,    46,   147,    46,
    46,    50,   182,   180,    51,     0,    45,    45,    38,   127,
    46,    45,    45,    41,   127,    46,   147,    46,    46,    50,
   182,   180,    51,     0,    45,    45,    38,   127,    46,    45,
    45,   102,    41,   127,    46,   147,    46,    46,    50,   182,
   180,    51,     0,    45,    45,    38,   127,    46,    45,    45,
    38,   127,    46,   147,    46,    46,    50,   182,   180,    51,
     0,   113,     0,   114,     0,   182,     0,   190,     0,   220,
     0,   208,     0,   239,     0,   172,     0,    45,   220,    46,
    45,   167,    46,    45,   213,    46,   162,     0,    45,   177,
    46,     0,   178,     0,   127,    45,   175,    46,     0,   144,
    50,   182,   180,    51,     0,    45,    45,    38,   127,    46,
   144,    46,    50,   182,   180,    51,     0,    45,    45,   102,
    38,   127,    46,   144,    46,    50,   182,   180,    51,     0,
    45,    45,    43,   127,    46,   144,    46,    50,   182,   180,
    51,     0,    45,    45,    41,   127,    46,   144,    46,    50,
   182,   180,    51,     0,    45,    45,   102,    41,   127,    46,
   144,    46,    50,   182,   180,    51,     0,    45,   179,    46,
     0,    36,   182,   180,     0,    36,     1,     0,     0,   127,
   219,     0,   127,   181,     0,   127,   179,     0,    45,   181,
    46,    50,   182,   180,    51,     0,   127,    45,   212,   127,
    46,   182,     0,   127,    45,   182,    46,     0,    45,   181,
    46,     0,   185,     0,   185,   210,   182,     0,   182,   189,
   185,     0,     3,   208,    35,   182,   184,     0,   185,     0,
   185,   189,   185,     0,     4,   182,     0,     0,   186,     0,
   185,   188,   186,     0,   199,     0,   221,     0,   126,   186,
     0,   130,   186,     0,    10,     0,   223,     0,   219,     0,
   179,     0,   187,     0,   181,     0,   162,     0,    45,   182,
    46,     0,   207,     0,   222,     0,   194,     0,   195,     0,
   239,     0,   198,     0,   142,    45,   219,    46,     0,   127,
     0,   128,     0,   129,     0,   123,     0,   124,     0,   116,
     0,    56,     0,   115,     0,   125,     0,   126,     0,   190,
   115,   190,     0,   191,     0,   192,     0,    45,   190,    46,
     0,    50,   182,   193,    51,     0,    50,   220,   193,    51,
     0,    50,   222,   193,    51,     0,    50,   190,   193,    51,
     0,    48,   182,   193,    49,     0,    48,   220,   193,    49,
     0,    48,   222,   193,    49,     0,    48,   190,   193,    49,
     0,    36,   182,   193,     0,    36,   220,   193,     0,    36,
   222,   193,     0,    36,   190,   193,     0,     0,    36,     1,
     0,   116,   219,     0,   116,   179,     0,   116,   239,     0,
   116,   194,     0,    45,   194,    46,     0,    45,    38,    46,
   183,     0,    45,    43,    46,   183,     0,    45,    41,    46,
   183,     0,    45,   103,    38,    46,   183,     0,    45,   103,
    41,    46,   183,     0,    45,   102,    38,    46,   183,     0,
    45,   102,    41,    46,   183,     0,    45,    38,   127,    46,
   196,     0,    45,   102,    38,   127,    46,   196,     0,    45,
    43,   127,    46,   196,     0,    45,    41,   127,    46,   196,
     0,    45,   102,    41,   127,    46,   196,     0,    45,    42,
   127,    46,   196,     0,    45,    38,   127,   127,    46,   196,
     0,    45,   102,    38,   127,   127,    46,   196,     0,    45,
    43,   127,   127,    46,   196,     0,    45,    41,   127,   127,
    46,   196,     0,    45,   102,    41,   127,   127,    46,   196,
     0,    45,    42,   127,   127,    46,   196,     0,    45,    12,
   146,   127,    46,   196,     0,    45,   146,   127,    46,   196,
     0,    45,    12,   146,   127,   127,    46,   196,     0,    45,
   146,   127,   127,    46,   196,     0,   183,     0,   104,    45,
   182,    46,     0,   212,     0,    38,   127,     0,    43,   127,
     0,    41,   127,     0,   102,    38,   127,     0,   102,    41,
   127,     0,    12,   146,   127,     0,   146,   127,     0,    71,
    45,   182,    46,     0,    71,    45,   197,    46,     0,    71,
    45,   146,    46,     0,    71,    45,   220,    46,     0,   200,
     0,   201,     0,   202,     0,   204,     0,   203,     0,   205,
     0,    65,    45,   206,    46,     0,    66,    45,   206,    46,
     0,    67,    45,   206,    36,   206,    46,     0,    68,    45,
   206,    36,   206,    46,     0,    69,    45,   206,    36,   206,
    46,     0,    70,    45,   206,    46,     0,   219,     0,   179,
     0,   181,     0,   220,     0,   199,     0,   239,     0,    79,
   182,     0,    77,   182,     0,    78,   182,     0,    80,   182,
     0,    81,   182,     0,    82,   182,     0,    83,   182,     0,
    84,   182,     0,    85,   182,     0,    86,   182,     0,    87,
   182,     0,    88,   182,     0,    89,   182,     0,    90,   182,
     0,    91,   182,     0,    92,   182,     0,    93,    45,   182,
    36,   182,    46,     0,    94,    45,   182,    36,   182,    46,
     0,    98,    45,   182,    36,   182,    46,     0,    99,    45,
   182,    36,   182,    46,     0,   100,    45,   182,    36,   182,
    46,     0,    95,   182,     0,    96,   182,     0,    97,   182,
     0,   209,     0,   182,   118,   220,     0,   182,   117,   220,
     0,   220,   118,   182,     0,   220,   117,   182,     0,   182,
   118,    10,     0,   182,   117,    10,     0,    10,   118,   182,
     0,    10,   117,   182,     0,   182,   118,   222,     0,   182,
   117,   222,     0,   133,   208,     0,   208,   112,   208,     0,
   208,   110,   208,     0,    45,   208,    46,     0,   182,   210,
   182,     0,   133,   209,     0,    24,     0,    25,     0,    22,
     0,     5,     0,   182,     0,   203,     0,   172,     0,   119,
     0,   120,     0,   117,     0,   121,     0,   122,     0,   118,
     0,   102,    38,     0,   102,    41,     0,   211,     0,   167,
     0,   212,   219,   214,     0,   212,   214,     0,   146,   219,
   214,     0,   146,   127,   219,   214,     0,   146,   127,   127,
   219,   214,     0,   146,   219,    11,   214,     0,   144,   219,
   214,     0,   144,   127,   219,   214,     0,   144,   127,   127,
   219,   214,     0,   144,   219,    11,   214,     0,   146,   214,
     0,   146,   127,   214,     0,   146,   127,   127,   214,     0,
   144,   214,     0,   144,   127,   214,     0,   144,   127,   127,
   214,     0,   212,   219,    11,   214,     0,   212,   127,   219,
    11,   214,     0,   212,   219,    50,   182,    51,   214,     0,
   212,   219,    50,   182,    36,   182,    51,   214,     0,   212,
   219,    11,    50,   182,    51,   214,     0,   212,   127,   219,
   214,     0,   212,   127,   214,     0,   212,   127,   127,   219,
   214,     0,    45,   127,   219,    46,    45,   213,    46,   214,
     0,     0,    36,   212,   219,   214,     0,    36,   212,   214,
     0,    36,   144,   219,   214,     0,    36,   146,   219,   214,
     0,    36,   146,   127,   219,   214,     0,    36,   144,   219,
    11,   214,     0,    36,   146,   219,    11,   214,     0,    36,
   212,   219,    11,   214,     0,    36,   212,   127,   219,    11,
   214,     0,    36,   212,   127,   219,   214,     0,    36,    45,
   127,   219,    46,    45,   213,    46,   214,     0,     0,    36,
   212,   219,    50,   182,    51,   214,     0,    36,   212,   219,
    50,   182,    36,   182,    51,   214,     0,    36,   212,   219,
    11,    50,   182,    51,   214,     0,    36,   212,   127,   219,
   214,     0,    36,   212,   127,   214,     0,    36,   219,   214,
     0,    36,     1,     0,   177,   216,     0,   144,    45,   215,
    46,   216,     0,     0,   116,     1,     0,    36,   177,   216,
     0,    36,   144,    45,   215,    46,   216,     0,     0,    36,
     1,     0,    48,   155,    49,     0,     1,    49,     0,    45,
   208,    46,     0,     1,    46,     0,   144,     0,    45,   219,
    46,     0,   145,     0,   147,     0,   149,     0,   148,     0,
    36,   219,   224,     0,     0,    36,     1,     0,     0,    36,
   155,   225,     0,   209,     0,   133,   226,     0,   226,   112,
   226,     0,   226,   110,   226,     0,    45,   226,    46,     0,
    29,   218,   217,     0,    73,    45,   186,    46,    48,     0,
    49,     0,    75,   186,    37,    45,   155,    46,     0,     0,
    76,    37,    45,   155,    46,     0,     0,    74,     0,     0,
     0,     0,     0,    28,   182,    47,    30,   217,     0,    28,
    45,   230,   106,   231,   106,   232,    46,   217,     0,   173,
     0,   166,     0,     0,   154,     0,     0,   173,     0,     0,
     3,   208,    35,   217,   234,     0,     4,   217,     0,     0,
    33,    45,   177,    46,     0,    33,    45,   177,   236,    46,
     0,     0,    36,   177,   236,     0,   135,    45,   219,    46,
     0,   135,    45,   219,   238,    46,     0,   135,    45,   179,
    46,     0,   135,    45,   179,   238,    46,     0,   135,    45,
   239,    46,     0,     0,    36,   219,   238,     0,    36,   179,
   238,     0,   219,    13,   219,   240,     0,   179,    13,   219,
   240,     0,   181,    13,   219,   240,     0,   219,    13,   179,
   240,     0,   179,    13,   179,   240,     0,   181,    13,   179,
   240,     0,   219,   107,   219,   240,     0,   179,   107,   219,
   240,     0,    45,   194,    46,   107,   219,   240,     0,   181,
   107,   219,   240,     0,   219,   107,   179,   240,     0,   179,
   107,   179,   240,     0,    45,   194,    46,   107,   179,   240,
     0,   219,    13,   162,     0,   219,   107,   162,     0,   181,
   107,   179,   240,     0,    45,   239,    46,     0,     0,    13,
   219,   240,     0,    13,   179,   240,     0,   107,   219,   240,
     0,   107,   179,   240,     0,    13,   162,     0,   107,   162,
     0
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
};

#endif

#if YYDEBUG != 0
static const short yyrline[] = { 0,
<<<<<<< HEAD
   159,   190,   191,   195,   196,   197,   198,   199,   204,   205,
   206,   207,   208,   209,   210,   211,   212,   217,   218,   219,
   220,   221,   222,   226,   227,   232,   233,   237,   241,   246,
   248,   255,   361,   363,   365,   366,   367,   368,   369,   370,
   372,   373,   375,   376,   377,   378,   379,   380,   386,   387,
   388,   389,   390,   391,   393,   396,   402,   406,   415,   423,
   427,   431,   432,   436,   441,   443,   457,   461,   465,   472,
   473,   478,   483,   488,   489,   494,   502,   513,   527,   528,
   529,   533,   537,   541,   545,   549,   553,   560,   562,   564,
   569,   581,   582,   583,   586,   587,   588,   595,   599,   603,
   608,   614,   619,   626,   632,   643,   645,   646,   650,   657,
   661,   662,   669,   671,   673,   675,   677,   679,   681,   693,
   697,   698,   699,   700,   701,   702,   703,   706,   708,   710,
   712,   714,   716,   718,   720,   722,   724,   726,   728,   730,
   735,   736,   739,   740,   741,   745,   746,   747,   750,   754,
   759,   761,   763,   765,   767,   769,   773,   775,   776,   782,
   783,   784,   786,   788,   790,   792,   798,   799,   800,   801,
   807,   808,   812,   813,   817,   818,   823,   824,   825,   826,
   827,   829,   830,   831,   832,   833,   834,   835,   836,   837,
   838,   839,   845,   846,   847,   848,   849,   850,   851,   852,
   854,   856,   860,   861,   862,   863,   869,   873,   881,   893,
   897,   906,   918,   922,   930,   934,   935,   938,   943,   947,
   952,   956,   963,   966,   967,   970,   971,   974,   975,   978,
   979,   980,   981,   982,   983,   986,   987,   988,   989,   990,
   991,   993,   994,   996,   997,   999,  1000,  1004,  1006,  1007,
  1008,  1009,  1010,  1011,  1012,  1016,  1018,  1019,  1020,  1025,
  1027,  1028,  1029,  1030,  1031,  1034,  1041,  1048,  1055,  1062,
  1069,  1077,  1078,  1079,  1080,  1081,  1082,  1088,  1092,  1095,
  1098,  1099,  1100,  1101,  1102,  1103,  1106,  1107,  1108,  1111,
  1112,  1113,  1114,  1117,  1118,  1121,  1122,  1125,  1127,  1128,
  1129,  1135,  1136,  1137,  1138,  1139,  1145,  1147,  1148,  1151,
  1154,  1155,  1158,  1159,  1162,  1163,  1166,  1167,  1170,  1171,
  1176,  1177,  1178,  1179,  1180,  1181,  1188,  1190,  1193,  1195,
  1201,  1205,  1210,  1216,  1222,  1228,  1238,  1244,  1250,  1256,
  1265,  1269,  1273,  1279,  1283,  1287,  1293,  1299,  1306,  1314,
  1322,  1328,  1334,  1338,  1345,  1351,  1354,  1358,  1362,  1368,
  1374,  1380,  1387,  1395,  1401,  1416,  1422,  1425,  1433,  1441,
  1447,  1453,  1457,  1466,  1470,  1480,  1481,  1485,  1489,  1499,
  1500,  1508,  1510,  1517,  1519,  1525,  1526,  1530,  1535,  1540,
  1545,  1551,  1555,  1556,  1562,  1563,  1574,  1585,  1586,  1588,
  1590,  1596,  1602,  1610,  1618,  1622,  1626,  1632,  1636,  1642,
  1646,  1652,  1658,  1664,  1665,  1666,  1669,  1679,  1680,  1686,
  1687,  1691,  1692,  1697,  1698,  1699,  1700,  1701,  1704,  1705,
  1706,  1712,  1713,  1714,  1716,  1717,  1718,  1720,  1721,  1722,
  1723,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1735,  1736,
  1737,  1738,  1739,  1740,  1741
};

static const char * const yytname[] = {   "$","error","$undefined.","SWITCH",
"CASE","BREAK","IF","ELSE","EMPTY","AWAIT","PROJECTION","PBEGIN","PEND","POINTERNULL",
"ARRAY","STRUCT","DOT","UNION","FOPEN","FCLOSE","FILEDECLARATION","FGETS","FPUTS",
"FGETC","FPUTC","MORE","DEFINE","MY_TRUE","MY_FALSE","EXIST","FRAME","FOR","WHILE",
"DO","TRUE","FALSE","REPEAT","UNTIL","DISPLAY","SKIP","THEN","COMMA","COLON",
"INTDECLARATION","STRDECLARATION","POINTERDECLARATION","CHARDECLARATION","VOIDDECLARATION",
"FLOATDECLARATION","LISTDECLARATION","OPEN_PAR","CLOSE_PAR","TIMES","OPEN_BPAR",
"CLOSE_BPAR","OPEN_MPAR","CLOSE_MPAR","FUNCTION","OVER","CYLINDER","OVEREP",
"INTER_OR","NON_DETERMINED","SEND","RECEIVE","PROCESS","CHANNEL","PUT","GET",
"ERROR_TOKEN","STRFUNCHEAD","STRFUNCTAIL","STRFUNCCAT","STRFUNCCMP","STRFUNCCPY",
"STRFUNCLEN","SIZEOF","SYSTEM","CEIL","FLOOR","ROUND","SIN","COS","TAN","ASIN",
"ACOS","ATAN","SINH","COSH","TANH","EXP","LOG","LOG10","SQRT","ATAN2","POW",
"ABS","FABS","LABS","FMOD","MODF","LDEXP","FREXP","UNSIGNED","SIGNED","MALLOC",
"FREE","CHOP","IMPLY","IFF","PROPIMPLY","OR","PARALLEL","AND","ASS_P","ASS_N",
"CON","ADDRESS","NE","EQ","GE","LE","GT","LT","LST","RST","ADD","SUB","MUL",
"DIV","MOD","BNE","CHOPSTAR","NEXT","NEGATION","LENGTH","REQUEST","FINAL","KEEP",
"ALWAYS","HALT","W_NEXT","PREFIX","SOMETIMES","ID","STRLITERAL","STRUCT_TYPE",
"INTLITERAL","FLOATLITERAL","CHARLITERAL","program","gComplexProposition","complexProposition",
"poptional_projection","statement","option_struct_declaration","empty_statement",
"function","struct_define_statement","struct_identifier","sign_declaration",
"declaration","type_define","option_identifier_array_declaration","inner_option_identifier_array_declaration",
"file_statement","ass_statement","ass_left","leftaddrshift","assign_operator",
"ass_right","rightaddrshift","array","option_ari_exp","point_exp","ari_exp",
"type_cast_alg_exp","option_exp_else_statement","simple_ari_exp","member_in_exp",
"bi_operator","ari_operator","array_exp","option_list_value","option_struct_list_value",
"inner_option_list_value","address_exp","type_cast","casted_element","all_sizeof_type",
"size_of","String_Function","String_Function_head","String_Function_tail","String_Function_cat",
"String_Function_cmp","String_Function_cpy","String_Function_len","str_func_parameter",
"math_function","bool_exp","prime_bool_exp","relation_operator","sign_type_define",
"all_type_define","option_function_parameter_list","inner_option_define_identifier",
"option_function_identifier","inner_option_function_identifier","statement_bpar",
"bool_par","identifier","strliteral","intliteral","charliteral","floatliteral",
"option_frame_identifier","option_projection","imply_pre","while_statement",
"for_statement","extend_for_statement","for_sta_init","for_sta_condition","for_sta_control",
"switch_statement","case_par","option_case_par","if_statement","option_else_statement",
"output_statement","option_output","input_statement","option_input","struct_member_exp",
"option_struct_member_exp","struct_member_exp"
=======
   147,   178,   179,   183,   184,   185,   186,   187,   192,   193,
   194,   195,   196,   197,   198,   199,   200,   204,   205,   206,
   207,   208,   209,   210,   214,   215,   220,   221,   225,   229,
   232,   238,   240,   247,   352,   353,   354,   355,   358,   359,
   360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
   370,   371,   372,   378,   379,   380,   381,   382,   383,   385,
   388,   394,   399,   408,   416,   420,   424,   425,   429,   433,
   437,   441,   447,   454,   460,   468,   470,   484,   485,   488,
   492,   499,   501,   503,   507,   509,   513,   515,   517,   519,
   521,   523,   527,   539,   540,   546,   551,   560,   568,   579,
   593,   594,   595,   599,   603,   607,   611,   615,   619,   623,
   624,   626,   628,   630,   635,   647,   648,   649,   652,   653,
   654,   661,   665,   669,   674,   679,   685,   690,   697,   703,
   714,   716,   717,   721,   728,   732,   733,   740,   742,   744,
   746,   748,   750,   752,   764,   768,   769,   770,   771,   772,
   773,   774,   777,   779,   781,   783,   785,   787,   789,   791,
   793,   795,   797,   799,   801,   806,   807,   810,   811,   812,
   813,   814,   815,   816,   817,   818,   821,   826,   831,   833,
   835,   837,   839,   841,   845,   847,   848,   854,   855,   856,
   858,   860,   862,   864,   870,   871,   872,   873,   879,   880,
   884,   885,   889,   890,   891,   895,   896,   897,   898,   899,
   901,   902,   903,   904,   905,   906,   907,   908,   909,   910,
   911,   912,   918,   925,   926,   927,   928,   929,   930,   931,
   932,   935,   936,   940,   941,   942,   943,   949,   953,   957,
   961,   973,   977,   981,   985,   997,  1001,  1005,  1009,  1013,
  1014,  1018,  1023,  1027,  1032,  1036,  1043,  1046,  1047,  1050,
  1051,  1054,  1055,  1058,  1059,  1060,  1061,  1062,  1063,  1066,
  1067,  1068,  1069,  1070,  1071,  1073,  1074,  1076,  1077,  1079,
  1080,  1084,  1086,  1087,  1088,  1089,  1090,  1091,  1092,  1096,
  1098,  1099,  1100,  1105,  1107,  1108,  1109,  1110,  1111,  1114,
  1121,  1128,  1135,  1142,  1149,  1157,  1158,  1159,  1160,  1161,
  1162,  1168,  1170,  1171,  1173,  1174,  1175,  1176,  1177,  1178,
  1179,  1180,  1181,  1182,  1183,  1184,  1185,  1187,  1188,  1189,
  1190,  1191,  1193,  1194,  1195,  1201,  1205,  1206,  1209,  1210,
  1213,  1214,  1217,  1218,  1221,  1222,  1224,  1225,  1226,  1227,
  1233,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1246,
  1247,  1248,  1249,  1250,  1253,  1260,  1262,  1265,  1267,  1273,
  1277,  1282,  1288,  1294,  1300,  1310,  1316,  1322,  1328,  1337,
  1341,  1345,  1351,  1355,  1359,  1365,  1371,  1378,  1386,  1394,
  1400,  1406,  1410,  1417,  1423,  1426,  1430,  1434,  1440,  1446,
  1452,  1459,  1467,  1473,  1479,  1488,  1494,  1497,  1505,  1513,
  1519,  1525,  1529,  1533,  1542,  1546,  1556,  1557,  1561,  1565,
  1575,  1576,  1584,  1586,  1593,  1595,  1601,  1602,  1606,  1611,
  1616,  1621,  1627,  1631,  1632,  1638,  1639,  1650,  1661,  1662,
  1664,  1666,  1672,  1677,  1681,  1685,  1692,  1694,  1695,  1700,
  1708,  1716,  1720,  1724,  1730,  1734,  1740,  1744,  1750,  1760,
  1761,  1767,  1768,  1772,  1773,  1778,  1779,  1780,  1781,  1782,
  1785,  1786,  1787,  1793,  1794,  1795,  1797,  1798,  1799,  1801,
  1802,  1803,  1804,  1806,  1807,  1808,  1809,  1810,  1811,  1812,
  1816,  1817,  1818,  1819,  1820,  1821,  1822
};

static const char * const yytname[] = {   "$","error","$undefined.","IF","ELSE",
"EMPTY","AWAIT","PROJECTION","PBEGIN","PEND","POINTERNULL","ARRAY","STRUCT",
"DOT","UNION","FOPEN","FCLOSE","FILEDECLARATION","FGETS","FPUTS","FGETC","FPUTC",
"MORE","DEFINE","MY_TRUE","MY_FALSE","EXIST","FRAME","FOR","WHILE","DO","REPEAT",
"UNTIL","DISPLAY","SKIP","THEN","COMMA","COLON","INTDECLARATION","STRDECLARATION",
"POINTERDECLARATION","CHARDECLARATION","VOIDDECLARATION","FLOATDECLARATION",
"LISTDECLARATION","OPEN_PAR","CLOSE_PAR","TIMES","OPEN_BPAR","CLOSE_BPAR","OPEN_MPAR",
"CLOSE_MPAR","FUNCTION","OVER","CYLINDER","OVEREP","INTER_OR","NON_DETERMINED",
"SEND","RECEIVE","PROCESS","CHANNEL","PUT","GET","ERROR_TOKEN","STRFUNCHEAD",
"STRFUNCTAIL","STRFUNCCAT","STRFUNCCMP","STRFUNCCPY","STRFUNCLEN","SIZEOF","SYSTEM",
"SWITCH","BREAK","CASE","DEFAULT","CEIL","FLOOR","ROUND","SIN","COS","TAN","ASIN",
"ACOS","ATAN","SINH","COSH","TANH","EXP","LOG","LOG10","SQRT","ATAN2","POW",
"ABS","FABS","LABS","FMOD","MODF","LDEXP","FREXP","UNSIGNED","SIGNED","MALLOC",
"FREE","CHOP","IMPLY","IFF","PROPIMPLY","OR","PARALLEL","AND","ASS_EQU","UNITASSIGN",
"CON","ADDRESS","NE","EQU","GE","LE","GT","LT","LST","RST","ADD","SUB","MUL",
"DIV","MOD","BNE","CHOPSTAR","NEXT","NEGATION","LENGTH","REQUEST","FINAL","KEEP",
"ALWAYS","HALT","W_NEXT","PREFIX","PREVIOUS","SOMETIMES","ID","STR","STRUCT_TYPE",
"INTEGER","FLOATLITERAL","CHARLITERAL","program","gComplexProposition","complexProposition",
"poptional_projection","pbool_expression","statement","option_struct_declaration",
"CYLINDER_STATEMENT","OVER_STATEMENT","INTERVAL_STATEMENT","SIG_INTERVAL","empty_statement",
"function","struct_define_statement","struct_identifier","sign_declaration",
"declaration","type_define","option_identifier_array_declaration","inner_option_identifier_array_declaration",
"option_array_declaration","inner_option_array_declaration","file_statement",
"ass_statement","ass_ident","leftaddrshift","assign_operator","ass_exp","rightaddrshift",
"list","option_alg_exp","value_exp","alg_exp","type_cast_alg_exp","optional_exp_else_statement",
"simple_alg_exp","factor","pre_next","mul_operator","alg_operator","list_exp",
"option_list_value","option_struct_list_value","inner_option_list_value","address_exp",
"type_cast","casted_element","all_sizeof_type","size_of","String_Function","String_Function_head",
"String_Function_tail","String_Function_cat","String_Function_cmp","String_Function_cpy",
"String_Function_len","str_func_parameter","Float_Function","bool_statement",
"prime_bool_statement","relation_operator","sign_type_define","all_type_define",
"option_function_parameter_list","inner_optional_define_identifier","option_function_identifier",
"inner_option_function_identifier","big_par","bool_par","identifier","string",
"integer","charliteral","floatliteral","optional_frame_identifier","optional_projection",
"imply_pre","while_statement","for_statement","extend_for_statement","for_sta_init",
"for_sta_condition","for_sta_control","if_statement","optional_else_statement",
"display_statement","option_output","request_statement","option_input","struct_member_exp",
"option_struct_member_exp","option_input"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
};
#endif

static const short yyr1[] = {     0,
   150,   151,   151,   152,   152,   152,   152,   152,   152,   152,
   152,   152,   152,   152,   152,   152,   152,   152,   152,   152,
<<<<<<< HEAD
   152,   152,   152,   152,   152,   152,   152,   153,   153,   154,
   154,   154,   154,   154,   154,   154,   154,   154,   154,   154,
   154,   154,   154,   154,   154,   154,   154,   154,   154,   154,
   154,   154,   154,   154,   154,   154,   154,   154,   154,   154,
   154,   154,   154,   154,   154,   154,   154,   155,   155,   156,
   156,   157,   157,   157,   157,   158,   159,   159,   160,   160,
   160,   161,   161,   161,   161,   161,   161,   161,   161,   161,
   161,   162,   162,   162,   162,   162,   162,   163,   163,   163,
   163,   163,   163,   163,   163,   164,   164,   164,    -1,    -1,
    -1,    -1,   165,   165,   165,   165,   165,   165,   165,   166,
   167,   167,   167,   167,   167,   167,   167,   168,   168,   168,
   168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
   169,   169,   170,   170,   170,   170,   170,   170,   171,   172,
   172,   172,   172,   172,   172,   172,   173,   173,   173,   174,
   174,   174,   174,   174,   174,   174,   175,   175,   175,   175,
   176,   176,   177,   177,   178,   178,   179,   179,   179,   179,
   179,   179,   179,   179,   179,   179,   179,   179,   179,   179,
   179,   179,   180,   180,   180,   180,   180,   180,   180,   180,
   181,   181,   182,   182,   182,   182,   183,   183,   183,   184,
   184,   184,   185,   185,   185,   185,   185,   186,   186,   186,
   186,   186,   187,   187,   187,   187,   187,   187,   187,   187,
   187,   187,   187,   187,   187,   187,   187,   187,   187,   187,
   187,   187,   187,   187,   187,   188,   188,   189,   189,   189,
   189,   189,   189,   189,   189,   190,   190,   190,   190,   191,
   191,   191,   191,   191,   191,   192,   193,   194,   195,   196,
   197,   198,   198,   198,   198,   198,   198,   199,   199,   199,
   199,   199,   199,   199,   199,   199,   199,   199,   199,   199,
   199,   199,   199,   199,   199,   199,   199,   199,   199,   199,
   199,   200,   200,   200,   200,   200,   201,   201,   201,   201,
   201,   201,   201,   201,   201,   201,   201,   201,   201,   201,
   202,   202,   202,   202,   202,   202,   203,   203,   204,   204,
   205,   205,   205,   205,   205,   205,   205,   205,   205,   205,
   205,   205,   205,   205,   205,   205,   205,   205,   205,   205,
   205,   205,   205,   205,   205,   205,   206,   206,   206,   206,
   206,   206,   206,   206,   206,   206,   206,   206,   206,   206,
   206,   206,   206,   207,   207,   207,   207,   208,   208,   208,
   208,   209,   209,   210,   210,   211,   211,   212,   213,   214,
   215,   216,   216,   216,   217,   217,   218,   218,   218,   218,
   218,   219,   220,   221,   222,   222,   222,   223,   223,   224,
   224,   225,   226,   227,   227,   227,   228,   229,   229,   230,
   230,   231,   231,   232,   232,   232,   232,   232,   233,   233,
   233,   234,   234,   234,   234,   234,   234,   234,   234,   234,
   234,   234,   234,   234,   234,   234,   234,   234,   235,   235,
   235,   235,   235,   235,   235
=======
   152,   152,   152,   152,   152,   152,   152,   152,   153,   153,
   154,   155,   155,   155,   155,   155,   155,   155,   155,   155,
   155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
   155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
   155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
   155,   155,   155,   155,   155,   155,   155,   155,   155,   156,
   156,   157,   157,   157,   158,   158,   159,   159,   159,   159,
   159,   159,   160,   161,   161,   162,   162,   163,   164,   164,
   165,   165,   165,   166,   166,   166,   166,   166,   166,   166,
   166,   166,   166,   166,   166,   167,   167,   167,   167,   167,
   167,   168,   168,   168,   168,   168,   168,   168,   168,   168,
   169,   169,   169,   170,   171,   171,   171,   172,   172,   172,
   172,   172,   172,   172,   173,   174,   174,   174,   174,   174,
   174,   174,   175,   175,   175,   175,   175,   175,   175,   175,
   175,   175,   175,   175,   175,   176,   176,   177,   177,   177,
   177,   177,   177,   177,   177,   177,   178,   179,   179,   179,
   179,   179,   179,   179,   180,   180,   180,   181,   181,   181,
   181,   181,   181,   181,   182,   182,   182,   182,   183,   183,
   184,   184,   185,   185,   185,   186,   186,   186,   186,   186,
   186,   186,   186,   186,   186,   186,   186,   186,   186,   186,
   186,   186,   187,   188,   188,   188,   188,   188,   188,   188,
   188,   189,   189,   190,   190,   190,   190,   191,   191,   191,
   191,   192,   192,   192,   192,   193,   193,   193,   193,   193,
   193,   194,   194,   194,   194,   194,   195,   195,   195,   195,
   195,   195,   195,   195,   195,   195,   195,   195,   195,   195,
   195,   195,   195,   195,   195,   195,   195,   195,   195,   196,
   196,   197,   197,   197,   197,   197,   197,   197,   197,   198,
   198,   198,   198,   199,   199,   199,   199,   199,   199,   200,
   201,   202,   203,   204,   205,   206,   206,   206,   206,   206,
   206,   207,   207,   207,   207,   207,   207,   207,   207,   207,
   207,   207,   207,   207,   207,   207,   207,   207,   207,   207,
   207,   207,   207,   207,   207,   208,   208,   208,   208,   208,
   208,   208,   208,   208,   208,   208,   208,   208,   208,   208,
   209,   209,   209,   209,   209,   209,   209,   209,   209,   210,
   210,   210,   210,   210,   210,   211,   211,   212,   212,   213,
   213,   213,   213,   213,   213,   213,   213,   213,   213,   213,
   213,   213,   213,   213,   213,   213,   213,   213,   213,   213,
   213,   213,   213,   213,   213,   214,   214,   214,   214,   214,
   214,   214,   214,   214,   214,   214,   214,   214,   214,   214,
   214,   214,   214,   214,   215,   215,   215,   215,   216,   216,
   216,   216,   217,   217,   218,   218,   219,   219,   220,   221,
   222,   223,   224,   224,   224,   225,   225,   226,   226,   226,
   226,   226,   227,    -1,    -1,    -1,    -1,    -1,    -1,   228,
   229,   230,   230,   230,   231,   231,   232,   232,   233,   234,
   234,   235,   235,   236,   236,   237,   237,   237,   237,   237,
   238,   238,   238,   239,   239,   239,   239,   239,   239,   239,
   239,   239,   239,   239,   239,   239,   239,   239,   239,   239,
   240,   240,   240,   240,   240,   240,   240
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
};

static const short yyr2[] = {     0,
     2,     3,     0,     3,     3,     3,     3,     3,     2,     2,
<<<<<<< HEAD
     2,     2,     2,     1,     1,     1,     2,     1,     1,     2,
     2,     2,     8,     1,     4,     2,     3,     3,     0,     3,
     3,     3,     1,     1,     1,     1,     1,     1,     1,     4,
     4,     4,     4,     8,     1,     1,     1,     4,     1,     1,
     1,     1,     4,     3,     7,     9,     6,     5,     9,     8,
     9,     1,     4,     4,     1,     7,     3,     1,     3,     1,
     0,     4,     4,     1,     1,     4,     2,     2,     2,     2,
     1,     2,     2,     3,     3,     3,     3,     7,     8,    11,
    13,     1,     1,     1,     1,     1,     1,     2,     6,     4,
     5,     5,     8,     8,     2,     2,     2,     0,     6,     7,
     0,     2,     6,     8,     4,     6,     6,     6,     4,     3,
     1,     1,     1,     1,     3,     2,     1,    11,    12,    11,
    11,    17,    18,    17,    18,    19,    18,    17,    18,    17,
     1,     1,     1,     1,     1,    10,     3,     1,     4,     5,
    11,    12,    11,    11,    12,     3,     3,     2,     0,     2,
     2,     2,     7,     6,     4,     3,     1,     3,     3,     5,
     1,     3,     2,     0,     1,     3,     1,     2,     2,     1,
     1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
     1,     1,     3,     1,     1,     3,     4,     4,     4,     4,
     4,     4,     3,     3,     3,     0,     2,     2,     2,     2,
     2,     3,     4,     4,     4,     5,     5,     5,     5,     5,
     6,     5,     5,     6,     5,     6,     7,     6,     6,     7,
     6,     6,     5,     7,     6,     1,     4,     1,     2,     2,
     2,     3,     3,     3,     2,     4,     4,     4,     4,     1,
     1,     1,     1,     1,     1,     4,     4,     6,     6,     6,
     4,     1,     1,     1,     1,     1,     1,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     6,     6,     6,     6,     6,     2,     2,
     2,     1,     2,     3,     3,     3,     3,     1,     1,     1,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     1,     1,     1,     1,     1,     1,     2,     2,     1,     1,
     3,     2,     3,     4,     5,     4,     3,     4,     5,     4,
     2,     3,     4,     2,     3,     4,     4,     5,     6,     8,
     7,     4,     3,     5,     8,     0,     4,     3,     4,     4,
     5,     5,     5,     5,     6,     9,     0,     7,     9,     8,
     5,     4,     2,     2,     5,     0,     2,     3,     6,     0,
     2,     3,     2,     3,     2,     1,     3,     1,     1,     1,
     1,     3,     0,     2,     0,     3,     1,     2,     3,     3,
     3,     3,     5,     9,     1,     1,     0,     1,     0,     1,
     0,     7,     7,     2,     1,     0,     5,     2,     0,     4,
     5,     0,     3,     4,     5,     4,     5,     4,     0,     3,
     3,     4,     4,     4,     4,     4,     4,     4,     4,     6,
     4,     4,     4,     6,     3,     3,     4,     3,     0,     3,
     3,     3,     3,     2,     2
};

static const short yydefact[] = {     3,
     0,     0,    18,    19,     0,    15,    16,    14,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    24,
     0,     0,     0,    46,     0,     0,     0,     0,     0,    97,
     0,     0,     0,     0,    47,     0,     0,     0,     0,     0,
    51,    52,     0,     0,    45,    92,    95,    94,    96,    93,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   386,     0,     1,    65,    62,     0,    34,    81,     0,
    74,    33,     0,   127,   123,   124,    75,   260,   261,   262,
   264,   263,   265,   121,    37,    38,    39,    35,    36,    50,
    49,   122,     0,     0,    29,    13,    22,     0,   180,     0,
=======
     2,     2,     2,     1,     1,     1,     2,     2,     1,     1,
     2,     2,     2,     8,     1,     4,     2,     3,     3,     0,
     3,     3,     3,     3,     4,     1,     1,     1,     1,     1,
     1,     1,     4,     4,     4,     4,     4,     4,     8,     1,
     1,     1,     4,     1,     1,     1,     1,     4,     3,     7,
     9,     6,     5,     9,     8,     9,     1,     4,     4,     1,
     5,     6,     6,     6,     6,     1,     7,     3,     1,     1,
     3,     3,     1,     3,     5,     4,     1,     3,     3,     3,
     3,     3,     1,     1,     0,     4,     4,     4,     2,     2,
     2,     2,     1,     2,     2,     3,     3,     3,     3,     2,
     2,     7,     8,    11,    13,     1,     1,     1,     1,     1,
     1,     2,     6,     4,     4,     5,     5,     8,     8,     2,
     2,     2,     0,     6,     7,     0,     2,     6,     8,     4,
     6,     6,     6,     4,     3,     1,     1,     1,     1,     3,
     2,     1,    11,    12,    11,    11,    17,    18,    17,    18,
    19,    18,    17,    18,    17,     1,     1,     1,     1,     1,
     1,     1,     1,    10,     3,     1,     4,     5,    11,    12,
    11,    11,    12,     3,     3,     2,     0,     2,     2,     2,
     7,     6,     4,     3,     1,     3,     3,     5,     1,     3,
     2,     0,     1,     3,     1,     1,     2,     2,     1,     1,
     1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
     1,     1,     4,     1,     1,     1,     1,     1,     1,     1,
     1,     1,     1,     3,     1,     1,     3,     4,     4,     4,
     4,     4,     4,     4,     4,     3,     3,     3,     3,     0,
     2,     2,     2,     2,     2,     3,     4,     4,     4,     5,
     5,     5,     5,     5,     6,     5,     5,     6,     5,     6,
     7,     6,     6,     7,     6,     6,     5,     7,     6,     1,
     4,     1,     2,     2,     2,     3,     3,     3,     2,     4,
     4,     4,     4,     1,     1,     1,     1,     1,     1,     4,
     4,     6,     6,     6,     4,     1,     1,     1,     1,     1,
     1,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     6,     6,     6,
     6,     6,     2,     2,     2,     1,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     2,     3,     3,     3,
     3,     2,     1,     1,     1,     1,     1,     1,     1,     1,
     1,     1,     1,     1,     1,     2,     2,     1,     1,     3,
     2,     3,     4,     5,     4,     3,     4,     5,     4,     2,
     3,     4,     2,     3,     4,     4,     5,     6,     8,     7,
     4,     3,     5,     8,     0,     4,     3,     4,     4,     5,
     5,     5,     5,     6,     5,     9,     0,     7,     9,     8,
     5,     4,     3,     2,     2,     5,     0,     2,     3,     6,
     0,     2,     3,     2,     3,     2,     1,     3,     1,     1,
     1,     1,     3,     0,     2,     0,     3,     1,     2,     3,
     3,     3,     3,     7,     7,     6,     2,     1,     0,     5,
     9,     1,     1,     0,     1,     0,     1,     0,     5,     2,
     0,     4,     5,     0,     3,     4,     5,     4,     5,     4,
     0,     3,     3,     4,     4,     4,     4,     4,     4,     4,
     4,     6,     4,     4,     4,     6,     3,     3,     4,     3,
     0,     3,     3,     3,     3,     2,     2
};

static const short yydefact[] = {     3,
     0,     0,    19,    20,     0,    15,    16,    14,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    25,
     0,     0,     0,    51,     0,     0,     0,     0,     0,   121,
     0,     0,     0,     0,    52,     0,    56,    57,     0,     0,
     0,     0,     0,     0,    50,   116,   119,   395,   118,   120,
   117,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   427,     0,     1,    79,    83,    76,    67,     0,    38,
   103,     0,    37,    36,     0,   152,   148,   149,    70,   294,
   295,   296,   298,   297,   299,     0,   146,    40,    41,    42,
    39,    55,    54,   147,     0,     0,    30,    13,    23,     0,
   209,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
<<<<<<< HEAD
     0,     0,     0,     0,     0,     0,     0,     0,   389,   391,
   390,   185,   183,   184,    17,   167,   175,   189,   190,   192,
   187,   182,   177,   188,   181,   191,    21,    10,     9,    20,
    12,    11,     2,     0,     0,     0,     0,     0,    26,     0,
   180,   308,   309,     0,     0,   388,   310,     0,   302,     0,
     0,    77,     0,    78,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   386,   367,     0,   407,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   185,     0,
   183,   184,   189,   397,   182,     0,   191,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    80,    79,     0,     0,   386,   162,   161,   160,     0,     0,
   126,   123,     0,     0,     0,     0,     0,   376,     0,     0,
   386,    83,   108,     0,     0,     0,     0,     0,    82,   141,
   142,     0,     0,   376,     0,     0,     0,     0,     0,     0,
    27,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   183,   184,     0,   189,   182,   191,     0,
   279,   280,   278,   281,   282,   283,   284,   285,   286,   287,
   288,   289,   290,   291,   292,   293,     0,     0,   299,   300,
   301,     0,     0,     0,     0,   219,     0,   221,   218,   220,
   178,   179,   199,   200,   198,   196,   197,   193,   194,   195,
     0,   323,   326,   321,   322,   324,   325,     0,     0,     8,
     6,     7,     5,     4,     0,     0,     0,     0,   310,     0,
   303,   323,   326,     0,     0,     0,     0,     0,     0,     0,
    84,    86,    85,    87,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   356,     0,     0,     0,   393,     0,    92,
    94,    96,    93,     0,     0,   406,   405,     0,     0,   385,
     0,     0,     0,   402,     0,     0,     0,     0,     0,     0,
   148,   143,   144,   204,   205,   145,     0,     0,    92,    94,
    93,     0,     0,     0,     0,   386,   160,     0,   398,    67,
   125,   156,   166,     0,   387,     0,     0,     0,   448,     0,
     0,     0,   356,   356,     0,   273,   274,   276,     0,   272,
   275,   277,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   330,     0,   329,     0,     0,     0,   123,
   124,     0,   121,   122,     0,     0,     0,     0,     0,     0,
     0,     0,   386,   380,     0,   159,   105,     0,     0,     0,
     0,    98,    32,    31,    54,    30,     0,    68,   120,   449,
   449,     0,   449,   449,   449,   449,   449,   449,   445,   449,
   449,   446,   449,   449,    25,    29,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   186,   222,     0,    92,    94,
    93,     0,     0,     0,     0,   248,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   169,   176,
   168,     0,   318,   317,   306,   316,   312,   320,   315,   311,
   319,   307,   419,   305,   304,   314,   313,    43,     0,     0,
     0,     0,   119,     0,     0,   115,     0,     0,     0,     0,
     0,   367,   367,   367,     0,   373,     0,     0,     0,   367,
     0,     0,     0,     0,     0,     0,   409,     0,   384,   383,
     0,     0,     0,     0,     0,     0,     0,     0,   216,   216,
   216,   216,   216,   216,     0,     0,   420,     0,     0,     0,
     0,     0,     0,    92,    94,    92,    94,   401,   160,     0,
     0,     0,     0,     0,     0,     0,   400,   399,   395,     0,
     0,     0,     0,   266,   267,     0,     0,     0,   271,    64,
     0,   386,     0,    63,   327,   328,   165,     0,    92,    94,
    93,     0,    40,    48,     0,   426,     0,   424,     0,   428,
    53,    41,    42,   377,   376,     0,   374,    72,     0,     0,
     0,   159,   107,   106,   108,    76,     0,     0,     0,   436,
   433,    73,   443,   439,   437,   434,   447,   441,   435,   432,
   442,   438,    28,     0,   174,     0,   223,   171,     0,     0,
   225,     0,     0,     0,     0,   224,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   249,   251,   250,   327,   328,   258,   255,   256,
   257,   259,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   417,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   367,   344,   367,   367,   341,   367,
   367,   332,   367,     0,     0,   367,     0,   367,   367,   358,
   367,     0,   394,   393,     0,     0,     0,     0,     0,     0,
     0,   408,     0,   403,   382,     0,   147,   206,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   422,   421,     0,   203,     0,     0,     0,     0,     0,     0,
   159,   356,   401,   159,   449,   449,     0,   396,    58,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    92,    94,   429,   429,   427,   425,     0,   381,   386,
   380,   158,   159,   150,   108,   108,     0,   100,    69,   454,
   449,   449,   455,   449,   449,     0,     0,   170,     0,     0,
   201,   202,     0,     0,   246,   230,     0,   233,     0,   235,
     0,   232,     0,     0,     0,     0,     0,   228,     0,     0,
   229,     0,     0,   226,   227,   243,     0,   254,   252,   253,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   418,     0,   113,     0,   116,   118,   117,     0,
   367,   345,   367,   367,   337,   367,   342,   367,   367,   333,
     0,   353,   367,   367,     0,   331,     0,     0,   367,   359,
   367,   367,   360,   372,   367,   367,     0,   357,     0,   392,
     0,     0,     0,   411,     0,     0,   217,   216,   216,   216,
   210,   212,   211,   207,   209,   208,     0,   149,   423,     0,
   386,   389,     0,   386,   389,   386,   389,     0,     0,   356,
     0,     0,     0,   444,   440,     0,    57,     0,     0,   268,
   269,   270,   159,   164,     0,     0,     0,     0,     0,   431,
   430,    72,   376,   378,   157,   101,   102,   108,   451,   450,
   453,   452,     0,   173,   242,     0,   172,     0,   236,   239,
   241,   238,     0,   231,     0,   234,     0,   245,   294,   295,
   296,   297,   298,     0,     0,     0,     0,     0,   412,     0,
     0,   346,   367,   338,   340,   343,   367,   334,   336,   367,
   367,   352,     0,   347,     0,    71,     0,   362,   361,   363,
   367,   371,     0,   364,     0,    66,     0,   410,     0,     0,
     0,   213,   215,   214,     0,     0,     0,     0,     0,     0,
     0,     0,   386,     0,   386,   389,     0,   150,    88,   163,
    55,     0,    71,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   375,     0,     0,    99,    23,   244,
     0,   237,   240,     0,     0,   114,   356,   339,   335,   354,
   348,     0,     0,   367,    70,     0,   356,   365,     0,     0,
   367,     0,     0,    44,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    89,     0,    60,     0,     0,     0,     0,     0,     0,
     0,     0,    72,   108,   108,   247,     0,     0,   367,     0,
   349,    59,     0,   367,     0,   368,    56,   404,   356,     0,
     0,     0,   159,   159,     0,     0,     0,   159,   159,   159,
   159,     0,     0,     0,     0,     0,     0,   356,    61,     0,
     0,     0,     0,     0,     0,     0,   379,   103,   104,     0,
   367,   351,   367,   367,   370,   367,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     0,     0,     0,   159,   159,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   416,   355,   350,   366,   369,
     0,   389,   389,     0,   151,   130,   389,   389,     0,   154,
   128,   153,   131,     0,     0,     0,     0,     0,     0,    90,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   415,   413,     0,     0,   146,     0,     0,     0,   389,     0,
     0,   389,   152,   389,   389,     0,   155,   129,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   414,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   389,
    91,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   159,   159,     0,   159,
   159,     0,     0,     0,     0,     0,     0,   159,     0,     0,
   159,   159,   159,     0,   140,   138,     0,   134,   132,     0,
     0,     0,   159,   139,   133,   137,   135,     0,   136,     0,
     0,     0
};

static const short yydefgoto[] = {  1370,
     2,    21,   273,   208,   487,  1126,   142,    76,    77,    78,
    79,    80,   477,   482,    81,    82,    83,    84,   262,   474,
   401,   143,   680,   144,   177,   875,   868,   146,   147,   331,
   873,   403,   404,   405,   803,   148,   149,   876,   535,   150,
    87,    88,    89,    90,    91,    92,    93,   439,   151,   350,
   179,   354,   456,   584,   585,   377,   475,   677,   563,   201,
   152,   180,   153,   154,   155,   593,   432,   216,    95,    96,
    97,   388,   793,  1069,    98,   912,  1282,    99,   754,   100,
   618,   101,   667,   156,   690
};

static const short yypact[] = {    26,
  1214,  6856,-32768,-32768,   -77,-32768,-32768,-32768,  1214,  1214,
  1214,  1214,  7552,  1214,  1214,  1214,  1214,  1214,  1214,-32768,
   198,   100,  6948,-32768,   203,   884,  1132,   209,   231,-32768,
   248,   292,   313,   322,-32768,   -68,   -29,   343,  7652,   328,
-32768,-32768,   148,   350,-32768,-32768,-32768,-32768,-32768,-32768,
  3380,  6856,   160,   243,   368,   396,   465,   471,   475,   501,
   529,   305,   305,   547,   439,   422,   559,   592,   597,   601,
   642,   -20,   452,  1221,-32768,-32768,   643,-32768,-32768,   452,
-32768,-32768,   999,-32768,    12,    65,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,    74,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,   674,   684,   645,   607,   607,  6948,-32768,  5295,
   697,  7552,  7552,  7552,  7552,  7552,  7552,  7552,  7552,  7552,
  7552,  7552,  7552,  7552,  7552,  7552,  7552,   715,   742,  7552,
  7552,  7552,   764,   782,   789,   200,  9432,  9432,-32768,-32768,
-32768,-32768,    12,    65,  1966,  2127,-32768,-32768,-32768,-32768,
-32768,    74,-32768,-32768,-32768,-32768,   607,   607,   607,   607,
   607,   607,-32768,  1214,  1214,  1214,  1214,  1214,-32768,  9432,
   855,-32768,-32768,  3811,  6948,-32768,  2146,   143,-32768,  1019,
  6948,   452,   452,   452,   452,   466,   -29,   -29,   -29,   -29,
   -28,   796,   -29,-32768,   768,   -29,  3948,  1605,   821,  6948,
    78,  6856,  7150,  6948,  3527,   509,  7050,   934,   941,   319,
   242,   246,   825,-32768,   477,   760,   491,  1116,   832,   874,
  1175,  1175,  1175,  1175,  1175,  1175,  1175,  1153,  1154,   766,
-32768,-32768,   -29,  6464,   890,-32768,-32768,-32768,  6717,   466,
-32768,   138,  7552,   539,  6856,  6856,  6856,  7250,  7552,   452,
   503,-32768,   563,  6856,  6856,  6856,  6856,   427,-32768,-32768,
-32768,  7150,   -28,  7250,   -28,   -28,   -28,  1069,  1069,  7352,
-32768,  1214,   863,   356,   837,    37,   151,   861,   190,  5412,
   629,   729,   880,   376,   175,  1261,   985,   308,   992,  4710,
  1966,  1966,  1966,  1966,  1966,  1966,  1966,  1966,  1966,  1966,
  1966,  1966,  1966,  1966,  1966,  1966,  7552,  7552,  1966,  1966,
  1966,  7552,  7552,  7552,   484,  1035,    65,-32768,  1039,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
  9432,-32768,-32768,-32768,-32768,-32768,-32768,  9432,  7552,   947,
  1155,  1155,   500,   944,  1013,  7552,  7552,  4085,  1531,   889,
-32768,    10,    21,  7552,    78,  6948,  6948,  7552,  7552,   973,
-32768,-32768,-32768,-32768,   412,  1042,  1038,  1061,  1080,  1094,
    13,  1126,  1141,   915,  1121,   675,  1145,  1165,  1163,    37,
   151,   861,   190,  5061,   565,-32768,-32768,  1170,  1157,-32768,
   987,  1151,  6856,-32768,  1177,  4476,  7452,  7452,   566,   384,
-32768,  1966,  1120,-32768,-32768,-32768,   390,  1179,   261,   276,
   326,   489,   932,  1050,   439,  1169,  1181,  4222,-32768,-32768,
-32768,-32768,  1182,  1136,-32768,  1144,  7050,  7050,-32768,  6856,
  1246,  1209,   915,   915,   484,   138,    65,-32768,  1219,    74,
-32768,-32768,  1241,  1272,  1280,  1283,  1276,  1284,   452,   452,
   576,  1286,   740,-32768,  1581,-32768,  1211,  3674,  1017,   376,
   175,   825,   308,   992,  1631,   158,   272,  1289,  1084,  1285,
  1316,    32,   189,  1301,  1292,   712,-32768,  1232,  7552,    35,
  7150,-32768,   451,  1237,  1237,-32768,  1305,  1249,-32768,   254,
   254,  1312,   254,   254,   254,   254,   254,   254,-32768,   211,
   254,-32768,   211,   254,-32768,   645,  1355,  7552,  1238,  9432,
   337,  9432,   366,   370,  9432,   386,   392,   440,   524,   859,
   536,   587,  1328,  1331,   598,-32768,  1136,  1247,  1259,  1266,
  1267,   867,   614,  1652,  1348,-32768,  1349,  1244,  1315,  1425,
  1461,  1478,   526,   316,   175,   985,   308,   992,  1966,-32768,
  1966,  1353,  1966,  1966,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,  1966,  1398,  1295,-32768,  1966,  1966,-32768,   820,  1358,
   316,  1275,-32768,  1279,   -29,-32768,   410,  1384,   -29,   -29,
  1308,    23,    24,    36,  1387,-32768,  1313,   -29,   584,    88,
  1389,    28,  1395,   596,  5178,     0,  6948,    78,-32768,-32768,
  1403,  1410,  4593,  1397,  1261,   180,  1405,  4827,  1506,    53,
  1417,  1506,    53,  1417,  6580,  7150,-32768,  1409,    43,  3141,
   618,   636,   662,   678,   687,  1328,  1331,  1144,  1419,  7552,
  1421,  4359,  1108,  7552,   -28,  1422,  1363,-32768,   914,    78,
  1469,  1429,  1430,-32768,-32768,  1175,  1175,  1175,-32768,-32768,
   -29,  1432,  1181,-32768,-32768,-32768,-32768,  1437,  1361,  1364,
  1372,   951,-32768,-32768,   -28,-32768,  1453,-32768,  1466,-32768,
-32768,-32768,-32768,-32768,  7250,  2775,-32768,-32768,  3243,  1464,
   169,   712,-32768,-32768,  1480,-32768,   427,  1069,  1069,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,  1470,   394,   692,-32768,  2212,  7741,  1473,
-32768,  7741,  1475,  7741,  1477,-32768,  7741,  1481,   706,   719,
   720,   678,   725,  9432,   737,  9432,   747,  9432,  9432,  7741,
  1483,  1407,-32768,-32768,-32768,  1408,  1412,-32768,-32768,-32768,
-32768,-32768,  7552,  7552,  7552,  7552,  7552,  1416,  1420,  1423,
   868,  1533,    78,-32768,  1361,  1364,  1372,   961,  1495,  1518,
  1509,  1510,  1511,   -29,    89,-32768,    46,   162,-32768,   262,
   187,-32768,  1053,  1449,   -29,   447,   -29,   609,    34,-32768,
  1063,  6856,-32768,  1165,  1452,   364,   261,   276,   326,  1027,
   399,  1149,  1525,-32768,-32768,  1521,-32768,-32768,  1522,  4944,
   180,  2936,  1519,  1520,  1526,  1523,  1528,  1532,  5529,  1530,
  1546,-32768,    43,-32768,  7830,  7919,  8008,   752,   753,  1547,
   712,   915,-32768,   712,   254,   254,  6856,-32768,-32768,    78,
  1543,  1484,  1549,  1553,  1554,  1419,  7552,  7552,  1558,  1559,
  1560,  1486,  1487,  1575,  1575,-32768,-32768,  1566,-32768,   572,
  1301,-32768,   712,-32768,    91,  1480,  1562,-32768,-32768,-32768,
   211,   254,-32768,   211,   254,  1214,  7552,-32768,  7741,  1568,
-32768,-32768,  9432,  1570,-32768,-32768,  7741,-32768,  7741,-32768,
  7741,-32768,  7741,  8097,  8186,  8275,   756,-32768,  7741,  1574,
-32768,  7741,  1577,-32768,-32768,-32768,  7741,-32768,-32768,-32768,
  1819,  1834,  1852,  1906,  1928,  1578,  1582,  1586,  1486,  1498,
  9432,  1585,-32768,  1487,-32768,   -29,-32768,-32768,-32768,  1589,
    34,-32768,   768,   768,-32768,    34,-32768,   768,   768,-32768,
   -29,-32768,   630,   159,  7552,-32768,  1591,  1594,   768,-32768,
   768,   768,-32768,-32768,   722,   354,  7552,-32768,  1445,-32768,
  1612,   413,   687,   466,  6948,  1621,-32768,  1506,    53,  1417,
-32768,-32768,-32768,-32768,-32768,-32768,  5646,-32768,-32768,  5763,
   730,  1619,  5880,   888,  1620,   984,  1622,  8364,  8453,   915,
  1616,  1623,  1624,-32768,-32768,  1097,-32768,  6856,  1628,-32768,
-32768,-32768,   712,  1966,    42,    96,   928,  1625,  1632,-32768,
-32768,  1301,  7250,-32768,-32768,-32768,-32768,   570,-32768,-32768,
-32768,-32768,  1164,  1966,-32768,  7741,  1966,  7552,-32768,-32768,
-32768,-32768,  8542,-32768,  7741,-32768,  7741,-32768,-32768,-32768,
-32768,-32768,-32768,  1540,  1545,  1551,  1656,  1633,-32768,  1661,
  1664,-32768,   768,-32768,-32768,-32768,   768,-32768,-32768,   768,
   768,-32768,  7552,-32768,   761,  6856,  1665,-32768,-32768,-32768,
   768,-32768,  7552,-32768,  1064,-32768,  6856,-32768,  1668,  1122,
  1669,-32768,-32768,-32768,  5997,  1670,  1671,  6114,  1672,  1673,
  1676,  1677,  1204,  6231,  1320,  1687,  1688,  1689,-32768,-32768,
-32768,  1457,  6856,  1660,  1674,  1690,  1619,  1693,  1694,  1620,
  1695,  1622,  1608,    98,-32768,  1698,   169,-32768,-32768,-32768,
  1943,-32768,-32768,  1609,  1704,-32768,   915,-32768,-32768,-32768,
-32768,  1662,  7552,   768,  1221,  1703,   915,-32768,  1772,  7552,
   768,  1352,    78,-32768,  1708,   759,   772,  1060,  7552,  7552,
   775,   780,  1123,  7552,  7552,  7552,  7552,  1707,  6348,  1710,
  1711,-32768,  1713,-32768,  1716,  1689,   336,   602,  1721,  1714,
  1722,  1687,  1301,    91,  1480,-32768,  6856,  1723,   768,  1982,
-32768,-32768,  1724,   768,  2109,-32768,-32768,-32768,   915,   784,
   792,   793,   712,   712,   799,   800,   804,   712,   712,   712,
   712,  7552,   816,   828,  1131,  7552,  7552,   915,-32768,  1639,
  1655,  1738,  1657,  1666,  1742,   698,-32768,-32768,-32768,  1418,
   768,-32768,   768,   768,-32768,   768,  1745,  8631,  8720,   842,
  1733,  1737,  8809,  8898,   844,  1743,  1744,  1746,  1748,   712,
   853,   856,   916,   712,   712,  1747,  1750,  1755,  1681,  1762,
  1763,  1691,  1697,  1699,  1769,  1150,-32768,-32768,-32768,-32768,
  1128,  1775,  1778,  8987,-32768,-32768,  1779,  1781,  9076,-32768,
-32768,-32768,-32768,  1782,  9165,  9254,   935,  1783,  1784,  1720,
  1701,  1706,  1786,  1719,  1725,  1790,  1791,  1794,  1726,  1533,
-32768,-32768,    33,   -20,-32768,  1785,  1799,  1804,  1807,  1810,
  1816,  1822,-32768,  1826,  1827,  9343,-32768,-32768,    43,  1775,
  1778,  1734,  1779,  1781,  1736,  1739,  1751,  1833,-32768,   538,
   890,  1837,  1839,  1848,  1849,  1850,  1863,  1864,  1867,  1869,
  1120,  1807,  1822,  1826,  1827,  1774,  7552,  7552,  1868,  7552,
  7552,  1871,  1872,  1873,  1882,  1869,   712,   712,  7552,   712,
   712,  7552,  7552,  7552,  1879,  1866,  1881,   712,  1889,  1890,
   712,   712,   712,  7552,-32768,-32768,  1896,-32768,-32768,  1897,
  1898,  1899,   712,-32768,-32768,-32768,-32768,  1900,-32768,  1938,
  1960,-32768
};

static const short yypgoto[] = {-32768,
-32768,    30,  1455,   119,  1288,   878,    18,-32768,-32768,  -246,
   -44,  -229,   -42,  -668,-32768,  -195,    29,  1357,-32768,  -171,
-32768,   434,  -422,  1685,   -13,  -444,-32768,  1709,  -127,  -143,
-32768,  -390,-32768,-32768,  -477,   142,-32768,   279,-32768,-32768,
  -168,-32768,-32768,-32768,-32768,-32768,-32768,  -100,-32768,   -19,
     1,  1832,-32768,  -218,  -419,   923,  -255,  -827,  -200,-32768,
  1228,   635,  1411,   862,-32768,  1199,  1347,  -180,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,  -991,-32768,-32768,-32768,-32768,
  1176,-32768,  -454,  2125,   519
};


#define	YYLAST		9581


static const short yytable[] = {   145,
   394,   387,   338,   178,   454,   606,   610,   613,   492,   321,
   322,   488,   669,   642,   643,   457,   858,   231,   232,    75,
   193,   371,   556,  1004,   414,   198,   419,   263,   783,   248,
   252,   400,   674,   559,   249,   683,     1,   259,   104,   105,
   106,   107,   345,   157,   158,   159,   160,   161,   162,   193,
   730,   214,   438,   438,   438,   438,   438,   438,   438,   924,
   454,   264,   577,   376,   376,   707,   103,   711,   209,    75,
   716,   536,   193,   193,   376,   192,   376,   193,   392,   210,
   266,   315,  1310,   193,   193,   193,   376,   510,   274,   268,
   489,  1095,   813,   802,   241,   397,   286,   398,   291,   292,
   293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
   303,   304,   305,   306,   194,   235,   309,   310,   311,   265,
    74,   443,   444,   445,   446,   447,   448,   791,   376,   376,
   393,   480,   804,   805,   806,   807,   808,   193,   193,   361,
   362,   363,   364,   251,   454,  1098,   454,  1160,   136,   170,
   765,   768,   386,   263,   176,   351,   235,   590,   141,    65,
   349,   360,   250,   771,   511,   176,   194,   194,   619,   141,
   218,   194,   267,   263,  1105,   235,  1311,   194,   251,   194,
   391,   269,   355,   286,   407,  1096,  1006,  1007,  1097,   402,
   266,   349,   213,   340,   341,   342,   343,   344,   665,   376,
   202,   512,   376,   454,   454,   214,   619,   214,   666,   163,
   550,   193,   606,  1053,   366,   779,   921,   801,   813,    75,
   455,   397,   209,   398,   604,   423,   688,   376,   814,   465,
   798,   194,   194,   210,   402,   476,   193,   633,   675,  1099,
   515,  1161,  1100,   249,  1162,   265,   637,   638,   402,   315,
   402,   287,   181,   356,  1281,   357,    75,   263,   186,   857,
   264,   266,    75,    75,    75,   265,   286,   210,   241,   688,
   505,    75,    75,    75,    75,   929,   534,   318,   513,   888,
   187,   891,   267,   894,   895,   499,   502,   268,  1309,   926,
   855,   264,   422,   538,   539,   619,   423,   188,   540,   541,
   542,   506,   376,   219,   164,   194,   165,   166,   167,   685,
   168,   510,   665,   176,   931,   287,   136,   516,   689,   228,
   395,   229,   668,   268,    30,   551,   512,    65,   199,   169,
   194,   263,   553,   554,   349,  1207,   564,   565,   287,  1108,
   562,   189,   252,   235,   566,   567,   287,    46,    47,   265,
    48,    49,    50,   267,   230,  -123,  -123,   459,   425,  -124,
  -124,   689,   190,   469,   470,   471,   422,   231,   232,   421,
   286,   191,   483,   484,   485,   486,   515,   200,  1200,   269,
   462,  1201,   605,   609,   612,   454,   220,   709,   621,  1000,
  1001,   263,   196,   570,   376,   508,   457,   794,   981,   203,
   867,   983,   982,   622,   349,   338,   361,   363,  1063,   801,
    75,   959,   570,   193,   869,   269,   712,   221,   214,   848,
   714,   287,   801,   265,   616,   264,   422,   214,   214,   620,
  1005,   604,   260,   261,   617,    85,   717,   684,  1202,   829,
   488,   228,   510,   229,   811,   222,    30,    75,   193,   897,
    73,   633,   748,   623,   323,   749,   546,   750,   214,   577,
   939,   569,   193,  1016,   710,   682,   356,   402,   357,    46,
    47,   239,    48,    49,    50,   209,   230,   438,   438,   438,
  1072,  1073,  1074,   265,   211,    85,   210,   376,   234,   287,
   512,   952,   268,   713,   705,  1208,  1209,   715,   236,   242,
   356,   193,   357,   228,   851,   229,   462,   251,    30,   324,
   325,   601,   751,   718,   223,   365,   478,   326,   327,   719,
   224,   328,   329,   330,   225,   287,   250,   425,   136,    62,
    63,   624,    47,   543,   625,    49,    50,   287,   230,    65,
   250,   429,   251,   284,   240,   833,   834,   835,   639,    65,
   226,   362,   913,   235,   240,   235,   251,   479,   234,   287,
  1087,   255,   256,   257,   338,   235,    65,   720,   748,   316,
  1094,   749,    73,   750,   515,   543,   462,   792,   227,   250,
   748,   286,   235,   749,   269,   750,   724,  1310,   435,   605,
  -121,  -121,   454,    65,   286,   251,   233,   570,   240,   287,
   136,   455,   402,   480,  -122,  -122,   705,   284,   243,   235,
   480,    65,   168,   318,   193,   615,   821,   231,   349,   242,
   824,  1003,   942,   570,   372,   193,   249,   235,   751,   987,
   211,   169,   214,   193,    73,    85,   415,   726,   211,   236,
   751,   244,   136,  1051,  1203,   193,   245,  1204,   730,   376,
   246,   721,   416,    65,   436,   436,   436,   436,   436,   436,
   436,   402,   402,   725,   738,   853,    65,   284,   815,   235,
   376,   521,   460,   242,   522,   586,   481,   466,    85,    85,
    85,  1311,   235,  1107,   546,   272,   816,    85,    85,    85,
    85,   247,   596,    65,    30,   258,   490,  1168,   493,   495,
   497,   500,   503,   651,  1205,   860,   863,  1173,   251,   235,
   546,   777,   817,   284,   727,   270,  1164,    46,    47,   652,
    48,    49,    50,   786,   587,   731,  1071,   194,   724,   901,
   902,   903,   904,   905,   271,  1061,   287,   726,-32768,   251,
  1243,   739,   869,  1244,   287,   710,   290,  1106,   544,   287,
   454,   164,   679,   165,   166,   167,   884,   168,  1068,  1217,
  1221,  1222,   376,   713,   307,  1226,  1227,  1228,  1229,   885,
   886,   523,   323,   287,   524,   726,   169,   453,  1236,   248,
  1076,   284,   655,  1038,   249,   656,   286,   889,   958,   718,
   164,   308,   165,   166,   167,   286,   168,   892,   571,    75,
  1245,  1123,   978,   979,   578,   818,  1023,  1264,   376,   510,
   426,  1268,  1269,   312,   819,   169,  1124,   211,   588,   870,
   589,   323,   512,   993,   994,   510,    85,   324,   325,   284,
   512,   313,   236,   710,  1218,   326,   327,   406,   314,   328,
   329,   330,  1219,   726,    75,   374,   713,   718,   236,  1223,
  1224,   284,   887,  1014,   726,   441,   441,   441,   441,   441,
   441,   441,   755,    85,   890,   756,   510,   757,   544,   569,
   427,   390,   428,   338,   893,   424,   324,   325,   512,   890,
   893,   433,   406,   893,   326,   327,  1180,   454,   328,   329,
   330,   211,  1254,   451,  1259,  1013,   406,   454,   406,  1181,
   949,   722,  1185,  1265,   723,   316,  1266,  1186,  1321,   736,
   909,   710,   737,   910,  1346,  1347,   507,  1349,  1350,   713,
  1220,  1055,   758,   434,   537,  1357,   710,   713,  1360,  1361,
  1362,  1225,  1178,  1065,    30,  1070,   136,   248,  1079,   555,
  1368,   287,   249,  1231,   249,   986,   228,    65,   229,   454,
   287,    30,   240,   286,   430,  1232,   286,    46,    47,   286,
    48,    49,    50,   235,   581,   228,   726,   229,   454,   893,
    30,   893,   346,   347,   626,    47,   544,   627,    49,    50,
   710,   230,   509,   713,   420,  1296,   557,   560,   514,   402,
   878,   -65,   880,   842,    47,   882,   843,    49,    50,   356,
   230,   357,   571,   909,  1111,    75,   914,   525,   896,   691,
   578,   693,   694,   695,   696,   697,   698,   453,   699,   700,
   254,   701,   702,   568,   255,   256,   257,   182,   211,   183,
   607,   611,   614,   248,  1081,   527,   284,   599,   249,  1122,
   254,   284,   429,  1267,   255,   256,   257,   -65,   284,  1129,
   263,   -65,   -65,   -65,   268,   165,   166,   167,   582,   168,
   583,   286,   893,   552,   286,   284,   934,   663,   825,   722,
   286,  1101,   953,    75,  1102,   169,   946,    73,   169,   436,
   436,   436,   572,   356,    75,   357,    28,    29,   573,    31,
    32,    33,    34,   376,   878,   882,    73,   356,   844,   357,
   628,   574,   722,   376,  1130,  1182,  1092,   935,   287,  1170,
    75,   287,   260,   261,   287,   406,  1175,   947,   371,  1131,
   575,   861,   864,   254,   323,  1183,  1184,   255,   256,   257,
  1188,  1189,  1190,  1191,   671,   286,   358,   359,    55,    56,
    57,    58,    59,    60,   576,    28,    29,  1015,    31,    32,
    33,    34,  1091,   911,  1280,  1019,   430,  1020,   823,  1021,
   427,  1022,   428,   878,   882,   722,   579,  1024,  1187,   431,
  1026,   425,  1134,   722,  1125,  1028,  1233,  1283,  1230,   324,
   325,   580,  1234,  1235,    75,  1132,   591,   326,   327,   598,
   254,   328,   329,   330,   255,   256,   257,    55,    56,    57,
    58,    59,    60,   254,   600,   592,   759,   255,   256,   257,
   597,  1125,    72,   558,   561,    85,   287,  1109,   427,   287,
   428,     3,   254,   630,   435,   287,   255,   256,   257,    94,
   602,   631,   356,   284,   357,   619,   634,   607,     4,     5,
     6,     7,   284,   635,    55,    56,    57,    58,    59,    60,
   406,   636,     8,   248,  1148,   640,  1024,  1026,   249,   356,
    85,   357,   641,     9,   195,   167,    10,   168,  1285,   644,
   164,  1284,   165,   166,   167,   184,   168,   185,   215,    94,
   441,   441,   441,   254,   743,  1210,   169,   255,   256,   257,
   287,   645,   238,    94,  1110,   169,   449,   450,   183,   185,
   253,  1026,    65,  1112,   323,  1113,   449,   253,   594,   406,
   406,   526,   646,  1337,  1338,   856,  1340,  1341,   235,   176,
   647,   323,   182,   648,   594,  1348,   649,   254,  1351,  1352,
  1353,   255,   256,   257,   650,   672,   654,   288,   658,   670,
  1363,   676,   678,   984,   985,   681,    11,    12,    13,   257,
    14,    15,    16,    17,    18,   744,    19,    20,   686,   324,
   325,   687,   692,   319,   704,   706,   673,   326,   327,   248,
  1150,   328,   329,   330,   249,   323,   324,   325,   728,  1009,
  1010,   729,  1011,  1012,   326,   327,   733,   242,   328,   329,
   330,   254,   732,   734,   735,   255,   256,   257,   741,   742,
   284,   288,  1177,   284,   753,   752,   284,   357,   421,   253,
   253,   253,   253,    94,   367,   368,   369,   370,   373,   176,
   375,    85,   254,   378,   215,   139,   255,   256,   257,    94,
   324,   325,   215,   417,   422,   764,   960,   774,   326,   327,
   775,   782,   328,   329,   330,   785,   796,   797,   440,   440,
   440,   440,   440,   440,   440,   799,   795,   802,   254,   812,
   452,   288,   255,   256,   257,   745,   463,    94,  1246,   820,
   822,   467,    94,    94,    94,   428,   827,   253,   830,   831,
   832,    94,    94,    94,    94,   323,   837,   838,   839,    85,
   491,   840,   494,   496,   498,   501,   504,   878,  1066,   841,
    85,   746,   878,   846,   766,   769,   772,   288,   284,   254,
  1154,   284,   780,   255,   256,   257,   847,   284,   747,   854,
   480,   323,   866,   877,   254,   879,    85,   881,   255,   256,
   257,   883,  1026,   897,   898,   899,   911,  1026,   323,   900,
   324,   325,   547,   906,   878,   915,   802,   907,   326,   327,
   908,   254,   328,   329,   330,   255,   256,   257,   916,   917,
   918,   919,   937,   254,   951,   954,   323,   255,   256,   257,
   955,   956,   961,   962,  1026,   288,   324,   325,   964,   963,
   968,   526,   284,   965,   326,   327,   616,   966,   328,   329,
   330,   323,   463,   324,   325,   988,   980,   989,   375,   990,
    85,   326,   327,   991,   992,   328,   329,   330,   995,   996,
   997,   215,   253,   998,   999,   665,  1002,  1008,  1016,  1018,
    94,   324,   325,   288,  1025,  1037,   238,  1027,  1034,   326,
   327,   657,  1035,   328,   329,   330,  1036,   406,  1039,  1041,
    30,   323,   629,  1056,  1057,   288,   324,   325,   352,   353,
   334,   335,   336,   337,   326,   327,   389,    94,   328,   329,
   330,  1067,   547,    46,    47,   323,    48,    49,    50,  1077,
  1080,  1088,  1082,  1089,  1115,  1103,   253,   253,   653,  1090,
  1093,   664,  1104,  1096,  1286,   215,    86,   922,  1099,   925,
   927,   323,   930,   932,  1101,   936,   324,   325,   940,   319,
   943,   944,   740,   948,   326,   327,  1114,   253,   328,   329,
   330,  1116,   323,  1117,  1127,  1156,   578,  1169,  1133,  1135,
   324,   325,   323,  1157,  1139,  1140,  1144,  1145,   326,   327,
  1146,  1147,   328,   329,   330,   212,    86,  1151,  1152,  1153,
  1076,  1165,  1158,   578,  1079,  1081,   324,   325,  1163,   237,
    86,  1159,  1161,  1167,   326,   327,  1172,  1179,   328,   329,
   330,  1192,  1198,  1206,  1196,  1197,  1237,   324,   325,  1199,
   547,  1148,  1150,  1211,  1214,   326,   327,   324,   325,   328,
   329,   330,  1238,  1239,  1240,   326,   327,  1242,  1255,   328,
   329,   330,  1256,  1241,   285,  1251,   463,  1270,  1260,  1261,
  1271,  1262,   761,  1263,   375,  1272,   762,   763,  1273,   767,
   770,   773,  1274,  1275,  1279,   776,   778,   781,  1276,   784,
   317,   253,   215,   253,  1277,  1287,  1278,  1174,  1288,  1290,
   288,  1291,   323,  1299,   264,   288,  1302,  1293,  1297,  1298,
  1305,  1306,   288,  1042,  1307,  1044,  1045,  1300,  1046,  1312,
  1048,  1049,  1301,  1308,  1313,  1052,  1054,  1314,   285,   288,
  1315,  1058,   826,  1059,  1060,  1303,  1316,  1062,  1064,  1029,
    86,  1304,  1317,   440,   440,   440,  1318,  1319,   836,   323,
  1322,   212,  1323,  1326,  1030,  1324,    86,   324,   325,   212,
   237,  1327,   845,  1328,   323,   326,   327,  1325,  1329,   328,
   329,   330,  1031,  1330,  1331,   437,   437,   437,   437,   437,
   437,   437,   323,  1332,  1333,   862,   865,  1334,   285,  1335,
  1336,  1355,  1339,   461,    86,  1342,  1343,  1344,   317,    86,
    86,    86,  1345,  1354,   324,   325,  1356,  1371,    86,    86,
    86,    86,   326,   327,  1358,  1359,   328,   329,   330,   324,
   325,  1364,  1365,  1366,  1367,  1369,  1032,   326,   327,  1372,
   703,   328,   329,   330,   285,  1118,   323,   324,   325,  1119,
  1155,   810,  1120,  1121,   859,   326,   327,   339,  1033,   328,
   329,   330,   950,  1128,   760,   828,   969,     0,   323,     0,
     0,   920,   923,  1166,     0,   928,     0,     0,   933,   545,
     0,     0,   938,   323,   941,     0,   945,     0,     0,    94,
     0,     0,     0,   253,     0,     0,     0,     0,   253,     0,
     0,   324,   325,     0,     0,     0,   323,   288,     0,   326,
   327,     0,   285,   328,   329,   330,   288,  1213,     0,   549,
     0,     0,   323,   324,   325,     0,  1171,     0,     0,   461,
     0,   326,   327,  1176,    94,   328,   329,   330,   324,   325,
     0,     0,     0,     0,     0,     0,   326,   327,   212,     0,
   328,   329,   330,     0,     0,     0,     0,    86,     0,     0,
   285,   324,   325,   237,     0,     0,     0,     0,     0,   326,
   327,  1212,     0,   328,   329,   330,  1215,   324,   325,   237,
     0,     0,   285,     0,     0,   326,   327,     0,     0,   328,
   329,   330,     0,     0,    86,     0,     0,     0,     0,   545,
     0,     0,     0,     0,     0,     0,   102,     0,     0,     0,
     0,     0,     0,  1247,     0,  1248,  1249,     0,  1250,     0,
     0,     0,   212,  1040,     0,     0,     0,     0,  1043,     0,
     0,     0,     0,  1047,     0,     0,   317,     0,  1050,     0,
     0,     0,     0,     0,  1216,     0,     0,     0,     0,   323,
     0,     0,     0,     0,     0,   217,   102,     0,     0,   253,
     0,    94,     0,     0,     0,     0,     0,   323,     0,     0,
   102,     0,     0,     0,   288,     0,     0,   288,     0,     0,
   288,     0,     0,     0,     0,     0,   323,     0,     0,     0,
     0,     0,     0,     0,     0,    94,     0,     0,   708,     0,
   708,     0,     0,   708,   324,   325,     0,   545,     0,     0,
     0,     0,   326,   327,   289,     0,   328,   329,   330,     0,
     0,     0,   324,   325,   332,   333,   334,   335,   336,   337,
   326,   327,     0,   461,   328,   329,   330,     0,     0,     0,
   320,   324,   325,   352,   353,   334,   335,   336,   337,   326,
   327,     0,   323,   328,   329,   330,     0,     0,     0,   212,
     0,     0,     0,    94,     0,     0,     0,   285,     0,     0,
     0,     0,   285,     0,    94,     0,     0,     0,   289,   285,
     0,     0,   288,     0,     0,   288,     0,     0,     0,     0,
   102,   288,     0,     0,     0,     0,   285,     0,     0,     0,
    94,   217,     0,     0,     0,     0,   102,   324,   325,   217,
   437,   437,   437,     0,     0,   326,   327,   871,   872,   328,
   329,   330,     0,     0,     0,   442,   442,   442,   442,   442,
   442,   442,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   464,   102,     0,     0,     0,   468,   102,
   102,   102,     0,     0,     0,     0,   288,     0,   102,   102,
   102,   102,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    94,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   289,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   708,     0,     0,
   708,     0,   708,     0,     0,   708,     0,     0,     0,     0,
     0,     0,   708,     0,   708,     0,   708,   708,   708,   548,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    86,     0,     0,     0,
     0,     0,   289,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   285,     0,     0,     0,     0,   464,
     0,     0,     0,   285,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   217,     0,
     0,    86,     0,     0,     0,     0,     0,   102,     0,     0,
   289,     0,     0,   708,   708,   708,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   289,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   102,     0,     0,     0,     0,   548,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   708,     0,     0,
     0,  1017,   217,     0,     0,   708,     0,   708,     0,   708,
     0,   708,   708,   708,   708,     0,   320,   708,     0,     0,
   708,     0,     0,     0,     0,   708,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    86,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   285,     0,     0,   285,     0,     0,   285,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   548,     0,     0,
     0,     0,    86,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   708,   708,     0,     0,
     0,     0,     0,   464,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   217,
     0,     0,     0,     0,   708,     0,     0,   289,     0,     0,
     0,   708,   289,   708,     0,   708,     0,     0,     0,     0,
    86,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    86,     0,     0,     0,     0,   289,     0,     0,   285,
     0,     0,   285,     0,     0,     0,     0,     0,   285,     0,
   442,   442,   442,     0,     0,   849,     0,    86,     0,     0,
   108,     0,     0,     0,     0,     0,     0,   109,     0,     0,
     0,     0,    28,    29,     0,    31,    32,    33,    34,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   396,     0,     0,   397,     0,   398,
     0,     0,     0,   285,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    55,    56,    57,    58,    59,    60,
   111,    86,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   136,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   137,   399,     0,     0,   138,   102,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   850,   176,
     0,   139,   140,   141,   289,     0,   708,   708,     0,     0,
     0,   708,   708,   289,     0,     0,   957,     0,     0,     0,
     0,   108,     0,     0,     0,     0,     0,     0,   109,     0,
     0,   102,     0,    28,    29,     0,    31,    32,    33,    34,
     0,     0,   708,     0,     0,     0,     0,   708,     0,     0,
     0,     0,     0,   708,   708,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   608,     0,     0,   397,     0,
   398,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   708,    55,    56,    57,    58,    59,
    60,   111,     0,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   136,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   137,    65,     0,     0,   138,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   102,    72,
   176,     0,   139,   140,   141,     0,     0,     0,     0,     0,
     0,   289,     0,     0,   289,     0,     0,   289,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   102,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   392,     0,     0,     0,     0,   108,     0,     0,     0,
     0,     0,     0,   109,     0,     0,     0,     0,    28,    29,
     0,    31,    32,    33,    34,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   102,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   110,   102,     0,   393,     0,     0,     0,     0,     0,   289,
     0,     0,   289,     0,     0,     0,     0,     0,   289,     0,
    55,    56,    57,    58,    59,    60,   111,   102,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,     0,   852,     0,     0,     0,     0,   108,     0,
     0,     0,     0,     0,     0,   109,     0,   136,     0,     0,
    28,    29,     0,    31,    32,    33,    34,   137,    65,     0,
     0,   138,     0,   289,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    72,     0,     0,   139,   140,   141,
     0,   102,   110,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    55,    56,    57,    58,    59,    60,   111,     0,
   112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
   122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   136,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   137,
    65,     0,     0,   138,     0,     0,     0,     0,     0,     0,
     0,     0,    22,     0,     0,   204,    72,    24,    25,   139,
   140,   141,   171,     0,    26,     0,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    36,   172,   173,    37,    38,
    39,    40,     0,    41,    42,    43,     0,    44,    45,     0,
     0,     0,    46,    47,     0,    48,    49,    50,     0,   205,
     0,     0,    52,     0,     0,     0,    53,     0,     0,     0,
     0,     0,     0,     0,    54,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,    61,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,    62,    63,     0,    64,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   136,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   137,   206,     0,     0,
   138,     0,    66,   207,    67,    68,    69,    70,    71,     0,
     0,     0,     0,    72,   176,    73,   139,   140,   141,    22,
     0,     0,   204,     0,    24,    25,     0,     0,     0,   171,
     0,   408,     0,    27,    28,    29,    30,    31,    32,    33,
    34,    35,    36,   172,   173,    37,    38,    39,    40,     0,
    41,    42,    43,     0,    44,    45,     0,     0,     0,   409,
    47,     0,   410,   382,   411,     0,   205,     0,     0,    52,
     0,     0,     0,    53,     0,     0,     0,     0,     0,     0,
     0,    54,     0,     0,     0,     0,    55,    56,    57,    58,
    59,    60,   111,    61,   112,   113,   114,   115,   116,   117,
   118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,     0,   412,
   413,     0,    64,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   136,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   137,   206,     0,     0,   138,     0,    66,
   207,    67,    68,    69,    70,    71,     0,     0,     0,     0,
    72,   176,   385,   139,   140,   141,    22,     0,     0,   204,
     0,    24,    25,     0,     0,     0,   171,     0,    26,     0,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
   172,   173,    37,    38,    39,    40,     0,    41,    42,    43,
     0,    44,    45,     0,     0,     0,   659,    47,     0,   660,
    49,   661,     0,   205,     0,     0,    52,     0,     0,     0,
    53,     0,     0,     0,     0,     0,     0,     0,    54,     0,
     0,     0,     0,    55,    56,    57,    58,    59,    60,   111,
    61,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,     0,   662,    63,     0,    64,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   136,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   137,   206,     0,     0,   138,     0,    66,   207,    67,    68,
    69,    70,    71,     0,     0,     0,   108,    72,   176,    73,
   139,   140,   141,   171,     0,   275,     0,     0,    28,    29,
     0,    31,    32,    33,    34,     0,     0,   172,   173,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   276,     0,     0,   277,   278,   279,     0,
   348,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    55,    56,    57,    58,    59,    60,   111,     0,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,     0,   281,   282,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   136,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   137,    65,     0,
     0,   138,     0,     0,   175,     0,     0,     0,     0,     0,
     0,     0,     0,   108,    72,   176,   283,   139,   140,   141,
   109,     0,   379,     0,   229,    28,    29,    30,    31,    32,
    33,    34,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   380,    47,     0,   381,   382,   383,     0,   384,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
    58,    59,    60,   111,     0,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
   281,   282,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   136,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   137,    65,     0,     0,   138,     0,
   240,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   108,    72,     0,   385,   139,   140,   141,   171,     0,   275,
     0,     0,    28,    29,     0,    31,    32,    33,    34,     0,
     0,   172,   173,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   517,     0,     0,
   518,   278,   519,     0,   348,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    55,    56,    57,    58,    59,    60,
   111,     0,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,     0,   520,   282,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   136,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   137,    65,     0,     0,   138,     0,     0,   175,     0,
     0,     0,     0,     0,     0,     0,     0,   108,    72,   176,
   283,   139,   140,   141,   171,     0,   275,     0,     0,    28,
    29,     0,    31,    32,    33,    34,     0,     0,   172,   173,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   276,     0,     0,   277,   278,   279,
     0,   632,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,     0,   281,   282,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   136,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   137,    65,
     0,     0,   138,     0,     0,   207,     0,     0,     0,     0,
     0,     0,     0,     0,   108,    72,   176,   283,   139,   140,
   141,   171,     0,   275,     0,     0,    28,    29,     0,    31,
    32,    33,    34,     0,     0,   172,   173,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   517,     0,     0,   518,   278,   519,     0,   632,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    55,    56,
    57,    58,    59,    60,   111,     0,   112,   113,   114,   115,
   116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     0,   520,   282,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   136,     0,     0,     0,     0,
     0,   108,     0,     0,     0,   137,    65,     0,   109,   138,
   275,     0,   207,    28,    29,     0,    31,    32,    33,    34,
     0,     0,    72,   176,   283,   139,   140,   141,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   276,     0,
     0,   277,   278,   279,     0,   603,     0,     0,   397,     0,
   398,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    55,    56,    57,    58,    59,
    60,   111,     0,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,     0,   281,   282,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   136,     0,     0,     0,     0,     0,   108,     0,
     0,     0,   137,   399,     0,   109,   138,   275,     0,     0,
    28,    29,     0,    31,    32,    33,    34,     0,     0,    72,
   176,   283,   139,   140,   141,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   517,     0,     0,   518,   278,
   519,     0,   603,     0,     0,   397,     0,   398,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    55,    56,    57,    58,    59,    60,   111,     0,
   112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
   122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,     0,   520,   282,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   136,
     0,     0,     0,     0,     0,   108,     0,     0,     0,   137,
   399,     0,   109,   138,   528,     0,     0,    28,    29,    30,
    31,    32,    33,    34,     0,     0,    72,   176,   283,   139,
   140,   141,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   529,    47,     0,   530,    49,   531,     0,   110,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,   532,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   136,     0,     0,     0,
     0,     0,   108,     0,     0,     0,   137,    65,     0,   109,
   138,   275,     0,     0,    28,    29,     0,    31,    32,    33,
    34,     0,     0,    72,   176,   533,   139,   140,   141,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   276,
     0,     0,   277,   278,   279,     0,   800,     0,     0,   397,
     0,   398,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    55,    56,    57,    58,
    59,    60,   111,     0,   112,   113,   114,   115,   116,   117,
   118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,     0,   281,
   282,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   136,     0,     0,     0,     0,     0,   108,
     0,     0,     0,   137,    65,     0,   109,   138,   275,     0,
     0,    28,    29,     0,    31,    32,    33,    34,     0,     0,
    72,     0,   283,   139,   140,   141,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   517,     0,     0,   518,
   278,   519,     0,   800,     0,     0,   397,     0,   398,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    55,    56,    57,    58,    59,    60,   111,
     0,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,     0,   520,   282,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   136,     0,     0,     0,     0,     0,   108,     0,     0,     0,
   137,    65,     0,   109,   138,   275,     0,     0,    28,    29,
     0,    31,    32,    33,    34,     0,     0,    72,     0,   283,
   139,   140,   141,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   517,     0,     0,   518,   278,   519,     0,
   595,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    55,    56,    57,    58,    59,    60,   111,     0,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,     0,   520,   282,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   136,     0,     0,
     0,     0,     0,   108,     0,     0,     0,   137,   206,     0,
   109,   138,   275,   240,     0,    28,    29,     0,    31,    32,
    33,    34,     0,     0,    72,     0,   283,   139,   140,   141,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   787,     0,     0,   788,   278,   789,     0,   595,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
    58,    59,    60,   111,     0,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
   790,   282,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   136,     0,     0,     0,     0,     0,
   108,     0,     0,     0,   137,    65,     0,   109,   138,   275,
   240,     0,    28,    29,     0,    31,    32,    33,    34,     0,
     0,    72,     0,   283,   139,   140,   141,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   276,     0,     0,
   277,   278,   279,     0,   280,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    55,    56,    57,    58,    59,    60,
   111,     0,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,     0,   281,   282,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   136,     0,     0,     0,     0,     0,   108,     0,     0,
     0,   137,    65,     0,   109,   138,   275,     0,     0,    28,
    29,     0,    31,    32,    33,    34,     0,     0,    72,     0,
   283,   139,   140,   141,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   517,     0,     0,   518,   278,   519,
     0,   280,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,     0,   520,   282,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   136,     0,
     0,     0,     0,     0,   108,     0,     0,     0,   137,    65,
     0,   109,   138,   275,     0,     0,    28,    29,     0,    31,
    32,    33,    34,     0,     0,    72,     0,   283,   139,   140,
   141,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   517,     0,     0,   518,   278,   519,     0,   967,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    55,    56,
    57,    58,    59,    60,   111,     0,   112,   113,   114,   115,
   116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     0,   520,   282,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   136,     0,     0,     0,     0,
     0,   108,     0,     0,     0,   137,    65,     0,   109,   138,
   275,     0,     0,    28,    29,     0,    31,    32,    33,    34,
     0,     0,    72,     0,   283,   139,   140,   141,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   787,     0,
     0,   788,   278,   789,     0,   280,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    55,    56,    57,    58,    59,
    60,   111,     0,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,     0,   790,   282,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   136,     0,     0,     0,     0,     0,   108,     0,
     0,     0,   137,    65,     0,   109,   138,   275,     0,     0,
    28,    29,     0,    31,    32,    33,    34,     0,     0,    72,
     0,   283,   139,   140,   141,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   276,     0,     0,   277,   278,
   279,     0,  1075,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    55,    56,    57,    58,    59,    60,   111,     0,
   112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
   122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,     0,   281,   282,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   136,
     0,     0,     0,     0,     0,   108,     0,     0,     0,   137,
    65,     0,   109,   138,   275,     0,     0,    28,    29,     0,
    31,    32,    33,    34,     0,     0,    72,     0,   283,   139,
   140,   141,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   276,     0,     0,   277,   278,   279,     0,  1078,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,   281,   282,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   136,     0,     0,     0,
     0,     0,   108,     0,     0,     0,   137,    65,     0,   109,
   138,   275,     0,     0,    28,    29,     0,    31,    32,    33,
    34,     0,     0,    72,     0,   283,   139,   140,   141,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,  1136,
     0,     0,  1137,   278,   519,     0,   280,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    55,    56,    57,    58,
    59,    60,   111,     0,   112,   113,   114,   115,   116,   117,
   118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,     0,  1138,
   282,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   136,     0,     0,     0,     0,     0,   108,
     0,     0,     0,   137,    65,     0,   109,   138,   275,     0,
     0,    28,    29,     0,    31,    32,    33,    34,     0,     0,
    72,     0,   283,   139,   140,   141,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,  1141,     0,     0,  1142,
   278,   519,     0,   280,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    55,    56,    57,    58,    59,    60,   111,
     0,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,     0,  1143,   282,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   136,     0,     0,     0,     0,     0,   108,     0,     0,     0,
   137,    65,     0,   109,   138,   275,     0,     0,    28,    29,
     0,    31,    32,    33,    34,     0,     0,    72,     0,   283,
   139,   140,   141,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   276,     0,     0,   277,   278,   279,     0,
  1149,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    55,    56,    57,    58,    59,    60,   111,     0,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,     0,   281,   282,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   136,     0,     0,
     0,     0,     0,   108,     0,     0,     0,   137,    65,     0,
   109,   138,   275,     0,     0,    28,    29,     0,    31,    32,
    33,    34,     0,     0,    72,     0,   283,   139,   140,   141,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
  1193,     0,     0,  1194,   278,   519,     0,   280,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
    58,    59,    60,   111,     0,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
  1195,   282,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   136,     0,     0,     0,     0,   108,
     0,     0,     0,     0,   137,    65,   109,     0,   138,     0,
     0,    28,    29,    30,    31,    32,    33,    34,     0,     0,
     0,    72,     0,   283,   139,   140,   141,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    46,    47,     0,    48,
    49,    50,     0,   280,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    55,    56,    57,    58,    59,    60,   111,
     0,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,     0,   453,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   136,     0,     0,     0,     0,   108,     0,     0,     0,     0,
   137,    65,   109,     0,   138,     0,     0,    28,    29,    30,
    31,    32,    33,    34,     0,     0,     0,    72,     0,     0,
   139,   140,   141,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    46,    47,     0,    48,    49,    50,     0,   809,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,   453,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   136,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   137,    65,     0,     0,
   138,     0,     0,     0,     0,     0,     0,     0,     0,    22,
     0,     0,    23,    72,    24,    25,   139,   140,   141,     0,
     0,    26,     0,    27,    28,    29,    30,    31,    32,    33,
    34,    35,    36,     0,     0,    37,    38,    39,    40,     0,
    41,    42,    43,     0,    44,    45,     0,     0,     0,    46,
    47,     0,    48,    49,    50,     0,   458,     0,     0,    52,
     0,     0,     0,    53,     0,     0,     0,     0,     0,     0,
     0,    54,     0,     0,     0,     0,    55,    56,    57,    58,
    59,    60,     0,    61,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    62,
    63,     0,    64,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   136,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    65,     0,     0,     0,     0,    66,
     0,    67,    68,    69,    70,    71,     0,     0,    22,     0,
    72,    23,    73,    24,    25,     0,     0,     0,     0,     0,
    26,     0,    27,    28,    29,    30,    31,    32,    33,    34,
    35,    36,     0,     0,    37,    38,    39,    40,     0,    41,
    42,    43,     0,    44,    45,     0,     0,     0,    46,    47,
     0,    48,    49,    50,     0,    51,     0,     0,    52,     0,
     0,     0,    53,     0,     0,     0,     0,     0,     0,     0,
    54,     0,     0,     0,     0,    55,    56,    57,    58,    59,
    60,     0,    61,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   108,     0,     0,     0,     0,    62,    63,
   171,    64,     0,     0,     0,    28,    29,     0,    31,    32,
    33,    34,     0,     0,   172,   173,     0,     0,     0,     0,
     0,     0,     0,    65,     0,     0,     0,     0,    66,     0,
    67,    68,    69,    70,    71,     0,     0,   174,     0,    72,
     0,    73,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
    58,    59,    60,   111,     0,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
     0,     0,     0,     0,     0,   108,     0,     0,     0,     0,
     0,     0,   171,     0,   136,     0,     0,    28,    29,     0,
    31,    32,    33,    34,   137,    65,   172,   173,   138,     0,
     0,   175,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    72,   176,     0,   139,   140,   141,     0,     0,   418,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,     0,     0,     0,   108,     0,     0,     0,     0,
     0,     0,   109,     0,     0,     0,   136,    28,    29,     0,
    31,    32,    33,    34,     0,     0,   137,    65,     0,     0,
   138,     0,     0,   207,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    72,   176,     0,   139,   140,   141,   396,
     0,     0,   397,     0,   398,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,     0,     0,     0,   108,     0,     0,     0,     0,
     0,     0,   109,     0,     0,     0,   136,    28,    29,     0,
    31,    32,    33,    34,     0,     0,   137,   399,     0,     0,
   138,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    72,   176,     0,   139,   140,   141,   396,
     0,     0,   397,     0,   398,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,     0,     0,     0,     0,     0,     0,   108,     0,     0,
     0,     0,     0,     0,   171,     0,   472,     0,     0,    28,
    29,     0,    31,    32,    33,    34,   137,   399,   172,   173,
   138,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   473,   176,     0,   139,   140,   141,     0,
     0,   110,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,     0,     0,     0,     0,   108,     0,     0,
     0,     0,     0,     0,   109,     0,     0,     0,   136,    28,
    29,     0,    31,    32,    33,    34,     0,     0,   137,    65,
     0,     0,   138,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    72,   176,     0,   139,   140,
   141,   608,     0,     0,   397,     0,   398,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,     0,     0,     0,     0,   108,     0,     0,
     0,     0,     0,     0,   109,     0,     0,     0,   136,    28,
    29,     0,    31,    32,    33,    34,     0,     0,   137,    65,
     0,     0,   138,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    72,   176,     0,   139,   140,
   141,   110,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,     0,     0,     0,     0,   108,     0,     0,
     0,     0,     0,     0,   109,     0,     0,     0,   136,    28,
    29,     0,    31,    32,    33,    34,     0,     0,   137,    65,
     0,     0,   138,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    72,     0,     0,   139,   140,
   141,   197,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   109,     0,     0,     0,     0,    28,    29,
     0,    31,    32,    33,    34,     0,     0,     0,   136,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   137,    65,
     0,     0,   138,     0,     0,     0,     0,     0,     0,     0,
   110,     0,     0,     0,     0,    72,     0,     0,   139,   140,
   141,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    55,    56,    57,    58,    59,    60,   111,     0,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   109,     0,     0,   874,     0,    28,    29,     0,
    31,    32,    33,    34,     0,     0,     0,   136,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   137,    65,     0,
     0,   138,     0,     0,     0,     0,     0,     0,     0,   970,
     0,     0,     0,     0,    72,     0,     0,   139,   140,   141,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,   109,     0,     0,   874,     0,    28,    29,     0,    31,
    32,    33,    34,     0,     0,     0,   136,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   137,    65,     0,     0,
   138,     0,     0,     0,     0,     0,     0,     0,   973,     0,
     0,     0,     0,   971,     0,     0,   972,   140,   141,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    55,    56,
    57,    58,    59,    60,   111,     0,   112,   113,   114,   115,
   116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   109,     0,     0,   874,     0,    28,    29,     0,    31,    32,
    33,    34,     0,     0,     0,   136,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   137,    65,     0,     0,   138,
     0,     0,     0,     0,     0,     0,     0,   110,     0,     0,
     0,     0,   974,     0,     0,   975,   140,   141,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
    58,    59,    60,   111,     0,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   109,
     0,     0,   874,     0,    28,    29,     0,    31,    32,    33,
    34,     0,     0,     0,   136,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   137,    65,     0,     0,   138,     0,
     0,     0,     0,     0,     0,     0,   110,     0,     0,     0,
     0,   976,     0,     0,   977,   140,   141,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    55,    56,    57,    58,
    59,    60,   111,     0,   112,   113,   114,   115,   116,   117,
   118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   109,     0,
     0,   874,     0,    28,    29,     0,    31,    32,    33,    34,
     0,     0,     0,   136,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   137,    65,     0,     0,   138,     0,     0,
     0,     0,     0,     0,     0,   110,     0,     0,     0,     0,
   971,     0,     0,   139,   140,   141,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    55,    56,    57,    58,    59,
    60,   111,     0,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,   109,     0,     0,
   874,     0,    28,    29,     0,    31,    32,    33,    34,     0,
     0,     0,   136,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   137,    65,     0,     0,   138,     0,     0,     0,
     0,     0,     0,     0,   110,     0,     0,     0,     0,   974,
     0,     0,   139,   140,   141,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    55,    56,    57,    58,    59,    60,
   111,     0,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   109,     0,     0,   874,
     0,    28,    29,     0,    31,    32,    33,    34,     0,     0,
     0,   136,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   137,    65,     0,     0,   138,     0,     0,     0,     0,
     0,     0,     0,   110,     0,     0,     0,     0,   976,     0,
     0,   139,   140,   141,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    55,    56,    57,    58,    59,    60,   111,
     0,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,   109,     0,     0,   874,     0,
    28,    29,     0,    31,    32,    33,    34,     0,     0,     0,
   136,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   137,    65,     0,     0,   138,     0,     0,     0,     0,     0,
     0,     0,  1084,     0,     0,     0,     0,  1083,     0,     0,
   139,   140,   141,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    55,    56,    57,    58,    59,    60,   111,     0,
   112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
   122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   109,     0,     0,   874,     0,    28,
    29,     0,    31,    32,    33,    34,     0,     0,     0,   136,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   137,
    65,     0,     0,   138,     0,     0,     0,     0,     0,     0,
     0,   110,     0,     0,     0,     0,  1085,     0,     0,  1086,
   140,   141,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   109,     0,     0,   874,     0,    28,    29,
     0,    31,    32,    33,    34,     0,     0,     0,   136,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   137,    65,
     0,     0,   138,     0,     0,     0,     0,     0,     0,     0,
   110,     0,     0,     0,     0,  1085,     0,     0,   139,   140,
   141,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    55,    56,    57,    58,    59,    60,   111,     0,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   109,     0,     0,   874,     0,    28,    29,     0,
    31,    32,    33,    34,     0,     0,     0,   136,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   137,    65,     0,
     0,   138,     0,     0,     0,     0,     0,     0,     0,   110,
     0,     0,     0,     0,   971,     0,     0,  1252,   140,   141,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
    56,    57,    58,    59,    60,   111,     0,   112,   113,   114,
   115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,   109,     0,     0,   874,     0,    28,    29,     0,    31,
    32,    33,    34,     0,     0,     0,   136,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   137,    65,     0,     0,
   138,     0,     0,     0,     0,     0,     0,     0,   110,     0,
     0,     0,     0,   974,     0,     0,  1253,   140,   141,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    55,    56,
    57,    58,    59,    60,   111,     0,   112,   113,   114,   115,
   116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   109,     0,     0,   874,     0,    28,    29,     0,    31,    32,
    33,    34,     0,     0,     0,   136,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   137,    65,     0,     0,   138,
     0,     0,     0,     0,     0,     0,     0,   110,     0,     0,
     0,     0,   971,     0,     0,  1257,   140,   141,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    55,    56,    57,
    58,    59,    60,   111,     0,   112,   113,   114,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   109,
     0,     0,   874,     0,    28,    29,     0,    31,    32,    33,
    34,     0,     0,     0,   136,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   137,    65,     0,     0,   138,     0,
     0,     0,     0,     0,     0,     0,   110,     0,     0,     0,
     0,   974,     0,     0,  1258,   140,   141,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    55,    56,    57,    58,
    59,    60,   111,     0,   112,   113,   114,   115,   116,   117,
   118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   109,     0,
     0,   874,     0,    28,    29,     0,    31,    32,    33,    34,
     0,     0,     0,   136,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   137,    65,     0,     0,   138,     0,     0,
     0,     0,     0,     0,     0,   110,     0,     0,     0,     0,
  1085,     0,     0,  1289,   140,   141,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    55,    56,    57,    58,    59,
    60,   111,     0,   112,   113,   114,   115,   116,   117,   118,
   119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,   109,     0,     0,
   874,     0,    28,    29,     0,    31,    32,    33,    34,     0,
     0,     0,   136,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   137,    65,     0,     0,   138,     0,     0,     0,
     0,     0,     0,     0,   110,     0,     0,     0,     0,  1085,
     0,     0,  1292,   140,   141,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    55,    56,    57,    58,    59,    60,
   111,     0,   112,   113,   114,   115,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   109,     0,     0,   874,
     0,    28,    29,     0,    31,    32,    33,    34,     0,     0,
     0,   136,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   137,    65,     0,     0,   138,     0,     0,     0,     0,
     0,     0,     0,   110,     0,     0,     0,     0,   971,     0,
     0,  1294,   140,   141,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    55,    56,    57,    58,    59,    60,   111,
     0,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,   109,     0,     0,   874,     0,
    28,    29,     0,    31,    32,    33,    34,     0,     0,     0,
   136,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   137,    65,     0,     0,   138,     0,     0,     0,     0,     0,
     0,     0,   110,     0,     0,     0,     0,   974,     0,     0,
  1295,   140,   141,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    55,    56,    57,    58,    59,    60,   111,     0,
   112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
   122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   109,     0,     0,   874,     0,    28,
    29,     0,    31,    32,    33,    34,     0,     0,     0,   136,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   137,
    65,     0,     0,   138,     0,     0,     0,     0,     0,     0,
     0,   110,     0,     0,     0,     0,  1085,     0,     0,  1320,
   140,   141,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    55,    56,    57,    58,    59,    60,   111,     0,   112,
   113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   136,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   137,    65,
     0,     0,   138,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    72,     0,     0,   139,   140,
   141
};

static const short yycheck[] = {    13,
   201,   197,   146,    23,   234,   396,   397,   398,   264,   137,
   138,   258,   467,   433,   434,   234,   685,    62,    63,     2,
    50,    50,    13,   851,   205,    39,   207,    16,     1,    50,
    73,   203,     1,    13,    55,     1,    11,    80,     9,    10,
    11,    12,   170,    14,    15,    16,    17,    18,    19,    50,
    51,    51,   221,   222,   223,   224,   225,   226,   227,    14,
   290,    50,    50,    41,    41,   510,   144,   512,    51,    52,
   515,   290,    50,    50,    41,   144,    41,    50,     1,    51,
    16,    50,    50,    50,    50,    50,    41,    51,   108,    16,
   262,    50,    50,    41,    66,    53,   110,    55,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,   126,   127,   144,   144,   130,   131,   132,   108,
     2,   222,   223,   224,   225,   226,   227,   128,    41,    41,
    53,    41,   610,   611,   612,   613,   614,    50,    50,   182,
   183,   184,   185,   144,   374,    50,   376,    50,   117,    50,
   128,   128,   197,    16,   145,   175,   144,   376,   149,   128,
   174,   181,   128,   128,   128,   145,   144,   144,   116,   149,
    52,   144,   108,    16,  1002,   144,   144,   144,   144,   144,
   200,   108,    40,   197,   204,   144,   855,   856,   147,   203,
    16,   205,    51,   164,   165,   166,   167,   168,    41,    41,
    53,    51,    41,   433,   434,   205,   116,   207,    51,    12,
   338,    50,   603,    55,   186,   128,   128,   608,    50,   202,
   234,    53,   205,    55,   396,    51,    16,    41,   619,   243,
    51,   144,   144,   205,   248,   249,    50,   418,    50,   144,
    51,   144,   147,    55,   147,   108,   427,   428,   262,    50,
   264,   110,    50,   111,  1246,   113,   239,    16,    50,   682,
    50,    16,   245,   246,   247,   108,   280,   239,   240,    16,
   270,   254,   255,   256,   257,    14,   290,   136,   128,   724,
    50,   726,   108,   728,   729,   268,   269,    16,  1280,   128,
   681,    50,    51,   307,   308,   116,    51,    50,   312,   313,
   314,   272,    41,   144,   107,   144,   109,   110,   111,   481,
   113,    51,    41,   145,   128,   174,   117,   128,   108,    15,
   202,    17,    51,    16,    20,   339,    51,   128,     1,   132,
   144,    16,   346,   347,   348,  1163,   356,   357,   197,  1008,
   354,    50,   385,   144,   358,   359,   205,    43,    44,   108,
    46,    47,    48,   108,    50,   114,   115,   239,    51,   114,
   115,   108,    50,   245,   246,   247,    51,   412,   413,    51,
   384,    50,   254,   255,   256,   257,    51,    50,    43,   108,
   239,    46,   396,   397,   398,   615,   144,    51,   128,   844,
   845,    16,    50,   365,    41,    40,   615,   598,   821,    50,
     7,   824,   822,   128,   418,   549,   449,   450,    55,   800,
   393,   802,   384,    50,    51,   108,    51,    50,   418,   675,
    51,   280,   813,   108,    41,    50,    51,   427,   428,    40,
   853,   603,   114,   115,    51,     2,    51,   480,   103,   640,
   687,    15,    51,    17,   616,    50,    20,   430,    50,    51,
   146,   632,    43,   128,    61,    46,   315,    48,   458,    50,
    14,    50,    50,    51,   128,   479,   111,   481,   113,    43,
    44,    50,    46,    47,    48,   458,    50,   646,   647,   648,
   958,   959,   960,   108,    51,    52,   458,    41,    50,   348,
    51,   128,    16,   128,   508,  1164,  1165,   128,    65,    66,
   111,    50,   113,    15,   676,    17,   365,   144,    20,   116,
   117,   393,   103,   128,    50,    50,    14,   124,   125,   128,
    50,   128,   129,   130,    50,   384,   128,    51,   117,   103,
   104,    43,    44,    50,    46,    47,    48,   396,    50,   128,
   128,    51,   144,   110,   133,   646,   647,   648,   430,   128,
    50,   594,   753,   144,   133,   144,   144,    55,    50,   418,
   980,   111,   112,   113,   708,   144,   128,   128,    43,   136,
   993,    46,   146,    48,    51,    50,   435,   597,    50,   128,
    43,   595,   144,    46,   108,    48,    51,    50,    50,   603,
   114,   115,   822,   128,   608,   144,    50,   569,   133,   458,
   117,   615,   616,    41,   114,   115,   620,   174,    50,   144,
    41,   128,   113,   472,    50,    50,   630,   662,   632,   186,
   634,    50,    14,   595,   191,    50,    55,   144,   103,   830,
   197,   132,   632,    50,   146,   202,   128,    51,   205,   206,
   103,    50,   117,    14,    43,    50,    50,    46,    51,    41,
    50,   128,   144,   128,   221,   222,   223,   224,   225,   226,
   227,   675,   676,   128,    51,   679,   128,   234,    51,   144,
    41,    43,   239,   240,    46,     1,   114,   244,   245,   246,
   247,   144,   144,   114,   543,    41,    51,   254,   255,   256,
   257,    50,   128,   128,    20,    53,   263,  1117,   265,   266,
   267,   268,   269,   128,   103,   688,   689,  1127,   144,   144,
   569,   128,    51,   280,   128,    42,  1107,    43,    44,   144,
    46,    47,    48,   128,    50,   128,   956,   144,    51,   743,
   744,   745,   746,   747,    51,    14,   595,    51,   132,   144,
    43,   128,    51,    46,   603,   128,    50,  1003,   315,   608,
   980,   107,    41,   109,   110,   111,    51,   113,   954,  1179,
  1183,  1184,    41,   128,    50,  1188,  1189,  1190,  1191,    51,
    51,    43,    61,   632,    46,    51,   132,   103,  1198,    50,
    51,   348,    43,   911,    55,    46,   800,    51,   802,   128,
   107,    50,   109,   110,   111,   809,   113,    51,   365,   782,
   103,    41,    51,    51,   371,   128,    51,  1230,    41,    51,
    51,  1234,  1235,    50,   128,   132,    56,   384,   144,   128,
   146,    61,    51,   837,   838,    51,   393,   116,   117,   396,
    51,    50,   399,   128,    51,   124,   125,   203,    50,   128,
   129,   130,    51,    51,   827,    50,   128,   128,   415,    51,
    51,   418,   128,   867,    51,   221,   222,   223,   224,   225,
   226,   227,    43,   430,   128,    46,    51,    48,   435,    50,
   111,    51,   113,  1017,   128,    51,   116,   117,    51,   128,
   128,    50,   248,   128,   124,   125,   128,  1117,   128,   129,
   130,   458,    51,   128,    51,   866,   262,  1127,   264,   128,
   782,    43,   128,    51,    46,   472,    51,   128,  1299,    43,
    43,   128,    46,    46,  1337,  1338,    54,  1340,  1341,   128,
   128,   935,   103,    50,   290,  1348,   128,   128,  1351,  1352,
  1353,   128,  1133,   947,    20,   955,   117,    50,    51,    51,
  1363,   800,    55,   128,    55,   827,    15,   128,    17,  1179,
   809,    20,   133,   967,    41,   128,   970,    43,    44,   973,
    46,    47,    48,   144,    50,    15,    51,    17,  1198,   128,
    20,   128,   118,   119,    43,    44,   543,    46,    47,    48,
   128,    50,   146,   128,    51,    51,   352,   353,   128,  1003,
   712,    51,   714,    43,    44,   717,    46,    47,    48,   111,
    50,   113,   569,    43,  1018,   988,    46,   128,   730,   491,
   577,   493,   494,   495,   496,   497,   498,   103,   500,   501,
   107,   503,   504,    51,   111,   112,   113,   144,   595,   146,
   396,   397,   398,    50,    51,    51,   603,    51,    55,  1053,
   107,   608,    51,   128,   111,   112,   113,   107,   615,  1063,
    16,   111,   112,   113,    16,   109,   110,   111,   144,   113,
   146,  1075,   128,    51,  1078,   632,    14,    51,   635,    43,
  1084,   144,    46,  1056,   147,   132,    14,   146,   132,   646,
   647,   648,    41,   111,  1067,   113,    18,    19,    51,    21,
    22,    23,    24,    41,   816,   817,   146,   111,   665,   113,
    51,    41,    43,    41,    41,    46,   988,    55,   967,  1123,
  1093,   970,   114,   115,   973,   481,  1130,    55,    50,    56,
    41,   688,   689,   107,    61,  1139,  1140,   111,   112,   113,
  1144,  1145,  1146,  1147,    51,  1149,   118,   119,    70,    71,
    72,    73,    74,    75,    51,    18,    19,   869,    21,    22,
    23,    24,    56,     4,     5,   877,    41,   879,    51,   881,
   111,   883,   113,   885,   886,    43,    41,   889,    46,    54,
   892,    51,    51,    43,  1056,   897,    46,    50,  1192,   116,
   117,    41,  1196,  1197,  1167,  1067,    42,   124,   125,    33,
   107,   128,   129,   130,   111,   112,   113,    70,    71,    72,
    73,    74,    75,   107,    54,    41,   572,   111,   112,   113,
    41,  1093,   144,   352,   353,   782,  1075,    54,   111,  1078,
   113,     8,   107,    55,    50,  1084,   111,   112,   113,     2,
    54,    51,   111,   800,   113,   116,    55,   603,    25,    26,
    27,    28,   809,   108,    70,    71,    72,    73,    74,    75,
   616,   108,    39,    50,    51,    10,   978,   979,    55,   111,
   827,   113,    54,    50,    37,   111,    53,   113,  1251,    51,
   107,   144,   109,   110,   111,   144,   113,   146,    51,    52,
   646,   647,   648,   107,    41,  1167,   132,   111,   112,   113,
  1149,    51,    65,    66,  1016,   132,   144,   144,   146,   146,
    73,  1023,   128,  1025,    61,  1027,   144,    80,   146,   675,
   676,    51,    41,  1327,  1328,   681,  1330,  1331,   144,   145,
    41,    61,   144,    41,   146,  1339,    51,   107,  1342,  1343,
  1344,   111,   112,   113,    51,    51,    51,   110,   128,    51,
  1354,    41,    51,   825,   826,   114,   133,   134,   135,   113,
   137,   138,   139,   140,   141,    41,   143,   144,    54,   116,
   117,   113,    51,   136,    10,   128,    51,   124,   125,    50,
    51,   128,   129,   130,    55,    61,   116,   117,    51,   861,
   862,    51,   864,   865,   124,   125,   128,   954,   128,   129,
   130,   107,   146,   128,   128,   111,   112,   113,    51,    51,
   967,   174,    51,   970,     7,    53,   973,   113,    51,   182,
   183,   184,   185,   186,   187,   188,   189,   190,   191,   145,
   193,   988,   107,   196,   197,   147,   111,   112,   113,   202,
   116,   117,   205,   206,    51,   128,   802,    51,   124,   125,
   128,    53,   128,   129,   130,    51,    37,    51,   221,   222,
   223,   224,   225,   226,   227,    51,    54,    41,   107,    51,
   233,   234,   111,   112,   113,    41,   239,   240,    51,    51,
    50,   244,   245,   246,   247,   113,    55,   250,    10,    51,
    51,   254,   255,   256,   257,    61,    55,    51,   128,  1056,
   263,   128,   265,   266,   267,   268,   269,  1219,    54,   128,
  1067,    41,  1224,    51,   582,   583,   584,   280,  1075,   107,
    54,  1078,   590,   111,   112,   113,    51,  1084,    41,    56,
    41,    61,    53,    51,   107,    51,  1093,    51,   111,   112,
   113,    51,  1254,    51,   128,   128,     4,  1259,    61,   128,
   116,   117,   315,   128,  1266,    51,    41,   128,   124,   125,
   128,   107,   128,   129,   130,   111,   112,   113,    41,    51,
    51,    51,   114,   107,   113,    41,    61,   111,   112,   113,
    50,    50,    54,    54,  1296,   348,   116,   117,    56,    54,
    51,    51,  1149,    56,   124,   125,    41,    56,   128,   129,
   130,    61,   365,   116,   117,    53,    50,   114,   371,    51,
  1167,   124,   125,    51,    51,   128,   129,   130,    51,    51,
    51,   384,   385,   128,   128,    41,    51,    56,    51,    50,
   393,   116,   117,   396,    51,   128,   399,    51,    51,   124,
   125,    51,    51,   128,   129,   130,    51,  1003,    54,    51,
    20,    61,   415,    53,    51,   418,   116,   117,   118,   119,
   120,   121,   122,   123,   124,   125,    52,   430,   128,   129,
   130,    50,   435,    43,    44,    61,    46,    47,    48,    51,
    51,    56,    51,    51,    42,    51,   449,   450,   451,    56,
    53,    51,    51,   144,  1251,   458,     2,   765,   144,   767,
   768,    61,   770,   771,   144,   773,   116,   117,   776,   472,
   778,   779,    51,   781,   124,   125,    51,   480,   128,   129,
   130,    51,    61,    50,    50,    56,  1283,    56,    51,    51,
   116,   117,    61,    50,    55,    55,    55,    55,   124,   125,
    55,    55,   128,   129,   130,    51,    52,    51,    51,    51,
    51,  1107,    50,  1310,    51,    51,   116,   117,    51,    65,
    66,   144,   144,    50,   124,   125,    54,    50,   128,   129,
   130,    55,    50,    50,    55,    55,   128,   116,   117,    54,
   543,    51,    51,    51,    51,   124,   125,   116,   117,   128,
   129,   130,   128,    46,   128,   124,   125,    46,    56,   128,
   129,   130,    56,   128,   110,    51,   569,    51,    56,    56,
    51,    56,   575,    56,   577,    51,   579,   580,   128,   582,
   583,   584,    51,    51,    46,   588,   589,   590,   128,   592,
   136,   594,   595,   596,   128,    51,   128,    56,    51,    51,
   603,    51,    61,   114,    50,   608,    51,    56,    56,    56,
    51,    51,   615,   921,    51,   923,   924,   147,   926,    51,
   928,   929,   147,   128,    51,   933,   934,    51,   174,   632,
    51,   939,   635,   941,   942,   147,    51,   945,   946,    51,
   186,   147,    51,   646,   647,   648,    51,    51,   651,    61,
   147,   197,   147,    51,    51,   147,   202,   116,   117,   205,
   206,    55,   665,    55,    61,   124,   125,   147,    51,   128,
   129,   130,    51,    55,    55,   221,   222,   223,   224,   225,
   226,   227,    61,    51,    51,   688,   689,    51,   234,    51,
   147,    56,    55,   239,   240,    55,    55,    55,   244,   245,
   246,   247,    51,    55,   116,   117,    56,     0,   254,   255,
   256,   257,   124,   125,    56,    56,   128,   129,   130,   116,
   117,    56,    56,    56,    56,    56,    51,   124,   125,     0,
   506,   128,   129,   130,   280,  1043,    61,   116,   117,  1047,
  1093,   615,  1050,  1051,   687,   124,   125,   146,    51,   128,
   129,   130,   784,  1061,   574,   639,   811,    -1,    61,    -1,
    -1,   764,   765,    51,    -1,   768,    -1,    -1,   771,   315,
    -1,    -1,   775,    61,   777,    -1,   779,    -1,    -1,   782,
    -1,    -1,    -1,   786,    -1,    -1,    -1,    -1,   791,    -1,
    -1,   116,   117,    -1,    -1,    -1,    61,   800,    -1,   124,
   125,    -1,   348,   128,   129,   130,   809,    56,    -1,   331,
    -1,    -1,    61,   116,   117,    -1,  1124,    -1,    -1,   365,
    -1,   124,   125,  1131,   827,   128,   129,   130,   116,   117,
    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,   384,    -1,
   128,   129,   130,    -1,    -1,    -1,    -1,   393,    -1,    -1,
   396,   116,   117,   399,    -1,    -1,    -1,    -1,    -1,   124,
   125,  1169,    -1,   128,   129,   130,  1174,   116,   117,   415,
    -1,    -1,   418,    -1,    -1,   124,   125,    -1,    -1,   128,
   129,   130,    -1,    -1,   430,    -1,    -1,    -1,    -1,   435,
    -1,    -1,    -1,    -1,    -1,    -1,     2,    -1,    -1,    -1,
    -1,    -1,    -1,  1211,    -1,  1213,  1214,    -1,  1216,    -1,
    -1,    -1,   458,   916,    -1,    -1,    -1,    -1,   921,    -1,
    -1,    -1,    -1,   926,    -1,    -1,   472,    -1,   931,    -1,
    -1,    -1,    -1,    -1,    56,    -1,    -1,    -1,    -1,    61,
    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    -1,   952,
    -1,   954,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,
    66,    -1,    -1,    -1,   967,    -1,    -1,   970,    -1,    -1,
   973,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   988,    -1,    -1,   510,    -1,
   512,    -1,    -1,   515,   116,   117,    -1,   543,    -1,    -1,
    -1,    -1,   124,   125,   110,    -1,   128,   129,   130,    -1,
    -1,    -1,   116,   117,   118,   119,   120,   121,   122,   123,
   124,   125,    -1,   569,   128,   129,   130,    -1,    -1,    -1,
   136,   116,   117,   118,   119,   120,   121,   122,   123,   124,
   125,    -1,    61,   128,   129,   130,    -1,    -1,    -1,   595,
    -1,    -1,    -1,  1056,    -1,    -1,    -1,   603,    -1,    -1,
    -1,    -1,   608,    -1,  1067,    -1,    -1,    -1,   174,   615,
    -1,    -1,  1075,    -1,    -1,  1078,    -1,    -1,    -1,    -1,
   186,  1084,    -1,    -1,    -1,    -1,   632,    -1,    -1,    -1,
  1093,   197,    -1,    -1,    -1,    -1,   202,   116,   117,   205,
   646,   647,   648,    -1,    -1,   124,   125,   126,   127,   128,
   129,   130,    -1,    -1,    -1,   221,   222,   223,   224,   225,
   226,   227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   239,   240,    -1,    -1,    -1,   244,   245,
   246,   247,    -1,    -1,    -1,    -1,  1149,    -1,   254,   255,
   256,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,  1167,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   709,    -1,    -1,
   712,    -1,   714,    -1,    -1,   717,    -1,    -1,    -1,    -1,
    -1,    -1,   724,    -1,   726,    -1,   728,   729,   730,   315,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
=======
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   430,   432,   431,   215,   212,   214,    17,   195,   203,
   213,   219,   220,   222,   205,   217,   211,   206,   218,   210,
   221,    22,    10,     9,    21,    12,    11,     2,     0,     0,
     0,     0,     0,    27,   424,   356,   209,   355,   353,   354,
     0,     0,   429,   359,   357,   298,     0,   336,     0,   206,
     0,    99,     0,   100,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   427,   407,     0,   454,     0,     0,     0,
     0,     0,     0,     0,     0,   407,   407,   369,   368,   407,
   110,     0,   111,     0,    51,    52,    56,    57,     0,     0,
     0,     0,    83,   215,    37,     0,   212,   214,   357,   219,
   205,   438,   211,     0,   221,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   102,   101,     0,     0,   427,   190,   189,
   188,     0,     0,   151,   148,     0,     0,     0,     0,     0,
     0,     0,     0,   417,     0,     0,   427,   105,   133,     0,
     0,     0,     0,     0,     0,   104,   166,   167,     0,     0,
   417,     0,     0,     0,     0,     0,     0,     0,    28,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   212,   214,     0,   219,   211,   221,     0,   313,   314,
   312,   315,   316,   317,   318,   319,   320,   321,   322,   323,
   324,   325,   326,   327,     0,     0,   333,   334,   335,     0,
     0,     0,     0,   253,     0,   255,   252,   254,   207,   208,
     0,   232,   233,     0,   230,   231,   229,   362,   365,   360,
   361,   363,   364,   227,   228,   224,   225,   226,     0,     0,
     8,     6,     7,     5,     4,     0,     0,     0,   357,     0,
   347,   336,   362,   365,     0,     0,     0,     0,     0,     0,
     0,   106,   108,   107,   109,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   395,     0,     0,     0,   434,     0,
   116,   118,   120,   117,     0,     0,   453,   452,     0,     0,
   426,     0,     0,   443,     0,     0,     0,     0,     0,   173,
     0,   176,   168,   169,   235,   236,   171,   170,   221,     0,
   366,   367,   407,   383,   407,   407,   380,   407,   407,   371,
   407,     0,     0,     0,   116,   118,   117,     0,     0,   357,
     0,     0,   427,   188,     0,   352,   439,    78,    84,   150,
   184,   194,     0,   428,     0,     0,     0,   490,     0,   423,
     0,   395,     0,     0,   395,     0,     0,     0,     0,   307,
   308,   310,     0,   306,   309,   311,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,   149,     0,   146,   147,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   427,   421,     0,   187,
   130,     0,     0,     0,     0,   122,    34,    33,    59,    32,
     0,    82,     0,    80,   145,   491,   491,     0,   491,   491,
   491,   491,   491,   491,     0,   487,   491,   491,   488,   491,
   491,     0,    26,    30,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   216,   256,     0,   116,   118,   117,     0,
     0,     0,     0,   282,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   197,   204,   196,
   344,   343,   350,   342,   338,   346,   341,   337,   345,   351,
   461,   349,   348,   340,   339,    48,     0,     0,     0,     0,
   144,     0,     0,   140,     0,     0,     0,     0,     0,   414,
     0,   427,     0,   407,   407,     0,     0,     0,     0,     0,
     0,   456,     0,   425,     0,     0,     0,     0,   357,     0,
     0,     0,   221,     0,   250,   250,   250,   218,   250,   250,
   250,   218,     0,     0,   462,     0,     0,     0,   407,   384,
   407,   407,   376,   407,   381,   407,   407,   372,     0,   392,
   407,   407,     0,   370,   187,     0,     0,     0,     0,   116,
   118,   116,   118,   442,   188,     0,     0,     0,     0,     0,
     0,     0,   441,   440,   436,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   300,   301,     0,     0,     0,   305,
    69,     0,   427,     0,    68,   193,     0,   116,   118,   117,
     0,    43,    53,     0,   468,     0,   466,     0,   470,    58,
    45,    46,    47,    44,    35,   418,   417,     0,   415,    96,
     0,     0,     0,   187,   132,   131,   133,   133,     0,    98,
     0,     0,     0,   478,   475,    97,   485,   481,   479,   476,
   489,   483,     0,    86,     0,    87,    93,   477,   474,   484,
   480,   352,    29,     0,   202,     0,   257,   199,     0,     0,
   259,     0,     0,     0,     0,   258,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   283,   285,   284,   366,   367,   292,   289,   290,
   291,   293,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   223,     0,   459,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   407,     0,   407,   407,   397,
   407,   413,     0,   435,   434,     0,     0,     0,     0,     0,
     0,     0,   455,     0,     0,   450,   423,     0,   175,   237,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   464,   463,     0,   234,     0,   385,
   407,   377,   379,   382,   407,   373,   375,   407,   407,   391,
     0,   386,     0,     0,     0,     0,     0,     0,     0,     0,
   187,   395,   442,   187,   491,   491,     0,   437,    63,     0,
     0,     0,     0,     0,    71,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   116,   118,   471,   471,
   469,   467,     0,   422,   427,   421,   186,   187,   178,   133,
   133,     0,   124,   125,    81,   496,   491,   491,   497,   491,
   491,     0,     0,    93,     0,    85,     0,     0,     0,     0,
   198,     0,     0,     0,     0,   280,   264,     0,   267,     0,
   269,     0,   266,     0,     0,     0,     0,     0,   262,     0,
     0,   263,     0,     0,   260,   261,   277,     0,   288,   286,
   287,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   460,     0,   138,     0,   141,   143,   142,     0,     0,
   407,   398,   407,   407,   399,   412,   407,   407,     0,   396,
     0,   433,     0,     0,     0,     0,   458,     0,     0,   251,
   250,   250,   250,   218,   242,   245,   243,   244,   238,   241,
   239,   240,     0,   177,   465,   395,   378,   374,   393,   387,
     0,     0,   407,   136,     0,   427,   430,     0,   427,   430,
   427,   430,     0,     0,   395,     0,     0,     0,   486,   482,
     0,    62,     0,    72,    74,     0,    73,    75,   302,   303,
   304,   187,   192,     0,     0,     0,     0,     0,   473,   472,
    96,   417,   419,   185,   126,   127,   133,   493,   492,   495,
   494,    92,    88,    91,    90,    89,     0,   201,   276,     0,
   200,     0,   270,   273,   275,   272,     0,   265,     0,   268,
     0,   279,   328,   329,   330,   331,   332,     0,     0,     0,
     0,     0,     0,     0,   401,   400,   402,   407,   405,     0,
   403,     0,    77,     0,    31,   457,     0,     0,     0,   246,
   249,   247,   248,     0,   407,     0,   388,     0,   134,     0,
     0,     0,     0,     0,     0,     0,     0,   427,     0,   427,
   430,     0,   178,   112,   191,    60,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   416,
     0,     0,   123,    24,   278,     0,   271,   274,     0,   139,
    94,     0,   395,   404,     0,     0,   407,     0,     0,    49,
     0,   407,   390,   407,   137,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   113,     0,    65,     0,     0,     0,     0,     0,
     0,     0,     0,    96,   133,   133,   281,    64,     0,   407,
     0,   408,    61,   451,   395,   394,   389,     0,     0,     0,
     0,   187,   187,     0,     0,     0,   187,   187,   187,   187,
     0,     0,     0,     0,     0,     0,   395,    66,     0,     0,
     0,     0,     0,     0,     0,   420,   128,   129,   407,   410,
   407,     0,   187,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   187,     0,     0,     0,   187,
   187,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   406,   409,     0,     0,   430,   430,     0,   179,   155,
   430,   430,     0,   182,   153,   181,   156,     0,     0,     0,
     0,     0,     0,   114,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   174,     0,   136,     0,     0,
   430,     0,     0,   430,   180,   430,   430,     0,   183,   154,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   135,     0,     0,     0,     0,     0,     0,     0,
     0,   430,   115,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   187,   187,
     0,   187,   187,     0,     0,     0,     0,     0,     0,   187,
     0,     0,   187,   187,   187,     0,   165,   163,     0,   159,
   157,     0,     0,     0,   187,   164,   158,   162,   160,     0,
   161,     0,     0,     0
};

static const short yydefgoto[] = {  1482,
     2,    21,   321,   893,   242,   563,    85,    86,   993,   806,
  1242,   155,    88,    89,    90,    91,    92,   551,   556,   233,
  1199,    93,    94,    95,    96,   309,   548,   452,   156,   782,
   157,   334,  1006,  1001,   159,   160,   161,   389,   374,   454,
   455,   456,   905,   162,   163,  1007,   613,   164,   165,   100,
   101,   102,   103,   104,   105,   513,   166,   457,   198,   405,
   229,   230,   231,   428,   549,   779,   106,   221,   167,   199,
   200,   169,   170,   668,   501,   254,   108,   109,   110,   439,
   895,  1187,   111,   864,   112,   696,   113,   766,   171,   794
};

static const short yypact[] = {    11,
  1156,  8702,-32768,-32768,  -102,-32768,-32768,-32768,  1156,  1156,
  1156,  1156,  8082,  1156,  1156,  1156,  1156,  1156,  1156,-32768,
   125,    48,  5515,-32768,    15,   777,   811,    35,    56,-32768,
   107,   445,   451,   464,-32768,   -76,-32768,-32768,    65,   475,
  8180,    34,   200,   503,-32768,-32768,-32768,   565,-32768,-32768,
-32768,   288,  3715,  8702,   421,   531,   540,   467,    65,   589,
   639,   661,   682,   700,   734,   762,   776,   783,   582,   582,
   794,   409,   326,   826,   834,   840,   859,   868,   880,   887,
   916,    19,   424,  1412,   914,-32768,-32768,-32768,   927,-32768,
-32768,   424,-32768,-32768,  1010,-32768,   161,   154,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,   842,   324,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,   941,   930,   802,   858,   858,  5515,
-32768,  6402,   963,  8082,  8082,  8082,  8082,  8082,  8082,  8082,
  8082,  8082,  8082,  8082,  8082,  8082,  8082,  8082,  8082,  1013,
  1025,  8082,  8082,  8082,  1045,  1070,  1096,   271, 10605, 10605,
  1126,-32768,-32768,-32768,-32768,   161,   154,  1260,  1284,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,   324,   308,-32768,-32768,
-32768,   858,   858,   858,   858,   858,   858,-32768,  1156,  1156,
  1156,  1156,  1156,-32768,-32768,-32768,  1142,-32768,-32768,-32768,
  4552,  5515,-32768,-32768,  1516,-32768,   289,-32768,  1270,-32768,
  5515,   424,   424,   424,   424,   417,    65,    65,    65,    65,
    92,  1151,    65,-32768,  1177,    65,  5108,     2,  1137,  5515,
   298,  8702,  5243,  1090,   490,    22,    60,-32768,-32768,   206,
-32768,  1190,-32768,  5515,-32768,-32768,-32768,-32768,  3864,   443,
  5651,  1216,  1205,  1223,-32768,   648,   178,   181,  1527,  1228,
  1304,-32768,   378,   257,   785,  1265,  1231,   417,   417,  1242,
  1291,   417,   417,  1212,  1212,  1212,  1212,  1212,  1212,  1212,
   855,   964,  1237,-32768,-32768,    65,  7578,  1293,-32768,-32768,
-32768,  8418,   417,-32768,   395,  8082,   461,  8702,  8702,  8702,
  5515,  8702,  8702,  5379,  8082,   424,   286,-32768,    72,  8702,
  8702,  8702,  8702,  1129,   743,-32768,-32768,-32768,  5243,    92,
  5379,    92,    92,    92,  1310,    94,    94,  5786,-32768,  1156,
  1320,   468,  1234,    13,   212,  1282,   284,  6500,   611,   693,
  1296,   452,   689,   441,  1328,   692,  1347,  5884,  1260,  1260,
  1260,  1260,  1260,  1260,  1260,  1260,  1260,  1260,  1260,  1260,
  1260,  1260,  1260,  1260,  8082,  8082,  1260,  1260,  1260,  8082,
  8082,  8082,   410,  1411,   154,-32768,  1421,-32768,-32768,-32768,
    65,-32768,-32768, 10514,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768, 10605,  8082,
  1446,  1134,  1134,   -28,  1294,  8082,  8082,  4699,  1191,   717,
-32768,-32768,    23,    31,  8082,   298,  5515,  5515,  8082,  8082,
   857,-32768,-32768,-32768,-32768,   501,  1397,  1390,  1418,  1434,
  1402,   103,  1440,  1443,   565,  1439,   364,  1430,  1452,   992,
    13,   212,  1282,   284,  6206,   570,-32768,-32768,  1384,  1461,
-32768,   883,  8702,-32768,  1371,  4258,  7781,  7781,   585,-32768,
   354,-32768,  1516,  1378,-32768,-32768,  1112,  1270,   203,    65,
-32768,-32768,   214,-32768,   317,   224,-32768,   469,   234,-32768,
  1247,  8082,  1100,  1008,   465,   543,   568,   708,   903,  1227,
  1060,   409,  1444,  1457,  4846,-32768,-32768,-32768,-32768,-32768,
-32768,  1466,  1395,-32768,  1399,  5651,  5651,-32768,  8702,  1510,
  1478,   565,  1492,  1500,   565,  1391,  1503,  1509,   410,   395,
   154,-32768,  1501,   324,-32768,-32768,  1506,  1524,  1529,  1536,
  1517,  1528,   424,   424,   647,  1535,   493,  1448,  4013,  1386,
   452,   689,  1228,   692,  1347,  1031,   231,   547,  1543,  1389,
  1398,  1401,  1063,  1409,  1420,    55,   310,  1557,  1560,   247,
-32768,  1494,  8082,    42,  5243,-32768,  1250,  1498,  1498,-32768,
   298,-32768,  1562,  1504,-32768,   397,   397,  1566,   397,   397,
   397,   397,   397,   397,  7886,-32768,   259,   397,-32768,   259,
   397,  5786,-32768,   802,  1608,  8082,  1496, 10514,   645, 10514,
   691,   720, 10514,   723,   746,   747,   759,   824,   760,   763,
  1575,  1578,   767,-32768,  1395,  1493,  1513,  1537,  1538,   825,
   778,  1059,  1617,-32768,  1620,   287,   387,   593,   742,   744,
  1105,   695,   689,  1328,   692,  1347,  1621,  1268,-32768,  1260,
  1260,  1260,-32768,-32768,-32768,-32768,-32768,-32768,-32768,  1260,
  1666,  1561,-32768,  1260,  1260,-32768,   732,  1626,   695,  1531,
-32768,  1391,    65,-32768,    61,  1631,    65,    65,  1632,-32768,
   671,    65,   676,   235,  1177,  1635,    37,  1640,   709,  6304,
   552,  8082,   298,-32768,  1431,  1655,  4405,  1643,  1191,    17,
   717,   406,  1347,  5996,   758,    99,  1654,  1654,   758,    99,
  1654,  1654,  7676,  5243,-32768,  1645,  1147,  1650,    -6,-32768,
  1177,  1177,-32768,    -6,-32768,  1177,  1177,-32768,    65,-32768,
   516,   309,  8082,-32768,   247,  3540,   779,   789,   803,   829,
   847,  1575,  1578,  1399,  1651,  8082,  1653,  4986,  1269,  8082,
    92,  1649,  1588,-32768,  1052,   298,  1694,  1657,  5243,    65,
  1661,  1664,  5243,    65,-32768,-32768,  1212,  1212,  1212,-32768,
-32768,    65,  1662,  1457,-32768,-32768,  1665,  1586,  1589,  1590,
  1042,-32768,-32768,    92,-32768,  1668,-32768,  1669,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,  5379,  3274,-32768,-32768,
  4118,  1667,   145,   247,-32768,-32768,  1683,   184,  1205,-32768,
   743,    94,    94,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,  6598,-32768,  1515,-32768,  1260,-32768,-32768,-32768,
-32768,-32768,-32768,  1673,    58,   850,-32768,  1334,  8785,  1676,
-32768,  8785,  1677,  8785,  1678,-32768,  8785,  1679,   861,   876,
   878,   829,   882, 10514,   885, 10514,   907, 10514, 10514,  8785,
  1680,  1600,-32768,-32768,-32768,  1601,  1602,-32768,-32768,-32768,
-32768,-32768,  8082,  8082,  8082,  8082,  8082,  1603,  1604,  1605,
   913,-32768,   298,-32768,  1586,  1589,  1590,  1104,  1687,  1699,
  1690,  1692,  1693,  1627,    65,   657,    65,   731,    -6,-32768,
  1255,-32768,  8702,-32768,  1452,  1629,   555,   465,   543,   568,
  1162,   612,-32768,  1527,  1636,-32768,-32768,  1698,-32768,-32768,
  1700,  6108,    17,  3430,  1695,  1701,  1702,  1703,  1696,  1697,
  1705,  1706,  6696,  1707,  1713,-32768,  1147,-32768,  1709,-32768,
  1177,-32768,-32768,-32768,  1177,-32768,-32768,  1177,  1177,-32768,
  8082,-32768,   353,  1708,  8876,  8967,  9058,   918,   935,  1715,
   247,   565,-32768,   247,   397,   397,  8702,-32768,-32768,   298,
  1710,  1716,  1719,  1648,-32768,  1720,  1722,  1723,  1724,  1725,
  1651,  8082,  8082,  1726,  1727,  1728,  1652,  1658,  1739,  1739,
-32768,-32768,  1730,-32768,   513,  1557,-32768,   247,-32768,   110,
  1683,  1729,-32768,-32768,-32768,-32768,   259,   397,-32768,   259,
   397,  6794,  1523,   441,  8278,-32768,  7984,  8278,  1156,  8082,
-32768,  8785,  1731, 10514,  1733,-32768,-32768,  8785,-32768,  8785,
-32768,  8785,-32768,  8785,  9149,  9240,  9331,   937,-32768,  8785,
  1735,-32768,  8785,  1736,-32768,-32768,-32768,  8785,-32768,-32768,
-32768,  1061,  1068,  1080,  1083,  1109,  1738,  1740,  1741,  1652,
  1670,-32768,  1658,-32768,    65,-32768,-32768,-32768,  1743,  1742,
  1177,-32768,  1177,  1177,-32768,-32768,   841,   338,  8082,-32768,
  1438,-32768,  1744,   632,   847,  8082,   417,  5515,  1587,-32768,
   758,    99,  1654,  1654,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,  6892,-32768,-32768,   565,-32768,-32768,-32768,-32768,
   238,  8082,  1177,  1756,  6990,  1273,  1747,  7088,  1292,  1749,
  1322,  1750,  9422,  9513,   565,  1748,  1752,  1751,-32768,-32768,
  1474,-32768,  8702,-32768,-32768,  1753,-32768,-32768,-32768,-32768,
-32768,   247,  1260,   -11,    53,   653,  1754,  1757,-32768,-32768,
  1557,  5379,-32768,-32768,-32768,-32768,   227,-32768,-32768,-32768,
-32768,-32768,  1366,-32768,  1260,  1755,   917,  1260,-32768,  8785,
  1268,  8082,-32768,-32768,-32768,-32768,  9604,-32768,  8785,-32768,
  8785,-32768,-32768,-32768,-32768,-32768,-32768,  1660,  1663,  1671,
  1759,  1760,  8560,  1764,-32768,-32768,-32768,  1177,-32768,  8082,
-32768,   707,-32768,  8702,  1260,-32768,  1765,  1327,  1766,-32768,
-32768,-32768,-32768,  1767,  1177,  1102,-32768,    26,-32768,  7186,
  1768,  1770,  7284,  1771,  1772,  1773,  1774,  1428,  7382,  1542,
  1779,  1780,  1783,-32768,-32768,-32768,  1456,  8560,  1781,  1785,
  1787,  1747,  1789,  1790,  1749,  1791,  1750,  1672,    64,-32768,
  1793,   145,-32768,-32768,-32768,  1113,-32768,-32768,  1704,-32768,
  1412,  1795,   565,-32768,  1117,  8082,  1177,  1423,   298,-32768,
  1797,  1177,-32768,  1177,-32768,  1796,   940,   944,  1173,  8082,
  8082,   945,   951,  1266,  8082,  8082,  8082,  8082,  1799,  7480,
  1800,  1801,-32768,  1802,-32768,  1804,  1783,   160,  1182,  1794,
  1812,  1813,  1779,  1557,   110,  1683,-32768,-32768,  1814,  1177,
  1138,-32768,-32768,-32768,   565,-32768,-32768,  8082,   965,   969,
   970,   247,   247,   971,   973,   975,   247,   247,   247,   247,
  8082,   976,   984,  1313,  8082,  8082,   565,-32768,  1737,  1745,
  1776,  1746,  1758,  1821,  1229,-32768,-32768,-32768,  1177,-32768,
  1177,  1817,   247,  9695,  9786,   991,  1815,  1816,  9877,  9968,
   998,  1818,  1819,  1820,  1824,   247,  1001,  1005,  1006,   247,
   247,  1822,  1830,  1832,  1762,  1833,  1834,  1763,  1769,  1777,
  1840,-32768,-32768,   130,  1831,  1837,  1838, 10059,-32768,-32768,
  1841,  1846, 10150,-32768,-32768,-32768,-32768,  1835, 10241, 10332,
  1017,  1842,  1843,  1782,  1718,  1761,  1851,  1775,  1778,  1852,
  1853,  1854,  1784,   132,    19,-32768,  1860,  1756,  1861,  1863,
  1864,  1867,  1868,  1872,-32768,  1873,  1874, 10423,-32768,-32768,
  1147,  1837,  1838,  1786,  1841,  1846,  1792,  1806,  1807,  1877,
   500,  1293,-32768,  1856,  1876,  1878,  1879,  1880,  1881,  1882,
  1886,  1890,  1378,  1864,  1872,  1873,  1874,  1808,  8082,  8082,
  1887,  8082,  8082,  1891,  1892,  1893,  1894,  1890,   247,   247,
  8082,   247,   247,  8082,  8082,  8082,  1897,  1898,  1900,   247,
  1905,  1906,   247,   247,   247,  8082,-32768,-32768,  1907,-32768,
-32768,  1908,  1909,  1910,   247,-32768,-32768,-32768,-32768,  1911,
-32768,  1944,  1948,-32768
};

static const short yypgoto[] = {-32768,
-32768,    36,  1379,-32768,   148,  1174,  1674,   -47,  -551,-32768,
   748,    18,-32768,-32768,  -298,   -57,   -45,   -60,  -751,-32768,
   566,  1711,  -216,   598,  1274,-32768,  -162,-32768,   373,  -234,
  2501,   -13,  -507,-32768,  2071,  -124,-32768,-32768,  1150,  -431,
-32768,-32768,  -597,   943,-32768,   -10,-32768,-32768,   670,-32768,
-32768,-32768,  2191,-32768,-32768,  -192,-32768,    21,     4,  -154,
-32768,  -268,  -417,  1941,  -309,  -958,  -217,-32768,  1392,  1952,
     1,  -382,-32768,  1084,  1235,  -210,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,  1056,-32768,  -527,  2033,  -416
};


#define	YYLAST		10754


static const short yytable[] = {   158,
   438,   568,   228,   444,   390,   243,   564,   659,   528,   195,
   768,   274,   275,   168,   680,   686,   690,  1133,     1,    87,
   636,   639,   298,   805,   369,   370,  1255,   218,   481,   427,
   487,   306,   634,  1220,   219,   983,   984,   884,   213,   249,
   637,   115,   785,   197,   116,   117,   118,   119,   440,   172,
   173,   174,   175,   176,   177,   776,   252,   427,   588,   201,
   451,  1000,   900,   294,   688,   692,   213,   212,   295,   614,
   244,    87,   517,   518,   519,   520,   521,   522,   220,   206,
   817,   213,   821,   183,   738,   826,   213,   741,   906,   907,
   908,   909,   910,   911,   912,   427,   185,  1223,   858,   363,
   207,   859,   184,   860,   213,   655,   195,   554,  1281,   213,
   339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
   349,   350,   351,   352,   353,   354,   372,   373,   357,   358,
   359,   697,  1221,   178,   904,  1222,   422,   214,   422,   589,
   322,   412,   413,   414,   415,   554,   565,   655,   463,    84,
   795,   208,   797,   798,   799,   800,   801,   802,   664,   437,
   808,   809,   861,   810,   811,   214,   313,   193,   296,  1256,
   148,   154,  1230,   310,  1394,   193,  1421,   399,   195,   154,
   214,    72,   372,   373,   555,   297,   466,   195,   641,   917,
   310,   243,   447,   313,   448,   402,  1224,  1319,   278,  1225,
  1320,   256,  -172,   214,   278,   311,   195,  1282,   214,   453,
  1283,   400,   401,   697,   391,   392,   393,   394,   395,   554,
   195,   411,   311,   491,   697,   480,   492,   249,  1135,  1136,
   179,   228,   180,   181,   182,   278,   183,    82,  -172,    87,
   442,   427,   252,   310,   486,   680,   278,   222,  -172,   427,
   213,  -172,   903,  -172,   473,   184,   244,   590,   213,   427,
   314,  1321,   554,   527,   629,   918,   764,   312,   213,   427,
   427,   792,   536,  1395,   729,  1422,   765,   195,   213,   213,
   453,   550,   781,   678,   312,   733,   734,   314,  1195,   193,
  -148,  -148,   228,  -149,  -149,   453,   552,   453,    22,    87,
   409,   410,   495,   311,   249,    87,    87,    87,  -172,    87,
    87,   543,  -172,  -172,  -172,   363,   -18,    87,    87,    87,
    87,   583,   853,   406,   612,  1326,  1019,   702,  1022,   593,
  1025,  1026,   469,   576,   579,   553,   316,   312,   591,  1232,
   699,   616,   617,   -18,   427,   443,   618,   619,   620,   214,
   704,   980,   427,   -18,   777,   584,   -18,   214,   931,   295,
   709,   879,   372,   373,   660,   793,   496,   214,   497,   445,
   282,   372,   373,   427,    97,   298,   630,   214,   214,   228,
    30,   228,   631,   632,   399,  1233,   148,  1180,  1092,   694,
   316,   640,   787,   195,   195,   644,   645,    72,   407,   695,
   408,    46,    47,  1093,    49,    50,    51,   310,   661,   792,
   594,   372,   373,   -18,   278,   -18,   -18,   -18,   400,   -18,
   274,   275,   854,   494,   528,   247,    97,   642,   643,   530,
   317,   232,   679,   685,   689,   540,   541,   542,   -18,   544,
   545,  1129,  1130,  1143,   279,   285,  1146,   557,   558,   559,
   560,   901,    72,   277,   621,   896,   228,   283,   715,   228,
    87,   416,   412,   414,   310,   225,   681,   973,   213,   278,
   903,   480,  1072,  1190,  1191,  1192,  1193,   372,   373,   707,
   934,   243,   249,   249,   317,   903,   604,   277,   252,   209,
  -146,  -146,   564,   786,   332,   210,   311,   491,   641,   252,
   252,   312,   586,   793,   427,   509,   742,   662,   211,   663,
   588,   372,   373,   789,   678,   249,    87,   729,   949,   216,
   364,  1074,   409,   410,  1107,   148,   929,   461,  1109,  1110,
   462,   915,   252,  1327,  1328,    72,    72,   858,   756,   784,
   859,   453,   860,    72,  1421,   647,   244,   223,   283,   982,
   296,   427,   278,   278,   958,   959,   960,  1132,   312,   316,
   278,   807,   295,   332,   257,   372,   373,   297,   249,   482,
  1138,  1139,   815,  1140,  1141,   258,   952,   407,   285,   408,
   956,    30,   764,   423,   259,   812,   483,    72,   590,   247,
   675,   717,   767,   271,    97,   272,   213,   840,    30,   213,
  1002,   861,    46,    47,   278,    49,    50,    51,   413,   224,
   260,   247,   279,   593,   213,   976,   148,   372,   373,    46,
    47,    48,    49,    50,    51,    52,   273,    72,   855,   693,
   285,   285,   283,   262,   285,   285,   510,   510,   510,   510,
   510,   510,   510,  1422,   278,  1042,   735,   228,   599,   332,
   246,   600,   870,   317,   531,   285,   213,  1028,   894,   537,
    97,    97,    97,   679,    97,    97,   225,  1051,  1194,   718,
   284,    99,    97,    97,    97,    97,   213,  1150,   892,   527,
   453,  1064,   566,   263,   569,   571,   573,  1212,   577,   580,
   819,   213,   427,   490,   719,   297,   671,   681,   297,   933,
   332,   313,   815,   274,   316,   264,  1106,   310,   226,  1108,
   227,    72,   941,   297,   480,   213,   944,   372,   373,   271,
   213,   272,   251,    99,    30,   453,   265,    83,   278,   453,
   601,   252,  1112,   602,   492,   622,   822,   494,   296,  1066,
   491,  1054,  1246,  1134,   266,   720,    47,    48,   721,    50,
    51,    52,   273,   213,   271,   297,   272,  1247,   296,    30,
   307,   308,   633,   453,   453,   824,   427,   978,   827,   865,
   332,   820,   866,   752,   867,   297,   647,   856,   267,   857,
    46,    47,    48,    49,    50,    51,    52,   273,   649,   994,
   753,   588,   590,   904,   656,   314,  1226,   875,   317,  1227,
  1285,   312,   877,   417,   593,   834,   268,   247,   836,   986,
   989,  1009,   840,  1011,   214,    97,  1013,   823,   332,   214,
   269,   279,  1231,   848,   935,  1289,   407,   270,   408,  1027,
   498,   372,   373,   868,   936,   887,   246,   320,   276,  1032,
  1033,  1034,  1035,  1036,    69,    70,   825,   148,   937,   828,
  1186,  1178,   297,    83,   279,   503,   504,   332,    72,   507,
   508,   832,   846,   283,   833,   847,   372,   373,   372,   373,
   286,    97,   829,   830,   834,   278,   427,  1332,   287,   246,
   284,   622,   372,   373,   288,   831,   835,  1219,    83,   837,
  1071,    99,   836,   841,   315,  1002,   228,  -147,  -147,  1352,
    87,   247,   646,   289,   849,   820,  1015,   179,   251,   180,
   181,   182,   290,   183,   271,   823,   272,  1091,   364,    30,
   202,  1016,   203,  1017,   291,  1009,  1013,   836,   674,   828,
  1020,   292,   184,   512,   512,   512,   512,   512,   512,   512,
   722,    47,    48,   723,    50,    51,    52,   273,  1122,  1123,
  1040,    99,  1023,  1041,   204,   938,   205,    99,    99,    99,
   293,    99,    99,  1103,    87,  1234,   407,   304,   408,    99,
    99,    99,    99,   939,   305,   319,  1003,   318,   994,  1433,
  1104,   807,  1157,  1145,   807,   588,  1148,   820,-32768,   590,
   588,  1149,   407,   622,   408,   250,   590,  1153,   523,  1154,
   203,  1155,   823,  1156,   828,  1009,  1013,   338,  1018,  1158,
  1334,  1021,  1160,   648,  1335,   836,  1339,  1162,  1340,   649,
   836,   588,   179,  1189,   180,   181,   182,   656,   183,   590,
  1061,  1294,   648,  1024,  1147,   179,  1368,   180,   181,   182,
   228,   183,   247,  1373,  1021,  1182,  1379,   184,    83,   332,
  1380,   836,  1185,   271,   195,   272,   332,   355,    30,   228,
   184,  1024,  1408,  1024,   335,   332,  1299,  1337,  1338,   356,
  1300,  1304,  1342,  1343,  1344,  1345,   763,  1305,  1196,   967,
    47,    48,   968,    50,    51,    52,   273,   499,  1188,   360,
   366,   820,  1158,  1160,  1111,   823,  1336,   820,  1365,   823,
   332,  1341,  1347,   945,   850,   724,  1163,   524,   773,   205,
  1348,  1378,    99,  1164,   361,  1382,  1383,  1024,   453,   510,
   510,   510,   307,   308,  1024,  1165,   246,   820,  1166,    22,
    87,   823,  1381,   335,   716,   523,   969,   669,  1236,  1235,
   362,  1040,   858,  1024,  1043,   859,  1160,   860,  1237,   621,
  1238,   202,  1254,   669,  1167,   372,   373,   300,  1287,   335,
     3,   301,   302,   303,   987,   990,  1245,  1290,    99,   496,
   371,   497,   407,   561,   408,   332,   443,     4,     5,     6,
     7,   335,   441,   372,   373,   372,   373,    83,  1331,     8,
    87,   917,   372,   373,   447,   425,   448,   228,   251,   832,
     9,    87,  1065,    10,   372,   373,   861,   372,   373,   407,
   832,   408,   427,  1301,  1458,  1459,   460,  1461,  1462,  1322,
   148,   407,  1323,   408,   533,  1469,   372,   373,  1472,  1473,
  1474,    72,  1291,   372,   373,    87,   604,   372,   373,   472,
  1480,   372,   373,   182,   648,   183,  1302,  1303,   278,   228,
   489,  1307,  1308,  1309,  1310,    97,   509,   712,   396,   397,
  1217,   488,   372,   373,   184,  1058,  1359,   648,   -76,  1360,
   335,   228,   604,   493,   332,   502,    62,    63,    64,    65,
    66,    67,   427,  1324,  1333,   332,   505,    11,    12,    13,
   427,    14,    15,    16,    17,    18,   713,  1346,    19,    20,
   499,  1350,  1351,   832,  1059,   624,  1306,   403,   404,   380,
   381,   382,   383,   500,   943,   372,   373,   294,  1201,    97,
  1241,   300,   295,   375,  1009,   301,   302,   303,   -76,  1009,
  1361,  1248,   -76,   -76,   -76,   506,   294,  1204,    72,   375,
   335,   295,   295,   378,   379,   380,   381,   382,   383,   -70,
   832,   372,   373,  1349,   575,   278,   193,  1160,   533,   301,
   302,   303,  1160,   525,   332,  1241,   294,  1206,   585,  1009,
   300,   295,  1250,   605,   301,   302,   303,   335,   496,   587,
   497,  1396,   376,   377,   372,   373,   409,   410,   335,   375,
   384,   385,   498,   107,   386,   387,   388,  1160,   376,   377,
   378,   379,   380,   381,   382,   383,   384,   385,   592,   -70,
   386,   387,   388,   -70,   -70,   -70,   512,   512,   512,   676,
   997,   998,   603,   310,   184,  1449,  1450,   335,  1452,  1453,
   215,   762,   650,   316,   770,   651,   407,  1460,   408,   285,
  1463,  1464,  1465,   771,   253,   107,   772,   654,   376,   377,
   261,   533,  1475,   652,   774,   332,   384,   385,   372,   373,
   386,   387,   388,   281,   107,   775,   666,   332,  1293,   653,
   332,   335,   294,  1269,   299,   657,   300,   295,   658,   897,
   301,   302,   303,   299,   494,    97,  1183,   667,   366,   672,
   673,   300,   697,   726,   300,   301,   302,   303,   301,   302,
   303,   731,   727,   300,  1275,   732,   300,   301,   302,   303,
   301,   302,   303,   336,   300,   730,   736,   300,   301,   302,
   303,   301,   302,   303,  1216,   300,   737,   739,   300,   301,
   302,   303,   301,   302,   303,   740,   300,   152,   743,   367,
   301,   302,   303,   300,   744,    97,   745,   301,   302,   303,
   995,   746,    99,   180,   181,   182,    97,   183,   995,   747,
   996,   300,   750,   624,   748,   301,   302,   303,  1142,   997,
   998,   749,   332,   751,   757,   332,   184,   997,   998,   300,
   755,   332,   336,   301,   302,   303,   294,  1271,   769,   624,
    97,   295,   778,   299,   299,   299,   299,   107,   418,   419,
   420,   421,   424,    30,   426,   780,   783,   429,   253,   303,
   790,   796,   335,   107,   814,   791,    99,   465,   468,   335,
   838,   471,   816,   839,    46,    47,   335,    49,    50,    51,
   253,   484,   403,   404,   380,   381,   382,   383,   842,   843,
   372,   373,   332,   378,   379,   380,   381,   382,   383,   107,
   107,   372,   373,   107,   107,   514,   514,   514,   514,   514,
   514,   514,   851,   844,   845,   852,   862,   526,   336,   863,
   335,   490,   408,   534,   107,   193,   491,   874,   538,   107,
   107,   107,   883,   107,   107,   886,   898,   299,   899,   904,
   916,   107,   107,   107,   107,   919,   940,   942,   947,   497,
   950,   567,   951,   570,   572,   574,   954,   578,   581,   955,
   963,   962,   964,   971,   972,   965,   966,   979,   554,   336,
   999,  1008,  1010,  1012,  1014,  1028,  1029,  1030,  1031,  1037,
  1038,  1039,  1044,   194,  1045,  1046,  1397,  1047,  1048,  1049,
  1063,  1067,  1068,  1075,  1069,   335,  1079,  1080,   694,  1076,
  1077,  1078,  1084,  1086,   625,  1081,  1082,  1113,  1094,  1105,
  1116,  1114,   627,   245,  1115,  1117,   656,  1118,  1119,  1120,
  1121,  1124,  1125,  1126,   764,  1131,  1150,  1152,  1127,  1137,
  1159,  1161,    99,  1168,  1128,  1169,  1170,  1174,  1184,   336,
  1173,  1198,  1202,   656,  1205,  1207,  1171,  1214,  1213,  1228,
  1218,  1215,  1229,  1221,  1239,  1240,  1224,   534,  1243,   997,
  1249,  1251,  1252,   426,  1226,  1280,  1355,  1260,   665,  1261,
  1265,  1266,  1267,  1268,  1272,  1273,   253,   299,  1274,  1278,
   194,  1277,  1201,  1279,   107,  1204,  1206,   336,  1284,  1269,
   281,  1295,    99,  1288,   335,  1298,  1317,  1282,  1311,  1315,
  1316,   698,  1318,    99,   701,   335,  1325,   706,  1271,  1329,
   711,  1358,  1364,  1353,  1412,  1369,  1370,  1384,  1374,  1375,
  1376,  1354,  1356,   725,  1377,  1385,   336,  1386,  1388,  1389,
  1393,  1398,  1399,  1400,  1357,  1405,  1402,    99,  1387,  1390,
   107,  1403,  1409,  1410,  1411,  1391,  1414,  1417,  1418,  1419,
   625,   194,   194,  1392,   311,  1439,  1424,  1413,  1425,  1426,
  1420,   194,  1427,  1428,   299,   299,   754,  1429,  1430,  1431,
   253,  1415,  1438,  1441,  1416,  1440,  1444,  1445,  1442,  1443,
   194,  1446,  1434,   450,   335,  1447,  1451,   367,  1435,  1457,
  1454,  1455,  1456,  1483,   194,   299,  1466,  1484,  1467,   245,
  1468,   194,  1436,  1437,  1448,  1470,  1471,  1476,  1477,  1478,
  1479,  1481,   813,  1423,   985,  1276,   914,  1004,  1062,   948,
  1085,     0,     0,     0,     0,     0,     0,   562,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   194,     0,     0,   450,     0,     0,     0,     0,     0,
     0,     0,   625,     0,     0,     0,     0,     0,     0,   450,
     0,   450,     0,     0,     0,   335,     0,     0,   194,     0,
     0,     0,     0,     0,   114,     0,     0,   335,   534,     0,
   335,     0,     0,     0,   871,     0,   426,     0,   872,   873,
     0,     0,   426,   876,   878,   881,     0,     0,   885,     0,
   299,   253,   299,     0,     0,     0,     0,     0,   336,     0,
     0,     0,     0,     0,     0,   336,     0,     0,     0,     0,
     0,     0,     0,     0,   336,   255,   114,     0,     0,     0,
   921,     0,     0,     0,     0,   925,     0,     0,     0,     0,
   928,     0,     0,     0,     0,   114,     0,     0,   194,     0,
     0,     0,     0,     0,     0,     0,     0,   194,   194,   336,
     0,     0,   946,     0,     0,     0,     0,     0,     0,     0,
     0,   953,     0,     0,     0,   957,     0,     0,   514,   514,
   514,     0,   335,   961,     0,   335,     0,     0,     0,     0,
     0,   335,     0,     0,   337,   970,   450,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   464,   467,     0,     0,
   470,     0,     0,     0,   458,     0,     0,     0,     0,     0,
   368,     0,     0,   988,   991,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   336,   194,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   194,   194,     0,     0,
     0,     0,   335,   196,     0,   515,   515,   515,   515,   515,
   515,   515,     0,   337,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   114,   245,
     0,     0,     0,   196,     0,   458,     0,     0,     0,   255,
     0,     0,     0,     0,   114,   459,     0,     0,     0,     0,
   458,     0,   458,     0,     0,   450,  1050,     0,  1053,     0,
  1057,   255,     0,     0,   107,     0,     0,     0,   299,     0,
     0,     0,     0,   299,     0,     0,     0,     0,     0,   615,
   114,   114,   194,   336,   114,   114,   516,   516,   516,   516,
   516,   516,   516,     0,   336,     0,     0,     0,     0,     0,
   196,     0,     0,     0,   535,   114,     0,     0,     0,   539,
   114,   114,   114,     0,   114,   114,   459,     0,     0,     0,
     0,     0,   114,   114,   114,   114,     0,     0,   107,     0,
     0,   459,     0,   459,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   635,   638,     0,     0,     0,     0,
   337,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   196,   196,   336,     0,     0,     0,   450,     0,     0,
     0,   196,     0,     0,     0,   626,     0,   682,   687,   691,
     0,     0,     0,   700,   450,   703,   705,     0,   708,   710,
   196,   714,     0,   196,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   196,     0,     0,     0,     0,   196,
   337,   196,     0,     0,     0,     0,  1172,     0,   194,     0,
     0,     0,     0,     0,   628,     0,     0,     0,   535,   450,
     0,     0,     0,   450,     0,   299,     0,     0,   107,     0,
     0,     0,     0,     0,     0,     0,     0,   255,     0,     0,
     0,     0,     0,     0,   336,   114,     0,     0,   683,     0,
     0,   196,     0,     0,   196,     0,   336,   450,   450,   336,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   196,
     0,   196,    98,     0,   107,     0,   788,     0,   196,     0,
     0,     0,     0,     0,     0,     0,     0,   337,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   114,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   626,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   248,    98,     0,     0,     0,     0,     0,
     0,   255,     0,     0,   107,     0,     0,     0,     0,     0,
     0,     0,   280,    98,     0,   107,     0,     0,   368,     0,
     0,     0,     0,     0,     0,     0,     0,   459,   196,     0,
     0,   336,     0,     0,   336,     0,     0,   196,   196,     0,
   336,   869,     0,     0,   880,   882,     0,     0,     0,   107,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   333,     0,     0,     0,     0,     0,   682,     0,
     0,     0,     0,     0,     0,     0,   196,     0,     0,   920,
     0,   922,   923,     0,   924,   458,   926,   927,   365,     0,
     0,   930,   932,   626,     0,     0,     0,     0,   818,     0,
   818,   336,     0,   818,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   196,     0,     0,     0,   535,
     0,     0,     0,     0,     0,     0,   196,   196,     0,     0,
   458,   333,     0,     0,   458,     0,     0,     0,   515,   515,
   515,     0,   255,     0,     0,     0,    98,     0,     0,   683,
     0,     0,     0,     0,     0,     0,   337,   248,     0,   196,
     0,     0,    98,     0,     0,     0,   459,     0,   458,   458,
     0,     0,     0,     0,   981,     0,     0,     0,     0,   248,
   280,     0,     0,     0,     0,   196,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    98,    98,
   337,     0,    98,    98,   511,   511,   511,   511,   511,   511,
   511,   459,   196,     0,     0,   459,     0,   333,   194,   516,
   516,   516,   532,    98,     0,     0,     0,   365,    98,    98,
    98,     0,    98,    98,     0,     0,     0,     0,     0,     0,
    98,    98,    98,    98,     0,     0,     0,     0,     0,   459,
   459,     0,     0,     0,     0,     0,  1052,     0,  1055,  1056,
     0,  1060,     0,     0,     0,     0,     0,     0,   333,     0,
     0,     0,     0,     0,     0,   337,     0,     0,     0,     0,
     0,     0,   450,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,  1073,     0,     0,     0,     0,
     0,  1087,     0,   623,     0,  1088,     0,   196,  1089,  1090,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   196,     0,     0,     0,     0,   818,
     0,     0,   818,     0,   818,     0,     0,   818,   333,     0,
     0,     0,     0,     0,   818,     0,   818,     0,   818,   818,
   818,     0,     0,     0,     0,   114,   532,     0,   196,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   196,
     0,     0,     0,   196,   337,   248,     0,     0,     0,     0,
     0,     0,     0,    98,     0,   337,   333,     0,     0,   280,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   196,   196,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   114,
     0,     0,   280,     0,     0,   333,     0,     0,     0,     0,
     0,  1175,     0,  1176,  1177,     0,     0,  1179,  1181,    98,
     0,     0,     0,     0,     0,   818,   818,   818,     0,   623,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   337,     0,     0,     0,     0,   248,
     0,     0,     0,  1197,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   365,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   818,     0,  1151,     0,     0,     0,   818,     0,
   818,     0,   818,   458,   818,   818,   818,   818,     0,     0,
   818,     0,     0,   818,     0,     0,     0,     0,   818,   114,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   337,     0,     0,  1244,     0,
     0,   623,     0,     0,     0,     0,     0,   337,     0,     0,
   337,     0,     0,     0,     0,  1253,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   114,     0,   532,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   459,     0,     0,     0,     0,     0,
   248,     0,     0,   818,   818,     0,     0,   333,     0,     0,
     0,     0,     0,  1286,   333,     0,     0,  1292,     0,     0,
     0,     0,  1296,   333,  1297,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   114,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   114,     0,     0,     0,
   818,     0,     0,     0,     0,     0,     0,   818,   333,   818,
  1330,   818,   337,     0,     0,   337,     0,     0,     0,     0,
     0,   337,     0,     0,     0,     0,     0,   511,   511,   511,
   114,     0,     0,     0,     0,     0,     0,     0,   196,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,  1362,
     0,  1363,     0,     0,   974,     0,   120,     0,   186,     0,
     0,     0,     0,   187,     0,     0,     0,     0,    28,    29,
     0,    31,    32,    33,    34,   188,     0,   189,   190,     0,
     0,     0,   337,   333,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   446,     0,
     0,   447,   196,   448,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    98,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
   449,     0,   333,   150,   818,   818,   192,     0,     0,   818,
   818,     0,     0,   333,     0,   151,     0,   975,   193,     0,
   152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
  1070,     0,   120,     0,     0,     0,     0,     0,   818,   121,
     0,     0,     0,   818,     0,     0,     0,    98,     0,   818,
   818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   684,     0,     0,   447,   818,   448,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   333,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    22,     0,   120,     0,     0,   148,     0,     0,     0,   121,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,     0,     0,    98,     0,     0,
     0,   151,     0,    82,   193,     0,   152,   153,   154,     0,
     0,     0,     0,   333,   122,     0,     0,   443,     0,     0,
     0,     0,     0,     0,     0,   333,     0,     0,   333,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,    98,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,    98,     0,     0,     0,     0,     0,     0,
     0,   151,     0,    82,    98,     0,   152,   153,   154,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   333,     0,     0,   333,     0,     0,     0,     0,     0,   333,
     0,     0,     0,     0,     0,    22,     0,   234,    98,   235,
    25,     0,     0,     0,   121,     0,    26,     0,    27,    28,
    29,    30,    31,    32,    33,    34,   236,    36,   237,   238,
    39,    40,    41,    42,     0,    43,     0,    44,    45,     0,
     0,     0,    46,    47,    48,    49,    50,    51,    52,   239,
     0,     0,    54,     0,     0,     0,    55,     0,     0,     0,
   333,     0,    56,    57,    58,    59,    60,    61,     0,    62,
    63,    64,    65,    66,    67,   123,    68,     0,     0,     0,
     0,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   147,     0,    69,    70,     0,    71,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   149,   240,     0,     0,   150,     0,    73,   241,    74,    75,
    76,    77,    78,    79,    80,    81,   151,     0,    82,     0,
    83,   152,   153,   154,    22,     0,   234,     0,   235,    25,
     0,     0,     0,   121,     0,   474,     0,    27,    28,    29,
    30,    31,    32,    33,    34,   236,    36,   237,   238,    39,
    40,    41,    42,     0,    43,     0,    44,    45,     0,     0,
     0,   475,    47,    48,   476,   433,   477,    52,   239,     0,
     0,    54,     0,     0,     0,    55,     0,     0,     0,     0,
     0,    56,    57,    58,    59,    60,    61,     0,    62,    63,
    64,    65,    66,    67,   123,    68,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,     0,   478,   479,     0,    71,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
   240,     0,     0,   150,     0,    73,   241,    74,    75,    76,
    77,    78,    79,    80,    81,   151,     0,    82,     0,   436,
   152,   153,   154,    22,     0,   234,     0,   235,    25,     0,
     0,     0,   121,     0,    26,     0,    27,    28,    29,    30,
    31,    32,    33,    34,   236,    36,   237,   238,    39,    40,
    41,    42,     0,    43,     0,    44,    45,     0,     0,     0,
   758,    47,    48,   759,    50,   760,    52,   239,     0,     0,
    54,     0,     0,     0,    55,     0,     0,     0,     0,     0,
    56,    57,    58,    59,    60,    61,     0,    62,    63,    64,
    65,    66,    67,   123,    68,     0,     0,     0,     0,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
   145,   146,   147,     0,   761,    70,     0,    71,   977,     0,
   120,     0,     0,     0,     0,     0,     0,   121,   148,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   149,   240,
     0,     0,   150,     0,    73,   241,    74,    75,    76,    77,
    78,    79,    80,    81,   151,     0,    82,     0,    83,   152,
   153,   154,   122,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   151,
   120,    82,   186,     0,   152,   153,   154,   187,     0,   323,
     0,     0,    28,    29,     0,    31,    32,    33,    34,   188,
     0,   189,   190,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   324,     0,     0,   325,   326,
   327,     0,   677,     0,     0,   447,     0,   448,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,     0,   329,
   330,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,   449,     0,     0,   150,     0,     0,
   192,     0,     0,     0,     0,     0,     0,     0,     0,   151,
     0,    82,   193,   331,   152,   153,   154,   120,     0,   186,
     0,     0,     0,     0,   187,     0,   323,     0,     0,    28,
    29,     0,    31,    32,    33,    34,   188,     0,   189,   190,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   595,     0,     0,   596,   326,   597,     0,   677,
     0,     0,   447,     0,   448,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    62,
    63,    64,    65,    66,    67,   123,     0,     0,     0,     0,
     0,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   147,     0,   598,   330,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   149,   449,     0,     0,   150,     0,     0,   192,     0,     0,
     0,     0,     0,     0,     0,     0,   151,     0,    82,   193,
   331,   152,   153,   154,   120,     0,   186,     0,     0,     0,
     0,   187,     0,   323,     0,     0,    28,    29,     0,    31,
    32,    33,    34,   188,     0,   189,   190,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   324,
     0,     0,   325,   326,   327,     0,   398,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,     0,   329,   330,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,   192,     0,     0,     0,     0,     0,
     0,     0,     0,   151,     0,    82,   193,   331,   152,   153,
   154,   120,     0,   186,     0,     0,     0,     0,   187,     0,
   323,     0,     0,    28,    29,     0,    31,    32,    33,    34,
   188,     0,   189,   190,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   595,     0,     0,   596,
   326,   597,     0,   398,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    62,    63,    64,    65,    66,    67,   123,
     0,     0,     0,     0,     0,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
   139,   140,   141,   142,   143,   144,   145,   146,   147,     0,
   598,   330,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   148,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   149,    72,     0,     0,   150,     0,
     0,   192,     0,     0,     0,     0,     0,     0,     0,     0,
   151,     0,    82,   193,   331,   152,   153,   154,   120,     0,
   186,     0,     0,     0,     0,   121,     0,   323,     0,     0,
    28,    29,     0,    31,    32,    33,    34,   188,     0,   189,
   190,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   324,     0,     0,   325,   326,   327,     0,
   728,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,     0,   329,   330,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,   241,     0,
     0,     0,     0,     0,     0,     0,     0,   151,   120,    82,
   186,   331,   152,   153,   154,   121,     0,   323,     0,     0,
    28,    29,     0,    31,    32,    33,    34,   188,     0,   189,
   190,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   595,     0,     0,   596,   326,   597,     0,
   728,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,     0,   598,   330,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
   120,   149,    72,     0,     0,   150,     0,   121,   241,   430,
     0,   272,     0,     0,    30,     0,     0,   151,     0,    82,
     0,   331,   152,   153,   154,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   431,    47,    48,   432,   433,
   434,    52,   435,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,     0,   329,
   330,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,   283,
     0,     0,     0,     0,     0,   120,     0,   186,     0,   151,
     0,    82,   187,   436,   152,   153,   154,    28,    29,     0,
    31,    32,    33,    34,   188,     0,   189,   190,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   446,     0,     0,
   447,     0,   448,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    62,    63,    64,
    65,    66,    67,   123,     0,     0,     0,     0,     0,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
   145,   146,   147,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   148,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   149,   449,
     0,     0,   150,     0,     0,   192,     0,     0,     0,     0,
     0,   120,     0,   186,   151,     0,    82,   193,   187,   152,
   153,   154,     0,    28,    29,     0,    31,    32,    33,    34,
   188,     0,   189,   190,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   446,     0,     0,   447,     0,   448,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    62,    63,    64,    65,    66,    67,   123,
     0,     0,     0,     0,     0,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
   139,   140,   141,   142,   143,   144,   145,   146,   147,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   546,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   149,   449,     0,     0,   150,     0,
     0,   192,     0,     0,     0,     0,     0,   120,     0,   186,
   151,     0,   547,   193,   187,   152,   153,   154,     0,    28,
    29,     0,    31,    32,    33,    34,   188,     0,   189,   190,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   191,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    62,
    63,    64,    65,    66,    67,   123,     0,     0,     0,     0,
     0,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   147,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   149,    72,     0,     0,   150,     0,     0,   192,     0,     0,
     0,     0,     0,   120,     0,   186,   151,     0,    82,   193,
   121,   152,   153,   154,     0,    28,    29,     0,    31,    32,
    33,    34,   188,     0,   189,   190,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   485,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    62,    63,    64,    65,    66,
    67,   123,     0,     0,     0,     0,     0,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
   147,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   148,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   149,    72,     0,     0,
   150,     0,     0,   241,     0,     0,     0,     0,   120,     0,
   186,     0,   151,     0,    82,   121,     0,   152,   153,   154,
    28,    29,     0,    31,    32,    33,    34,   188,     0,   189,
   190,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   122,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   120,     0,     0,     0,
     0,     0,     0,   121,     0,   606,     0,     0,     0,     0,
    30,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,   582,     0,
     0,   607,    47,     0,   608,    50,   609,   151,   122,    82,
     0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,     0,   610,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   120,   148,
     0,     0,     0,     0,     0,   121,     0,   323,     0,   149,
    72,     0,     0,   150,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   151,     0,    82,   193,   611,
   152,   153,   154,   324,     0,     0,   325,   326,   327,     0,
   902,     0,     0,   447,     0,   448,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,     0,   329,   330,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   120,   148,     0,     0,     0,     0,     0,   121,     0,   323,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   151,     0,    82,
     0,   331,   152,   153,   154,   595,     0,     0,   596,   326,
   597,     0,   902,     0,     0,   447,     0,   448,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   120,   598,
   330,     0,     0,     0,     0,   121,     0,   323,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,   595,     0,     0,   596,   326,   597,   151,
   670,    82,     0,   331,   152,   153,   154,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   120,   598,   330,     0,
     0,     0,     0,   121,     0,   323,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,   240,     0,     0,   150,     0,   283,     0,     0,
     0,   888,     0,     0,   889,   326,   890,   151,   670,    82,
     0,   331,   152,   153,   154,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,   120,   891,   330,     0,     0,     0,
     0,   121,     0,   323,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
    72,     0,     0,   150,     0,   283,     0,     0,     0,   324,
     0,     0,   325,   326,   327,   151,   328,    82,     0,   331,
   152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   120,   329,   330,     0,     0,     0,     0,   121,
     0,   323,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,     0,     0,     0,   595,     0,     0,
   596,   326,   597,   151,   328,    82,     0,   331,   152,   153,
   154,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
   120,   598,   330,     0,     0,     0,     0,   121,     0,   323,
     0,     0,     0,     0,     0,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,   324,     0,     0,   325,   326,
   327,   151,   992,    82,     0,   331,   152,   153,   154,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   120,   329,
   330,     0,     0,     0,     0,   121,     0,   323,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,   595,     0,     0,   596,   326,   597,   151,
  1083,    82,     0,   331,   152,   153,   154,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   120,   598,   330,     0,
     0,     0,     0,   121,     0,   323,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,   595,     0,     0,   596,   326,   597,   151,   992,    82,
     0,   331,   152,   153,   154,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,   120,   598,   330,     0,     0,     0,
     0,   121,     0,   323,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
    72,     0,     0,   150,     0,     0,     0,     0,     0,   888,
     0,     0,   889,   326,   890,   151,   328,    82,     0,   331,
   152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   120,   891,   330,     0,     0,     0,     0,   121,
     0,   323,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,     0,     0,     0,   324,     0,     0,
   325,   326,   327,   151,  1200,    82,     0,   331,   152,   153,
   154,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
   120,   329,   330,     0,     0,     0,     0,   121,     0,   323,
     0,     0,     0,     0,     0,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,   324,     0,     0,   325,   326,
   327,   151,  1203,    82,     0,   331,   152,   153,   154,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   120,   329,
   330,     0,     0,     0,     0,   121,     0,   323,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,  1257,     0,     0,  1258,   326,   597,   151,
   328,    82,     0,   331,   152,   153,   154,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   120,  1259,   330,     0,
     0,     0,     0,   121,     0,   323,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,  1262,     0,     0,  1263,   326,   597,   151,   328,    82,
     0,   331,   152,   153,   154,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,   120,  1264,   330,     0,     0,     0,
     0,   121,     0,   323,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
    72,     0,     0,   150,     0,     0,     0,     0,     0,   324,
     0,     0,   325,   326,   327,   151,  1270,    82,     0,   331,
   152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   120,   329,   330,     0,     0,     0,     0,   121,
     0,   323,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,     0,     0,     0,  1312,     0,     0,
  1313,   326,   597,   151,   328,    82,     0,   331,   152,   153,
   154,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
   120,  1314,   330,     0,     0,     0,     0,   121,     0,     0,
     0,     0,     0,     0,    30,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,    46,    47,     0,    49,    50,
    51,   151,   328,    82,     0,   331,   152,   153,   154,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   120,   225,
     0,     0,     0,     0,     0,   121,     0,     0,     0,     0,
     0,     0,    30,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,    46,    47,     0,    49,    50,    51,   151,
   913,    82,     0,     0,   152,   153,   154,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,     0,   225,     0,     0,
     0,     0,     0,   120,     0,     0,     0,     0,     0,     0,
   121,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   151,     0,    82,
     0,     0,   152,   153,   154,   684,     0,     0,   447,     0,
   448,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    62,    63,    64,    65,    66,
    67,   123,     0,     0,     0,     0,     0,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
   147,     0,     0,     0,     0,     0,     0,     0,   120,     0,
     0,     0,     0,     0,     0,   121,   148,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   149,    72,     0,     0,
   150,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   151,     0,    82,   193,     0,   152,   153,   154,
   803,   804,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   120,     0,     0,     0,
     0,     0,     0,   121,     0,     0,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   151,   122,    82,
     0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
  1144,     0,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,   120,     0,     0,     0,     0,     0,
     0,   121,     0,     0,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
    72,     0,     0,   150,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   151,   122,    82,     0,     0,
   152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   120,     0,     0,     0,     0,     0,     0,   121,
     0,     0,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   151,   217,    82,     0,     0,   152,   153,
   154,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
   120,     0,     0,     0,     0,     0,     0,   121,     0,     0,
     0,     0,     0,     0,     0,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   151,   803,    82,     0,     0,   152,   153,   154,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    22,   151,
    23,    82,    24,    25,   152,   153,   154,     0,     0,    26,
     0,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,    41,    42,     0,    43,     0,
    44,    45,     0,     0,     0,    46,    47,    48,    49,    50,
    51,    52,   529,     0,     0,    54,     0,     0,     0,    55,
     0,     0,     0,     0,     0,    56,    57,    58,    59,    60,
    61,     0,    62,    63,    64,    65,    66,    67,     0,    68,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    69,
    70,     0,    71,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    72,     0,     0,     0,     0,    73,
     0,    74,    75,    76,    77,    78,    79,    80,    81,     0,
    22,    82,    23,    83,    24,    25,     0,     0,     0,     0,
     0,    26,     0,    27,    28,    29,    30,    31,    32,    33,
    34,    35,    36,    37,    38,    39,    40,    41,    42,     0,
    43,     0,    44,    45,     0,     0,     0,    46,    47,    48,
    49,    50,    51,    52,    53,     0,     0,    54,   -95,     0,
     0,    55,     0,     0,     0,     0,     0,    56,    57,    58,
    59,    60,    61,     0,    62,    63,    64,    65,    66,    67,
     0,    68,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    69,    70,     0,    71,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    72,     0,     0,     0,
     0,    73,     0,    74,    75,    76,    77,    78,    79,    80,
    81,     0,    22,    82,    23,    83,    24,    25,     0,     0,
     0,     0,     0,    26,     0,    27,    28,    29,    30,    31,
    32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
    42,     0,    43,     0,    44,    45,     0,     0,     0,    46,
    47,    48,    49,    50,    51,    52,    53,     0,     0,    54,
     0,     0,     0,    55,     0,     0,     0,     0,     0,    56,
    57,    58,    59,    60,    61,     0,    62,    63,    64,    65,
    66,    67,     0,    68,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   121,     0,     0,     0,     0,     0,
     0,     0,     0,    69,    70,     0,    71,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    72,   122,
     0,     0,     0,    73,     0,    74,    75,    76,    77,    78,
    79,    80,    81,     0,     0,    82,     0,    83,     0,    62,
    63,    64,    65,    66,    67,   123,     0,     0,     0,     0,
     0,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   147,   121,     0,     0,  1005,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   149,    72,     0,     0,   150,     0,     0,     0,     0,     0,
  1095,     0,     0,     0,     0,     0,   151,     0,    82,     0,
     0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   121,     0,     0,  1005,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,  1098,     0,     0,     0,     0,     0,   151,     0,  1096,
     0,     0,  1097,   153,   154,     0,     0,     0,     0,     0,
     0,    62,    63,    64,    65,    66,    67,   123,     0,     0,
     0,     0,     0,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
   141,   142,   143,   144,   145,   146,   147,   121,     0,     0,
  1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   148,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   149,    72,     0,     0,   150,     0,     0,     0,
     0,     0,   122,     0,     0,     0,     0,     0,   151,     0,
  1099,     0,     0,  1100,   153,   154,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   121,     0,
     0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,   122,     0,     0,     0,     0,     0,   151,
     0,  1101,     0,     0,  1102,   153,   154,     0,     0,     0,
     0,     0,     0,    62,    63,    64,    65,    66,    67,   123,
     0,     0,     0,     0,     0,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
   139,   140,   141,   142,   143,   144,   145,   146,   147,   121,
     0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   148,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   149,    72,     0,     0,   150,     0,
     0,     0,     0,     0,   122,     0,     0,     0,     0,     0,
   151,     0,  1096,     0,     0,   152,   153,   154,     0,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
   121,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,   122,     0,     0,     0,     0,
     0,   151,     0,  1099,     0,     0,   152,   153,   154,     0,
     0,     0,     0,     0,     0,    62,    63,    64,    65,    66,
    67,   123,     0,     0,     0,     0,     0,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
   147,   121,     0,     0,  1005,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   148,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   149,    72,     0,     0,
   150,     0,     0,     0,     0,     0,   122,     0,     0,     0,
     0,     0,   151,     0,  1101,     0,     0,   152,   153,   154,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   121,     0,     0,  1005,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,     0,     0,     0,  1209,     0,     0,
     0,     0,     0,   151,     0,  1208,     0,     0,   152,   153,
   154,     0,     0,     0,     0,     0,     0,    62,    63,    64,
    65,    66,    67,   123,     0,     0,     0,     0,     0,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
   145,   146,   147,   121,     0,     0,  1005,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   148,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   149,    72,
     0,     0,   150,     0,     0,     0,     0,     0,   122,     0,
     0,     0,     0,     0,   151,     0,  1210,     0,     0,  1211,
   153,   154,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,   121,     0,     0,  1005,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
    72,     0,     0,   150,     0,     0,     0,     0,     0,   122,
     0,     0,     0,     0,     0,   151,     0,  1210,     0,     0,
   152,   153,   154,     0,     0,     0,     0,     0,     0,    62,
    63,    64,    65,    66,    67,   123,     0,     0,     0,     0,
     0,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   147,   121,     0,     0,  1005,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   149,    72,     0,     0,   150,     0,     0,     0,     0,     0,
   122,     0,     0,     0,     0,     0,   151,     0,  1096,     0,
     0,  1366,   153,   154,     0,     0,     0,     0,     0,     0,
    62,    63,    64,    65,    66,    67,   123,     0,     0,     0,
     0,     0,   124,   125,   126,   127,   128,   129,   130,   131,
   132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
   142,   143,   144,   145,   146,   147,   121,     0,     0,  1005,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   148,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   149,    72,     0,     0,   150,     0,     0,     0,     0,
     0,   122,     0,     0,     0,     0,     0,   151,     0,  1099,
     0,     0,  1367,   153,   154,     0,     0,     0,     0,     0,
     0,    62,    63,    64,    65,    66,    67,   123,     0,     0,
     0,     0,     0,   124,   125,   126,   127,   128,   129,   130,
   131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
   141,   142,   143,   144,   145,   146,   147,   121,     0,     0,
  1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   148,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   149,    72,     0,     0,   150,     0,     0,     0,
     0,     0,   122,     0,     0,     0,     0,     0,   151,     0,
  1096,     0,     0,  1371,   153,   154,     0,     0,     0,     0,
     0,     0,    62,    63,    64,    65,    66,    67,   123,     0,
     0,     0,     0,     0,   124,   125,   126,   127,   128,   129,
   130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
   140,   141,   142,   143,   144,   145,   146,   147,   121,     0,
     0,  1005,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   148,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   149,    72,     0,     0,   150,     0,     0,
     0,     0,     0,   122,     0,     0,     0,     0,     0,   151,
     0,  1099,     0,     0,  1372,   153,   154,     0,     0,     0,
     0,     0,     0,    62,    63,    64,    65,    66,    67,   123,
     0,     0,     0,     0,     0,   124,   125,   126,   127,   128,
   129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
   139,   140,   141,   142,   143,   144,   145,   146,   147,   121,
     0,     0,  1005,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   148,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   149,    72,     0,     0,   150,     0,
     0,     0,     0,     0,   122,     0,     0,     0,     0,     0,
   151,     0,  1210,     0,     0,  1401,   153,   154,     0,     0,
     0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
   123,     0,     0,     0,     0,     0,   124,   125,   126,   127,
   128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
   121,     0,     0,  1005,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   148,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   149,    72,     0,     0,   150,
     0,     0,     0,     0,     0,   122,     0,     0,     0,     0,
     0,   151,     0,  1210,     0,     0,  1404,   153,   154,     0,
     0,     0,     0,     0,     0,    62,    63,    64,    65,    66,
    67,   123,     0,     0,     0,     0,     0,   124,   125,   126,
   127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
   147,   121,     0,     0,  1005,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   148,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   149,    72,     0,     0,
   150,     0,     0,     0,     0,     0,   122,     0,     0,     0,
     0,     0,   151,     0,  1096,     0,     0,  1406,   153,   154,
     0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
    66,    67,   123,     0,     0,     0,     0,     0,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   121,     0,     0,  1005,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   148,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   149,    72,     0,
     0,   150,     0,     0,     0,     0,     0,   122,     0,     0,
     0,     0,     0,   151,     0,  1099,     0,     0,  1407,   153,
   154,     0,     0,     0,     0,     0,     0,    62,    63,    64,
    65,    66,    67,   123,     0,     0,     0,     0,     0,   124,
   125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
   135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
   145,   146,   147,   121,     0,     0,  1005,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   148,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   149,    72,
     0,     0,   150,     0,     0,     0,     0,     0,   122,     0,
     0,     0,     0,     0,   151,     0,  1210,     0,     0,  1432,
   153,   154,     0,     0,     0,     0,     0,     0,    62,    63,
    64,    65,    66,    67,   123,     0,     0,     0,     0,     0,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
   144,   145,   146,   147,   121,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   148,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   149,
    72,     0,     0,   150,     0,     0,     0,     0,     0,   122,
     0,     0,     0,     0,     0,   151,     0,    82,     0,     0,
   152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   123,     0,     0,     0,     0,
     0,   124,   125,   126,   127,   128,   129,   130,   131,   132,
   133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
   143,   144,   145,   146,   147,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   149,    72,     0,     0,   150,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   151,     0,    82,     0,
     0,   152,   153,   154
};

static const short yycheck[] = {    13,
   217,   311,    48,   221,   159,    53,   305,   425,   277,    23,
   538,    69,    70,    13,   446,   447,   448,   976,     8,     2,
   403,   404,    83,   575,   149,   150,     1,    41,   239,    36,
   241,    92,    10,    45,     1,   787,   788,     1,    45,    53,
    10,   144,     1,    23,     9,    10,    11,    12,    47,    14,
    15,    16,    17,    18,    19,     1,    53,    36,    46,    45,
   223,     4,    46,    45,   447,   448,    45,   144,    50,   338,
    53,    54,   265,   266,   267,   268,   269,   270,    45,    45,
   588,    45,   590,   112,   502,   593,    45,   505,   686,   687,
   688,   689,   690,   691,   692,    36,    49,    45,    38,    45,
    45,    41,   131,    43,    45,    45,   120,    36,    45,    45,
   124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
   134,   135,   136,   137,   138,   139,   125,   126,   142,   143,
   144,   115,   144,     9,    36,   147,    45,   144,    45,   127,
   120,   202,   203,   204,   205,    36,   309,    45,   127,     2,
   567,    45,   569,   570,   571,   572,   573,   574,   427,   217,
   577,   578,   102,   580,   581,   144,    13,   145,   127,   144,
   116,   149,  1131,    13,    45,   145,    45,   191,   192,   149,
   144,   127,   125,   126,   113,   144,   127,   201,   406,    45,
    13,   239,    48,    13,    50,   192,   144,    38,   144,   147,
    41,    54,     0,   144,   144,    45,   220,   144,   144,   223,
   147,   191,   192,   115,   179,   180,   181,   182,   183,    36,
   234,   201,    45,    46,   115,   239,    46,   241,   980,   981,
   106,   277,   108,   109,   110,   144,   112,   144,    36,   222,
   220,    36,   239,    13,   241,   677,   144,    48,    46,    36,
    45,    49,   684,    51,   234,   131,   239,    46,    45,    36,
   107,   102,    36,   277,   389,   697,    36,   107,    45,    36,
    36,    13,   286,   144,   485,   144,    46,   291,    45,    45,
   294,   295,    36,   446,   107,   496,   497,   107,    51,   145,
   113,   114,   338,   113,   114,   309,    11,   311,     1,   282,
   117,   118,    46,    45,   318,   288,   289,   290,   106,   292,
   293,   291,   110,   111,   112,    45,     9,   300,   301,   302,
   303,   318,    36,    35,   338,  1284,   834,    11,   836,    46,
   838,   839,   127,   316,   317,    50,    13,   107,   127,   113,
   127,   355,   356,    36,    36,    48,   360,   361,   362,   144,
   127,   783,    36,    46,    45,   320,    49,   144,    50,    50,
   127,   127,   125,   126,     1,   107,   110,   144,   112,   222,
    45,   125,   126,    36,     2,   436,   390,   144,   144,   425,
    17,   427,   396,   397,   398,  1137,   116,    50,    36,    36,
    13,   405,   555,   407,   408,   409,   410,   127,   110,    46,
   112,    38,    39,    51,    41,    42,    43,    13,    45,    13,
   127,   125,   126,   106,   144,   108,   109,   110,   398,   112,
   478,   479,    36,    46,   693,    53,    54,   407,   408,   282,
   107,   144,   446,   447,   448,   288,   289,   290,   131,   292,
   293,   969,   970,   995,    72,    73,   998,   300,   301,   302,
   303,    46,   127,    45,    45,   673,   502,   132,   472,   505,
   443,    45,   523,   524,    13,   102,   446,   777,    45,   144,
   902,   485,   904,  1071,  1072,  1073,  1074,   125,   126,    11,
   715,   529,   496,   497,   107,   917,    46,    45,   485,    45,
   113,   114,   791,   554,   122,    45,    45,    46,   716,   496,
   497,   107,    35,   107,    36,    45,   506,   144,    45,   146,
    46,   125,   126,   561,   677,   529,   499,   728,   736,    45,
   148,   904,   117,   118,   942,   116,    11,    38,   945,   946,
    41,   694,   529,  1285,  1286,   127,   127,    38,    46,   553,
    41,   555,    43,   127,    45,    45,   529,    45,   132,   784,
   127,    36,   144,   144,   747,   748,   749,    45,   107,    13,
   144,   575,    50,   191,   144,   125,   126,   144,   582,   127,
   987,   988,   586,   990,   991,    45,   739,   110,   206,   112,
   743,    17,    36,   211,    45,   582,   144,   127,    46,   217,
   443,   127,    46,    12,   222,    14,    45,    46,    17,    45,
    46,   102,    38,    39,   144,    41,    42,    43,   669,    45,
   144,   239,   240,    46,    45,   778,   116,   125,   126,    38,
    39,    40,    41,    42,    43,    44,    45,   127,    36,    45,
   258,   259,   132,    45,   262,   263,   264,   265,   266,   267,
   268,   269,   270,   144,   144,   863,   499,   693,    38,   277,
    53,    41,   652,   107,   282,   283,    45,    46,   672,   287,
   288,   289,   290,   677,   292,   293,   102,    11,  1086,   127,
    73,     2,   300,   301,   302,   303,    45,    46,   127,   693,
   694,   127,   310,    45,   312,   313,   314,  1105,   316,   317,
    46,    45,    36,    46,   127,   144,   127,   677,   144,   713,
   328,    13,   716,   761,    13,    45,   941,    13,   144,   944,
   146,   127,   726,   144,   728,    45,   730,   125,   126,    12,
    45,    14,    53,    54,    17,   739,    45,   146,   144,   743,
    38,   728,   950,    41,    46,   363,    46,    46,   127,   894,
    46,    11,    36,   978,    45,    38,    39,    40,    41,    42,
    43,    44,    45,    45,    12,   144,    14,    51,   127,    17,
   113,   114,    46,   777,   778,    46,    36,   781,    46,    38,
   398,   127,    41,   127,    43,   144,    45,    36,    45,    36,
    38,    39,    40,    41,    42,    43,    44,    45,   416,   803,
   144,    46,    46,    36,   422,   107,   144,   127,   107,   147,
  1232,   107,   127,   206,    46,    46,    45,   435,    46,   792,
   793,   822,    46,   824,   144,   443,   827,   127,   446,   144,
    45,   449,  1132,    46,    46,  1243,   110,    45,   112,   840,
    46,   125,   126,   102,    46,   127,   239,    36,    45,   853,
   854,   855,   856,   857,   102,   103,   127,   116,    46,   127,
  1067,    11,   144,   146,   482,   258,   259,   485,   127,   262,
   263,    38,    38,   132,    41,    41,   125,   126,   125,   126,
    45,   499,   127,   127,    46,   144,    36,  1295,    45,   282,
   283,   509,   125,   126,    45,   127,   127,  1122,   146,   127,
   904,   222,    46,   127,    53,    46,   942,   113,   114,  1317,
   883,   529,    46,    45,   127,   127,    46,   106,   239,   108,
   109,   110,    45,   112,    12,   127,    14,   931,   546,    17,
   144,    46,   146,    46,    45,   936,   937,    46,    46,   127,
    46,    45,   131,   264,   265,   266,   267,   268,   269,   270,
    38,    39,    40,    41,    42,    43,    44,    45,   962,   963,
    38,   282,    46,    41,   144,   127,   146,   288,   289,   290,
    45,   292,   293,    46,   947,    49,   110,    54,   112,   300,
   301,   302,   303,   127,    48,    46,   127,    37,   992,  1411,
    46,   995,    46,   997,   998,    46,  1000,   127,   131,    46,
    46,  1002,   110,   621,   112,    53,    46,  1008,   144,  1010,
   146,  1012,   127,  1014,   127,  1016,  1017,    45,   127,  1020,
    46,   127,  1023,   416,    46,    46,    46,  1028,    46,   647,
    46,    46,   106,  1069,   108,   109,   110,   655,   112,    46,
   883,  1249,   435,   127,   999,   106,    46,   108,   109,   110,
  1086,   112,   670,    46,   127,  1059,    46,   131,   146,   677,
    46,    46,  1066,    12,  1068,    14,   684,    45,    17,  1105,
   131,   127,    46,   127,   122,   693,   127,  1302,  1303,    45,
   127,   127,  1307,  1308,  1309,  1310,    46,   127,  1092,    38,
    39,    40,    41,    42,    43,    44,    45,    36,  1068,    45,
   148,   127,  1103,  1104,   947,   127,   127,   127,  1333,   127,
   728,   127,   127,   731,    46,    46,    46,   144,    46,   146,
   127,  1346,   443,    46,    45,  1350,  1351,   127,  1132,   747,
   748,   749,   113,   114,   127,    46,   529,   127,    46,     1,
  1113,   127,   127,   191,    35,   144,   764,   146,  1152,  1150,
    45,    38,    38,   127,    41,    41,  1157,    43,  1159,    45,
  1161,   144,    51,   146,    46,   125,   126,   106,    46,   217,
     5,   110,   111,   112,   792,   793,  1180,    51,   499,   110,
    45,   112,   110,    45,   112,   803,    48,    22,    23,    24,
    25,   239,    46,   125,   126,   125,   126,   146,    51,    34,
  1173,    45,   125,   126,    48,    45,    50,  1243,   529,    38,
    45,  1184,    41,    48,   125,   126,   102,   125,   126,   110,
    38,   112,    36,    41,  1449,  1450,   127,  1452,  1453,    38,
   116,   110,    41,   112,   282,  1460,   125,   126,  1463,  1464,
  1465,   127,  1246,   125,   126,  1218,    46,   125,   126,    50,
  1475,   125,   126,   110,   647,   112,  1260,  1261,   144,  1295,
    46,  1265,  1266,  1267,  1268,   883,    45,    11,   117,   118,
  1113,    46,   125,   126,   131,    11,    38,   670,    46,    41,
   328,  1317,    46,    46,   902,    45,    65,    66,    67,    68,
    69,    70,    36,   102,  1298,   913,    45,   132,   133,   134,
    36,   136,   137,   138,   139,   140,    50,  1311,   143,   144,
    36,  1315,  1316,    38,    50,   363,    41,   117,   118,   119,
   120,   121,   122,    49,    46,   125,   126,    45,    46,   947,
  1173,   106,    50,    56,  1335,   110,   111,   112,   106,  1340,
   102,  1184,   110,   111,   112,    45,    45,    46,   127,    56,
   398,    50,    50,   117,   118,   119,   120,   121,   122,    46,
    38,   125,   126,    41,    45,   144,   145,  1368,   416,   110,
   111,   112,  1373,   127,   992,  1218,    45,    46,    49,  1380,
   106,    50,    46,    46,   110,   111,   112,   435,   110,   146,
   112,  1364,   115,   116,   125,   126,   117,   118,   446,    56,
   123,   124,    46,     2,   127,   128,   129,  1408,   115,   116,
   117,   118,   119,   120,   121,   122,   123,   124,   127,   106,
   127,   128,   129,   110,   111,   112,   747,   748,   749,    49,
    55,    56,   127,    13,   131,  1439,  1440,   485,  1442,  1443,
    39,    46,    36,    13,    46,    46,   110,  1451,   112,  1067,
  1454,  1455,  1456,    46,    53,    54,    46,    46,   115,   116,
    59,   509,  1466,    36,    46,  1083,   123,   124,   125,   126,
   127,   128,   129,    72,    73,    46,    37,  1095,    46,    36,
  1098,   529,    45,    46,    83,    36,   106,    50,    36,    49,
   110,   111,   112,    92,    46,  1113,    49,    36,   546,   106,
    30,   106,   115,    50,   106,   110,   111,   112,   110,   111,
   112,   107,    46,   106,    49,   107,   106,   110,   111,   112,
   110,   111,   112,   122,   106,    50,     7,   106,   110,   111,
   112,   110,   111,   112,    51,   106,    49,    36,   106,   110,
   111,   112,   110,   111,   112,    36,   106,   147,    36,   148,
   110,   111,   112,   106,    36,  1173,    46,   110,   111,   112,
    36,    46,   883,   108,   109,   110,  1184,   112,    36,    36,
    46,   106,    46,   621,    36,   110,   111,   112,    46,    55,
    56,    36,  1200,    46,   127,  1203,   131,    55,    56,   106,
    46,  1209,   191,   110,   111,   112,    45,    46,    46,   647,
  1218,    50,    36,   202,   203,   204,   205,   206,   207,   208,
   209,   210,   211,    17,   213,    46,   113,   216,   217,   112,
    49,    46,   670,   222,     7,   112,   947,   226,   227,   677,
    46,   230,   127,    46,    38,    39,   684,    41,    42,    43,
   239,   240,   117,   118,   119,   120,   121,   122,   146,   127,
   125,   126,  1270,   117,   118,   119,   120,   121,   122,   258,
   259,   125,   126,   262,   263,   264,   265,   266,   267,   268,
   269,   270,    46,   127,   127,    46,    46,   276,   277,     4,
   728,    46,   112,   282,   283,   145,    46,    46,   287,   288,
   289,   290,    48,   292,   293,    46,    32,   296,    46,    36,
    46,   300,   301,   302,   303,    46,    46,    45,    50,   112,
     7,   310,    46,   312,   313,   314,    46,   316,   317,    46,
    46,    50,   127,    46,    46,   127,   127,    51,    36,   328,
    48,    46,    46,    46,    46,    46,   127,   127,   127,   127,
   127,   127,    46,    23,    36,    46,  1364,    46,    46,   113,
   112,   106,    45,    49,    45,   803,    51,    51,    36,    49,
    49,    49,    46,    45,   363,    51,    51,    48,    51,    45,
   113,    46,   371,    53,    46,    46,  1394,    46,    46,    46,
    46,    46,    46,    46,    36,    46,    46,    45,   127,    51,
    46,    46,  1113,    46,   127,    46,    46,    46,    45,   398,
    48,    36,    46,  1421,    46,    46,   127,    46,    51,    46,
    48,    51,    46,   144,    46,    46,   144,   416,    45,    55,
    46,    46,    46,   422,   144,   144,    41,    50,   427,    50,
    50,    50,    50,    50,    46,    46,   435,   436,    46,    45,
   120,    51,    46,    45,   443,    46,    46,   446,    46,    46,
   449,    45,  1173,    49,   902,    50,    45,   144,    50,    50,
    50,   460,    49,  1184,   463,   913,    45,   466,    46,    46,
   469,    41,    46,   127,   147,    51,    51,    46,    51,    51,
    51,   127,   127,   482,    51,    46,   485,    46,    46,    46,
    41,    51,    46,    46,   127,    51,    46,  1218,   127,   127,
   499,    46,    51,    51,   113,   127,    46,    46,    46,    46,
   509,   191,   192,   127,    45,    50,    46,   147,    46,    46,
   127,   201,    46,    46,   523,   524,   525,    46,    46,    46,
   529,   147,    46,    46,   147,    50,    46,    46,    50,    50,
   220,    46,   147,   223,   992,    46,    50,   546,   147,    46,
    50,    50,    50,     0,   234,   554,    50,     0,    51,   239,
    51,   241,   147,   147,   147,    51,    51,    51,    51,    51,
    51,    51,   584,  1398,   791,  1218,   693,   818,   885,   735,
   915,    -1,    -1,    -1,    -1,    -1,    -1,   304,    -1,    -1,
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   782,    -1,    -1,    -1,
    -1,    -1,   348,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   800,    -1,    -1,    -1,    -1,   365,
    -1,    -1,    -1,   809,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,    -1,
    -1,   827,    -1,    -1,    -1,    -1,    -1,   393,    -1,    -1,
   396,    -1,    -1,   815,   816,   817,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
<<<<<<< HEAD
    -1,    -1,   418,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   430,    -1,    -1,    -1,    -1,   435,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   869,    -1,    -1,
    -1,   873,   458,    -1,    -1,   877,    -1,   879,    -1,   881,
    -1,   883,   884,   885,   886,    -1,   472,   889,    -1,    -1,
   892,    -1,    -1,    -1,    -1,   897,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   954,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   967,    -1,    -1,   970,    -1,    -1,   973,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,    -1,    -1,
    -1,    -1,   988,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   978,   979,    -1,    -1,
    -1,    -1,    -1,   569,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   595,
    -1,    -1,    -1,    -1,  1016,    -1,    -1,   603,    -1,    -1,
    -1,  1023,   608,  1025,    -1,  1027,    -1,    -1,    -1,    -1,
  1056,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,  1067,    -1,    -1,    -1,    -1,   632,    -1,    -1,  1075,
    -1,    -1,  1078,    -1,    -1,    -1,    -1,    -1,  1084,    -1,
   646,   647,   648,    -1,    -1,     1,    -1,  1093,    -1,    -1,
     6,    -1,    -1,    -1,    -1,    -1,    -1,    13,    -1,    -1,
    -1,    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    50,    -1,    -1,    53,    -1,    55,
    -1,    -1,    -1,  1149,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,
    76,  1167,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   127,   128,    -1,    -1,   131,   782,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,   145,
    -1,   147,   148,   149,   800,    -1,  1218,  1219,    -1,    -1,
    -1,  1223,  1224,   809,    -1,    -1,     1,    -1,    -1,    -1,
    -1,     6,    -1,    -1,    -1,    -1,    -1,    -1,    13,    -1,
    -1,   827,    -1,    18,    19,    -1,    21,    22,    23,    24,
    -1,    -1,  1254,    -1,    -1,    -1,    -1,  1259,    -1,    -1,
    -1,    -1,    -1,  1265,  1266,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    53,    -1,
    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,  1296,    70,    71,    72,    73,    74,
    75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,   101,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   127,   128,    -1,    -1,   131,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   954,   144,
   145,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,   967,    -1,    -1,   970,    -1,    -1,   973,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   988,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,     1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,
    -1,    -1,    -1,    13,    -1,    -1,    -1,    -1,    18,    19,
    -1,    21,    22,    23,    24,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
  1056,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    50,  1067,    -1,    53,    -1,    -1,    -1,    -1,    -1,  1075,
    -1,    -1,  1078,    -1,    -1,    -1,    -1,    -1,  1084,    -1,
    70,    71,    72,    73,    74,    75,    76,  1093,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,    -1,     1,    -1,    -1,    -1,    -1,     6,    -1,
    -1,    -1,    -1,    -1,    -1,    13,    -1,   117,    -1,    -1,
    18,    19,    -1,    21,    22,    23,    24,   127,   128,    -1,
    -1,   131,    -1,  1149,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,   149,
    -1,  1167,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    70,    71,    72,    73,    74,    75,    76,    -1,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,   101,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,     3,    -1,    -1,     6,   144,     8,     9,   147,
   148,   149,    13,    -1,    15,    -1,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    -1,    34,    35,    36,    -1,    38,    39,    -1,
    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
    -1,    -1,    53,    -1,    -1,    -1,    57,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,   103,   104,    -1,   106,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,
   131,    -1,   133,   134,   135,   136,   137,   138,   139,    -1,
    -1,    -1,    -1,   144,   145,   146,   147,   148,   149,     3,
    -1,    -1,     6,    -1,     8,     9,    -1,    -1,    -1,    13,
    -1,    15,    -1,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
    34,    35,    36,    -1,    38,    39,    -1,    -1,    -1,    43,
    44,    -1,    46,    47,    48,    -1,    50,    -1,    -1,    53,
    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    65,    -1,    -1,    -1,    -1,    70,    71,    72,    73,
    74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,   101,    -1,   103,
   104,    -1,   106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   127,   128,    -1,    -1,   131,    -1,   133,
   134,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
   144,   145,   146,   147,   148,   149,     3,    -1,    -1,     6,
    -1,     8,     9,    -1,    -1,    -1,    13,    -1,    15,    -1,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    -1,    34,    35,    36,
    -1,    38,    39,    -1,    -1,    -1,    43,    44,    -1,    46,
    47,    48,    -1,    50,    -1,    -1,    53,    -1,    -1,    -1,
    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    -1,
    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,    -1,   103,   104,    -1,   106,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   127,   128,    -1,    -1,   131,    -1,   133,   134,   135,   136,
   137,   138,   139,    -1,    -1,    -1,     6,   144,   145,   146,
   147,   148,   149,    13,    -1,    15,    -1,    -1,    18,    19,
    -1,    21,    22,    23,    24,    -1,    -1,    27,    28,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    43,    -1,    -1,    46,    47,    48,    -1,
    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,
    -1,   131,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,     6,   144,   145,   146,   147,   148,   149,
    13,    -1,    15,    -1,    17,    18,    19,    20,    21,    22,
    23,    24,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    43,    44,    -1,    46,    47,    48,    -1,    50,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,
    73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,    -1,
   103,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,   131,    -1,
   133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     6,   144,    -1,   146,   147,   148,   149,    13,    -1,    15,
    -1,    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,
    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,
    46,    47,    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,
    76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,    -1,   103,   104,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   127,   128,    -1,    -1,   131,    -1,    -1,   134,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,     6,   144,   145,
   146,   147,   148,   149,    13,    -1,    15,    -1,    -1,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,    27,    28,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    43,    -1,    -1,    46,    47,    48,
    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    -1,   103,   104,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,   134,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,     6,   144,   145,   146,   147,   148,
   149,    13,    -1,    15,    -1,    -1,    18,    19,    -1,    21,
    22,    23,    24,    -1,    -1,    27,    28,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    43,    -1,    -1,    46,    47,    48,    -1,    50,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,
    72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,
    -1,     6,    -1,    -1,    -1,   127,   128,    -1,    13,   131,
    15,    -1,   134,    18,    19,    -1,    21,    22,    23,    24,
    -1,    -1,   144,   145,   146,   147,   148,   149,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,
    -1,    46,    47,    48,    -1,    50,    -1,    -1,    53,    -1,
    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,
    75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,   101,    -1,   103,   104,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,     6,    -1,
    -1,    -1,   127,   128,    -1,    13,   131,    15,    -1,    -1,
    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,   144,
   145,   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    46,    47,
    48,    -1,    50,    -1,    -1,    53,    -1,    55,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    70,    71,    72,    73,    74,    75,    76,    -1,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,   101,    -1,   103,   104,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,
    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,   127,
   128,    -1,    13,   131,    15,    -1,    -1,    18,    19,    20,
    21,    22,    23,    24,    -1,    -1,   144,   145,   146,   147,
   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,   103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,
    -1,    -1,     6,    -1,    -1,    -1,   127,   128,    -1,    13,
   131,    15,    -1,    -1,    18,    19,    -1,    21,    22,    23,
    24,    -1,    -1,   144,   145,   146,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
    -1,    -1,    46,    47,    48,    -1,    50,    -1,    -1,    53,
    -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,
    74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,   101,    -1,   103,
   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,     6,
    -1,    -1,    -1,   127,   128,    -1,    13,   131,    15,    -1,
    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,
   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    46,
    47,    48,    -1,    50,    -1,    -1,    53,    -1,    55,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,    76,
    -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,    -1,   103,   104,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   117,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,
   127,   128,    -1,    13,   131,    15,    -1,    -1,    18,    19,
    -1,    21,    22,    23,    24,    -1,    -1,   144,    -1,   146,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    43,    -1,    -1,    46,    47,    48,    -1,
    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,
    -1,    -1,    -1,     6,    -1,    -1,    -1,   127,   128,    -1,
    13,   131,    15,   133,    -1,    18,    19,    -1,    21,    22,
    23,    24,    -1,    -1,   144,    -1,   146,   147,   148,   149,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    43,    -1,    -1,    46,    47,    48,    -1,    50,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,
    73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,    -1,
   103,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,
     6,    -1,    -1,    -1,   127,   128,    -1,    13,   131,    15,
   133,    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,
    -1,   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,
    46,    47,    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,
    76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,    -1,   103,   104,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   117,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,
    -1,   127,   128,    -1,    13,   131,    15,    -1,    -1,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,   144,    -1,
   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    43,    -1,    -1,    46,    47,    48,
    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    -1,   103,   104,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,
    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,   127,   128,
    -1,    13,   131,    15,    -1,    -1,    18,    19,    -1,    21,
    22,    23,    24,    -1,    -1,   144,    -1,   146,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    43,    -1,    -1,    46,    47,    48,    -1,    50,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,
    72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,
    -1,     6,    -1,    -1,    -1,   127,   128,    -1,    13,   131,
    15,    -1,    -1,    18,    19,    -1,    21,    22,    23,    24,
    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,
    -1,    46,    47,    48,    -1,    50,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,
    75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,   101,    -1,   103,   104,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,     6,    -1,
    -1,    -1,   127,   128,    -1,    13,   131,    15,    -1,    -1,
    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,   144,
    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    46,    47,
    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    70,    71,    72,    73,    74,    75,    76,    -1,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,   101,    -1,   103,   104,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,
    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,   127,
   128,    -1,    13,   131,    15,    -1,    -1,    18,    19,    -1,
    21,    22,    23,    24,    -1,    -1,   144,    -1,   146,   147,
   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    43,    -1,    -1,    46,    47,    48,    -1,    50,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,
    -1,    -1,     6,    -1,    -1,    -1,   127,   128,    -1,    13,
   131,    15,    -1,    -1,    18,    19,    -1,    21,    22,    23,
    24,    -1,    -1,   144,    -1,   146,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    43,
    -1,    -1,    46,    47,    48,    -1,    50,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,
    74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,   101,    -1,   103,
   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,     6,
    -1,    -1,    -1,   127,   128,    -1,    13,   131,    15,    -1,
    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,
   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    43,    -1,    -1,    46,
    47,    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,    76,
    -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,    -1,   103,   104,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   117,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,
   127,   128,    -1,    13,   131,    15,    -1,    -1,    18,    19,
    -1,    21,    22,    23,    24,    -1,    -1,   144,    -1,   146,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    43,    -1,    -1,    46,    47,    48,    -1,
    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,
    -1,    -1,    -1,     6,    -1,    -1,    -1,   127,   128,    -1,
    13,   131,    15,    -1,    -1,    18,    19,    -1,    21,    22,
    23,    24,    -1,    -1,   144,    -1,   146,   147,   148,   149,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    43,    -1,    -1,    46,    47,    48,    -1,    50,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,
    73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,    -1,
   103,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,     6,
    -1,    -1,    -1,    -1,   127,   128,    13,    -1,   131,    -1,
    -1,    18,    19,    20,    21,    22,    23,    24,    -1,    -1,
    -1,   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    43,    44,    -1,    46,
    47,    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,    76,
    -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,    -1,   103,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   117,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,
   127,   128,    13,    -1,   131,    -1,    -1,    18,    19,    20,
    21,    22,    23,    24,    -1,    -1,    -1,   144,    -1,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    43,    44,    -1,    46,    47,    48,    -1,    50,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,   103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,
   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
    -1,    -1,     6,   144,     8,     9,   147,   148,   149,    -1,
    -1,    15,    -1,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    -1,    -1,    29,    30,    31,    32,    -1,
    34,    35,    36,    -1,    38,    39,    -1,    -1,    -1,    43,
    44,    -1,    46,    47,    48,    -1,    50,    -1,    -1,    53,
    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    65,    -1,    -1,    -1,    -1,    70,    71,    72,    73,
    74,    75,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
   104,    -1,   106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   128,    -1,    -1,    -1,    -1,   133,
    -1,   135,   136,   137,   138,   139,    -1,    -1,     3,    -1,
   144,     6,   146,     8,     9,    -1,    -1,    -1,    -1,    -1,
    15,    -1,    17,    18,    19,    20,    21,    22,    23,    24,
    25,    26,    -1,    -1,    29,    30,    31,    32,    -1,    34,
    35,    36,    -1,    38,    39,    -1,    -1,    -1,    43,    44,
    -1,    46,    47,    48,    -1,    50,    -1,    -1,    53,    -1,
    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,
    75,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,   103,   104,
    13,   106,    -1,    -1,    -1,    18,    19,    -1,    21,    22,
    23,    24,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   128,    -1,    -1,    -1,    -1,   133,    -1,
   135,   136,   137,   138,   139,    -1,    -1,    50,    -1,   144,
    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,
    73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,    -1,
    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,
    -1,    -1,    13,    -1,   117,    -1,    -1,    18,    19,    -1,
    21,    22,    23,    24,   127,   128,    27,    28,   131,    -1,
    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   144,   145,    -1,   147,   148,   149,    -1,    -1,    50,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,
    -1,    -1,    13,    -1,    -1,    -1,   117,    18,    19,    -1,
    21,    22,    23,    24,    -1,    -1,   127,   128,    -1,    -1,
   131,    -1,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   144,   145,    -1,   147,   148,   149,    50,
    -1,    -1,    53,    -1,    55,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,
    -1,    -1,    13,    -1,    -1,    -1,   117,    18,    19,    -1,
    21,    22,    23,    24,    -1,    -1,   127,   128,    -1,    -1,
   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   144,   145,    -1,   147,   148,   149,    50,
    -1,    -1,    53,    -1,    55,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,
    -1,    -1,    -1,    -1,    13,    -1,   117,    -1,    -1,    18,
    19,    -1,    21,    22,    23,    24,   127,   128,    27,    28,
   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   144,   145,    -1,   147,   148,   149,    -1,
    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    -1,    -1,    -1,    -1,     6,    -1,    -1,
    -1,    -1,    -1,    -1,    13,    -1,    -1,    -1,   117,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   144,   145,    -1,   147,   148,
   149,    50,    -1,    -1,    53,    -1,    55,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    -1,    -1,    -1,    -1,     6,    -1,    -1,
    -1,    -1,    -1,    -1,    13,    -1,    -1,    -1,   117,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   144,   145,    -1,   147,   148,
   149,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    -1,    -1,    -1,    -1,     6,    -1,    -1,
    -1,    -1,    -1,    -1,    13,    -1,    -1,    -1,   117,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,
   149,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    13,    -1,    -1,    -1,    -1,    18,    19,
    -1,    21,    22,    23,    24,    -1,    -1,    -1,   117,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    50,    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,    13,    -1,    -1,   105,    -1,    18,    19,    -1,
    21,    22,    23,    24,    -1,    -1,    -1,   117,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,
    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,   149,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    13,    -1,    -1,   105,    -1,    18,    19,    -1,    21,
    22,    23,    24,    -1,    -1,    -1,   117,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,
   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,
    -1,    -1,    -1,   144,    -1,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,
    72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
    13,    -1,    -1,   105,    -1,    18,    19,    -1,    21,    22,
    23,    24,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,   131,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,
    -1,    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,
    73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,    13,
    -1,    -1,   105,    -1,    18,    19,    -1,    21,    22,    23,
    24,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,   131,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,
    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,
    74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,   101,    13,    -1,
    -1,   105,    -1,    18,    19,    -1,    21,    22,    23,    24,
    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   127,   128,    -1,    -1,   131,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,
   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,
    75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,   101,    13,    -1,    -1,
   105,    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,
    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   127,   128,    -1,    -1,   131,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,   144,
    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,
    76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,    13,    -1,    -1,   105,
    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,
    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   127,   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,   144,    -1,
    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,    76,
    -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,    13,    -1,    -1,   105,    -1,
    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,    -1,
   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   127,   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    50,    -1,    -1,    -1,    -1,   144,    -1,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    70,    71,    72,    73,    74,    75,    76,    -1,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,   101,    13,    -1,    -1,   105,    -1,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,    -1,   117,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    50,    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,
   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    13,    -1,    -1,   105,    -1,    18,    19,
    -1,    21,    22,    23,    24,    -1,    -1,    -1,   117,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    50,    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    70,    71,    72,    73,    74,    75,    76,    -1,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,   101,    13,    -1,    -1,   105,    -1,    18,    19,    -1,
    21,    22,    23,    24,    -1,    -1,    -1,   117,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,
    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,
    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,   149,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,
    71,    72,    73,    74,    75,    76,    -1,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
   101,    13,    -1,    -1,   105,    -1,    18,    19,    -1,    21,
    22,    23,    24,    -1,    -1,    -1,   117,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,
   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,
    -1,    -1,    -1,   144,    -1,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,
    72,    73,    74,    75,    76,    -1,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
    13,    -1,    -1,   105,    -1,    18,    19,    -1,    21,    22,
    23,    24,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,   131,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,
    -1,    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,
    73,    74,    75,    76,    -1,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,   101,    13,
    -1,    -1,   105,    -1,    18,    19,    -1,    21,    22,    23,
    24,    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   127,   128,    -1,    -1,   131,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,
    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,
    74,    75,    76,    -1,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,   101,    13,    -1,
    -1,   105,    -1,    18,    19,    -1,    21,    22,    23,    24,
    -1,    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   127,   128,    -1,    -1,   131,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,
   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,
    75,    76,    -1,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,   101,    13,    -1,    -1,
   105,    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,
    -1,    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   127,   128,    -1,    -1,   131,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,   144,
    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,
    76,    -1,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,    13,    -1,    -1,   105,
    -1,    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,
    -1,   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   127,   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,   144,    -1,
    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    70,    71,    72,    73,    74,    75,    76,
    -1,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,    13,    -1,    -1,   105,    -1,
    18,    19,    -1,    21,    22,    23,    24,    -1,    -1,    -1,
   117,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   127,   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    50,    -1,    -1,    -1,    -1,   144,    -1,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    70,    71,    72,    73,    74,    75,    76,    -1,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,   101,    13,    -1,    -1,   105,    -1,    18,
    19,    -1,    21,    22,    23,    24,    -1,    -1,    -1,   117,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
   128,    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    50,    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,
   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    70,    71,    72,    73,    74,    75,    76,    -1,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,    -1,   131,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,   147,   148,
   149
=======
    -1,   291,    -1,    -1,   294,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   621,    -1,    -1,    -1,    -1,    -1,    -1,   309,
    -1,   311,    -1,    -1,    -1,  1083,    -1,    -1,   318,    -1,
    -1,    -1,    -1,    -1,     2,    -1,    -1,  1095,   647,    -1,
  1098,    -1,    -1,    -1,   653,    -1,   655,    -1,   657,   658,
    -1,    -1,   661,   662,   663,   664,    -1,    -1,   667,    -1,
   669,   670,   671,    -1,    -1,    -1,    -1,    -1,   677,    -1,
    -1,    -1,    -1,    -1,    -1,   684,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   693,    53,    54,    -1,    -1,    -1,
   699,    -1,    -1,    -1,    -1,   704,    -1,    -1,    -1,    -1,
   709,    -1,    -1,    -1,    -1,    73,    -1,    -1,   398,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   407,   408,   728,
    -1,    -1,   731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   740,    -1,    -1,    -1,   744,    -1,    -1,   747,   748,
   749,    -1,  1200,   752,    -1,  1203,    -1,    -1,    -1,    -1,
    -1,  1209,    -1,    -1,   122,   764,   446,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   226,   227,    -1,    -1,
   230,    -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,
   148,    -1,    -1,   792,   793,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   803,   485,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   496,   497,    -1,    -1,
    -1,    -1,  1270,    23,    -1,   264,   265,   266,   267,   268,
   269,   270,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   206,   529,
    -1,    -1,    -1,    53,    -1,   294,    -1,    -1,    -1,   217,
    -1,    -1,    -1,    -1,   222,   223,    -1,    -1,    -1,    -1,
   309,    -1,   311,    -1,    -1,   555,   875,    -1,   877,    -1,
   879,   239,    -1,    -1,   883,    -1,    -1,    -1,   887,    -1,
    -1,    -1,    -1,   892,    -1,    -1,    -1,    -1,    -1,   338,
   258,   259,   582,   902,   262,   263,   264,   265,   266,   267,
   268,   269,   270,    -1,   913,    -1,    -1,    -1,    -1,    -1,
   120,    -1,    -1,    -1,   282,   283,    -1,    -1,    -1,   287,
   288,   289,   290,    -1,   292,   293,   294,    -1,    -1,    -1,
    -1,    -1,   300,   301,   302,   303,    -1,    -1,   947,    -1,
    -1,   309,    -1,   311,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   403,   404,    -1,    -1,    -1,    -1,
   328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   191,   192,   992,    -1,    -1,    -1,   677,    -1,    -1,
    -1,   201,    -1,    -1,    -1,   363,    -1,   446,   447,   448,
    -1,    -1,    -1,   463,   694,   465,   466,    -1,   468,   469,
   220,   471,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,   239,
   398,   241,    -1,    -1,    -1,    -1,  1045,    -1,   728,    -1,
    -1,    -1,    -1,    -1,   374,    -1,    -1,    -1,   416,   739,
    -1,    -1,    -1,   743,    -1,  1064,    -1,    -1,  1067,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,
    -1,    -1,    -1,    -1,  1083,   443,    -1,    -1,   446,    -1,
    -1,   291,    -1,    -1,   294,    -1,  1095,   777,   778,  1098,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   309,
    -1,   311,     2,    -1,  1113,    -1,   555,    -1,   318,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    53,    54,    -1,    -1,    -1,    -1,    -1,
    -1,   529,    -1,    -1,  1173,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    72,    73,    -1,  1184,    -1,    -1,   546,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   555,   398,    -1,
    -1,  1200,    -1,    -1,  1203,    -1,    -1,   407,   408,    -1,
  1209,   650,    -1,    -1,   664,   665,    -1,    -1,    -1,  1218,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   122,    -1,    -1,    -1,    -1,    -1,   677,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   446,    -1,    -1,   699,
    -1,   701,   702,    -1,   704,   694,   706,   707,   148,    -1,
    -1,   711,   712,   621,    -1,    -1,    -1,    -1,   588,    -1,
   590,  1270,    -1,   593,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,   647,
    -1,    -1,    -1,    -1,    -1,    -1,   496,   497,    -1,    -1,
   739,   191,    -1,    -1,   743,    -1,    -1,    -1,   747,   748,
   749,    -1,   670,    -1,    -1,    -1,   206,    -1,    -1,   677,
    -1,    -1,    -1,    -1,    -1,    -1,   684,   217,    -1,   529,
    -1,    -1,   222,    -1,    -1,    -1,   694,    -1,   777,   778,
    -1,    -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,   239,
   240,    -1,    -1,    -1,    -1,   555,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,   259,
   728,    -1,   262,   263,   264,   265,   266,   267,   268,   269,
   270,   739,   582,    -1,    -1,   743,    -1,   277,  1068,   747,
   748,   749,   282,   283,    -1,    -1,    -1,   287,   288,   289,
   290,    -1,   292,   293,    -1,    -1,    -1,    -1,    -1,    -1,
   300,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,   777,
   778,    -1,    -1,    -1,    -1,    -1,   876,    -1,   878,   879,
    -1,   881,    -1,    -1,    -1,    -1,    -1,    -1,   328,    -1,
    -1,    -1,    -1,    -1,    -1,   803,    -1,    -1,    -1,    -1,
    -1,    -1,  1132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   904,    -1,    -1,    -1,    -1,
    -1,   921,    -1,   363,    -1,   925,    -1,   677,   928,   929,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   694,    -1,    -1,    -1,    -1,   819,
    -1,    -1,   822,    -1,   824,    -1,    -1,   827,   398,    -1,
    -1,    -1,    -1,    -1,   834,    -1,   836,    -1,   838,   839,
   840,    -1,    -1,    -1,    -1,   883,   416,    -1,   728,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   739,
    -1,    -1,    -1,   743,   902,   435,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   443,    -1,   913,   446,    -1,    -1,   449,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   777,   778,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   947,
    -1,    -1,   482,    -1,    -1,   485,    -1,    -1,    -1,    -1,
    -1,  1051,    -1,  1053,  1054,    -1,    -1,  1057,  1058,   499,
    -1,    -1,    -1,    -1,    -1,   935,   936,   937,    -1,   509,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   992,    -1,    -1,    -1,    -1,   529,
    -1,    -1,    -1,  1093,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,  1002,    -1,  1004,    -1,    -1,    -1,  1008,    -1,
  1010,    -1,  1012,  1132,  1014,  1015,  1016,  1017,    -1,    -1,
  1020,    -1,    -1,  1023,    -1,    -1,    -1,    -1,  1028,  1067,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,  1083,    -1,    -1,  1178,    -1,
    -1,   621,    -1,    -1,    -1,    -1,    -1,  1095,    -1,    -1,
  1098,    -1,    -1,    -1,    -1,  1195,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,  1113,    -1,   647,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,  1132,    -1,    -1,    -1,    -1,    -1,
   670,    -1,    -1,  1103,  1104,    -1,    -1,   677,    -1,    -1,
    -1,    -1,    -1,  1232,   684,    -1,    -1,  1247,    -1,    -1,
    -1,    -1,  1252,   693,  1254,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,  1173,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,  1184,    -1,    -1,    -1,
  1150,    -1,    -1,    -1,    -1,    -1,    -1,  1157,   728,  1159,
  1290,  1161,  1200,    -1,    -1,  1203,    -1,    -1,    -1,    -1,
    -1,  1209,    -1,    -1,    -1,    -1,    -1,   747,   748,   749,
  1218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1068,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1329,
    -1,  1331,    -1,    -1,     1,    -1,     3,    -1,     5,    -1,
    -1,    -1,    -1,    10,    -1,    -1,    -1,    -1,    15,    16,
    -1,    18,    19,    20,    21,    22,    -1,    24,    25,    -1,
    -1,    -1,  1270,   803,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,    -1,
    -1,    48,  1132,    50,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   883,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,   902,   130,  1334,  1335,   133,    -1,    -1,  1339,
  1340,    -1,    -1,   913,    -1,   142,    -1,   144,   145,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     1,    -1,     3,    -1,    -1,    -1,    -1,    -1,  1368,    10,
    -1,    -1,    -1,  1373,    -1,    -1,    -1,   947,    -1,  1379,
  1380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    45,    -1,    -1,    48,  1408,    50,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   992,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     1,    -1,     3,    -1,    -1,   116,    -1,    -1,    -1,    10,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1067,    -1,    -1,
    -1,   142,    -1,   144,   145,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,  1083,    45,    -1,    -1,    48,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,  1095,    -1,    -1,  1098,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,  1113,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,  1173,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   142,    -1,   144,  1184,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
  1200,    -1,    -1,  1203,    -1,    -1,    -1,    -1,    -1,  1209,
    -1,    -1,    -1,    -1,    -1,     1,    -1,     3,  1218,     5,
     6,    -1,    -1,    -1,    10,    -1,    12,    -1,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    -1,    31,    -1,    33,    34,    -1,
    -1,    -1,    38,    39,    40,    41,    42,    43,    44,    45,
    -1,    -1,    48,    -1,    -1,    -1,    52,    -1,    -1,    -1,
  1270,    -1,    58,    59,    60,    61,    62,    63,    -1,    65,
    66,    67,    68,    69,    70,    71,    72,    -1,    -1,    -1,
    -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,    -1,   102,   103,    -1,   105,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,   127,    -1,    -1,   130,    -1,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,    -1,   144,    -1,
   146,   147,   148,   149,     1,    -1,     3,    -1,     5,     6,
    -1,    -1,    -1,    10,    -1,    12,    -1,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    -1,    31,    -1,    33,    34,    -1,    -1,
    -1,    38,    39,    40,    41,    42,    43,    44,    45,    -1,
    -1,    48,    -1,    -1,    -1,    52,    -1,    -1,    -1,    -1,
    -1,    58,    59,    60,    61,    62,    63,    -1,    65,    66,
    67,    68,    69,    70,    71,    72,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,    -1,   102,   103,    -1,   105,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,   132,   133,   134,   135,   136,
   137,   138,   139,   140,   141,   142,    -1,   144,    -1,   146,
   147,   148,   149,     1,    -1,     3,    -1,     5,     6,    -1,
    -1,    -1,    10,    -1,    12,    -1,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    -1,    31,    -1,    33,    34,    -1,    -1,    -1,
    38,    39,    40,    41,    42,    43,    44,    45,    -1,    -1,
    48,    -1,    -1,    -1,    52,    -1,    -1,    -1,    -1,    -1,
    58,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
    68,    69,    70,    71,    72,    -1,    -1,    -1,    -1,    77,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,    -1,   102,   103,    -1,   105,     1,    -1,
     3,    -1,    -1,    -1,    -1,    -1,    -1,    10,   116,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,
    -1,    -1,   130,    -1,   132,   133,   134,   135,   136,   137,
   138,   139,   140,   141,   142,    -1,   144,    -1,   146,   147,
   148,   149,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
     3,   144,     5,    -1,   147,   148,   149,    10,    -1,    12,
    -1,    -1,    15,    16,    -1,    18,    19,    20,    21,    22,
    -1,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
    43,    -1,    45,    -1,    -1,    48,    -1,    50,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,    -1,   102,
   103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
   133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
    -1,   144,   145,   146,   147,   148,   149,     3,    -1,     5,
    -1,    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,    15,
    16,    -1,    18,    19,    20,    21,    22,    -1,    24,    25,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
    -1,    -1,    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,
    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,
    -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,    -1,   102,   103,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,   127,    -1,    -1,   130,    -1,    -1,   133,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,   145,
   146,   147,   148,   149,     3,    -1,     5,    -1,    -1,    -1,
    -1,    10,    -1,    12,    -1,    -1,    15,    16,    -1,    18,
    19,    20,    21,    22,    -1,    24,    25,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
    -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,    -1,   102,   103,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   142,    -1,   144,   145,   146,   147,   148,
   149,     3,    -1,     5,    -1,    -1,    -1,    -1,    10,    -1,
    12,    -1,    -1,    15,    16,    -1,    18,    19,    20,    21,
    22,    -1,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,
    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    71,
    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,    -1,
   102,   103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,
    -1,   133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   142,    -1,   144,   145,   146,   147,   148,   149,     3,    -1,
     5,    -1,    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,
    15,    16,    -1,    18,    19,    20,    21,    22,    -1,    24,
    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,    -1,   102,   103,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,   133,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,     3,   144,
     5,   146,   147,   148,   149,    10,    -1,    12,    -1,    -1,
    15,    16,    -1,    18,    19,    20,    21,    22,    -1,    24,
    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,    -1,   102,   103,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     3,   126,   127,    -1,    -1,   130,    -1,    10,   133,    12,
    -1,    14,    -1,    -1,    17,    -1,    -1,   142,    -1,   144,
    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    38,    39,    40,    41,    42,
    43,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,    -1,   102,
   103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,   132,
    -1,    -1,    -1,    -1,    -1,     3,    -1,     5,    -1,   142,
    -1,   144,    10,   146,   147,   148,   149,    15,    16,    -1,
    18,    19,    20,    21,    22,    -1,    24,    25,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,
    48,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,
    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,
    -1,    -1,   130,    -1,    -1,   133,    -1,    -1,    -1,    -1,
    -1,     3,    -1,     5,   142,    -1,   144,   145,    10,   147,
   148,   149,    -1,    15,    16,    -1,    18,    19,    20,    21,
    22,    -1,    24,    25,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    45,    -1,    -1,    48,    -1,    50,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    71,
    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,
    -1,   133,    -1,    -1,    -1,    -1,    -1,     3,    -1,     5,
   142,    -1,   144,   145,    10,   147,   148,   149,    -1,    15,
    16,    -1,    18,    19,    20,    21,    22,    -1,    24,    25,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,
    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,
    -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,   127,    -1,    -1,   130,    -1,    -1,   133,    -1,    -1,
    -1,    -1,    -1,     3,    -1,     5,   142,    -1,   144,   145,
    10,   147,   148,   149,    -1,    15,    16,    -1,    18,    19,
    20,    21,    22,    -1,    24,    25,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,
   130,    -1,    -1,   133,    -1,    -1,    -1,    -1,     3,    -1,
     5,    -1,   142,    -1,   144,    10,    -1,   147,   148,   149,
    15,    16,    -1,    18,    19,    20,    21,    22,    -1,    24,
    25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,     3,    -1,    -1,    -1,
    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,
    17,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,   133,    -1,
    -1,    38,    39,    -1,    41,    42,    43,   142,    45,   144,
    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,    -1,   102,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,   116,
    -1,    -1,    -1,    -1,    -1,    10,    -1,    12,    -1,   126,
   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,   145,   146,
   147,   148,   149,    38,    -1,    -1,    41,    42,    43,    -1,
    45,    -1,    -1,    48,    -1,    50,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,    -1,   102,   103,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     3,   116,    -1,    -1,    -1,    -1,    -1,    10,    -1,    12,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,
    -1,   146,   147,   148,   149,    38,    -1,    -1,    41,    42,
    43,    -1,    45,    -1,    -1,    48,    -1,    50,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,     3,   102,
   103,    -1,    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,   142,
    45,   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,     3,   102,   103,    -1,
    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,   132,    -1,    -1,
    -1,    38,    -1,    -1,    41,    42,    43,   142,    45,   144,
    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,     3,   102,   103,    -1,    -1,    -1,
    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,   132,    -1,    -1,    -1,    38,
    -1,    -1,    41,    42,    43,   142,    45,   144,    -1,   146,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,     3,   102,   103,    -1,    -1,    -1,    -1,    10,
    -1,    12,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,
    41,    42,    43,   142,    45,   144,    -1,   146,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     3,   102,   103,    -1,    -1,    -1,    -1,    10,    -1,    12,
    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
    43,   142,    45,   144,    -1,   146,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,     3,   102,
   103,    -1,    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,   142,
    45,   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,     3,   102,   103,    -1,
    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    38,    -1,    -1,    41,    42,    43,   142,    45,   144,
    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,     3,   102,   103,    -1,    -1,    -1,
    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    38,
    -1,    -1,    41,    42,    43,   142,    45,   144,    -1,   146,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,     3,   102,   103,    -1,    -1,    -1,    -1,    10,
    -1,    12,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,
    41,    42,    43,   142,    45,   144,    -1,   146,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     3,   102,   103,    -1,    -1,    -1,    -1,    10,    -1,    12,
    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
    43,   142,    45,   144,    -1,   146,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,     3,   102,
   103,    -1,    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,   142,
    45,   144,    -1,   146,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,     3,   102,   103,    -1,
    -1,    -1,    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    38,    -1,    -1,    41,    42,    43,   142,    45,   144,
    -1,   146,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,     3,   102,   103,    -1,    -1,    -1,
    -1,    10,    -1,    12,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    38,
    -1,    -1,    41,    42,    43,   142,    45,   144,    -1,   146,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,     3,   102,   103,    -1,    -1,    -1,    -1,    10,
    -1,    12,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,
    41,    42,    43,   142,    45,   144,    -1,   146,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     3,   102,   103,    -1,    -1,    -1,    -1,    10,    -1,    -1,
    -1,    -1,    -1,    -1,    17,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
    43,   142,    45,   144,    -1,   146,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,     3,   102,
    -1,    -1,    -1,    -1,    -1,    10,    -1,    -1,    -1,    -1,
    -1,    -1,    17,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,   142,
    45,   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,    -1,   102,    -1,    -1,
    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
    10,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,
    -1,    -1,   147,   148,   149,    45,    -1,    -1,    48,    -1,
    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,
    -1,    -1,    -1,    -1,    -1,    10,   116,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,
   130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   142,    -1,   144,   145,    -1,   147,   148,   149,
    45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,     3,    -1,    -1,    -1,
    -1,    -1,    -1,    10,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    45,   144,
    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,     3,    -1,    -1,    -1,    -1,    -1,
    -1,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   142,    45,   144,    -1,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,     3,    -1,    -1,    -1,    -1,    -1,    -1,    10,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   142,    45,   144,    -1,    -1,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     3,    -1,    -1,    -1,    -1,    -1,    -1,    10,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   142,    45,   144,    -1,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     1,   142,
     3,   144,     5,     6,   147,   148,   149,    -1,    -1,    12,
    -1,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    29,    -1,    31,    -1,
    33,    34,    -1,    -1,    -1,    38,    39,    40,    41,    42,
    43,    44,    45,    -1,    -1,    48,    -1,    -1,    -1,    52,
    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,
    63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
   103,    -1,   105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,    -1,   132,
    -1,   134,   135,   136,   137,   138,   139,   140,   141,    -1,
     1,   144,     3,   146,     5,     6,    -1,    -1,    -1,    -1,
    -1,    12,    -1,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
    31,    -1,    33,    34,    -1,    -1,    -1,    38,    39,    40,
    41,    42,    43,    44,    45,    -1,    -1,    48,    49,    -1,
    -1,    52,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,
    61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   102,   103,    -1,   105,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
    -1,   132,    -1,   134,   135,   136,   137,   138,   139,   140,
   141,    -1,     1,   144,     3,   146,     5,     6,    -1,    -1,
    -1,    -1,    -1,    12,    -1,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    -1,    31,    -1,    33,    34,    -1,    -1,    -1,    38,
    39,    40,    41,    42,    43,    44,    45,    -1,    -1,    48,
    -1,    -1,    -1,    52,    -1,    -1,    -1,    -1,    -1,    58,
    59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
    69,    70,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    10,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   102,   103,    -1,   105,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    45,
    -1,    -1,    -1,   132,    -1,   134,   135,   136,   137,   138,
   139,   140,   141,    -1,    -1,   144,    -1,   146,    -1,    65,
    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,
    -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,    10,    -1,    -1,   104,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,
    45,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,
    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,    10,    -1,    -1,   104,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    45,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,
    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    65,    66,    67,    68,    69,    70,    71,    -1,    -1,
    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,    10,    -1,    -1,
   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,
    -1,    -1,    45,    -1,    -1,    -1,    -1,    -1,   142,    -1,
   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,    10,    -1,
    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,    -1,   142,
    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    71,
    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,    10,
    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,
    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,    -1,
   142,    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
    10,    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,
    -1,   142,    -1,   144,    -1,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,    10,    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,
   130,    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,
    -1,    -1,   142,    -1,   144,    -1,    -1,   147,   148,   149,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,    10,    -1,    -1,   104,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,
    -1,    -1,    -1,   142,    -1,   144,    -1,    -1,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,
    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,    10,    -1,    -1,   104,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,
    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    45,    -1,
    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,    -1,   147,
   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,    10,    -1,    -1,   104,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    45,
    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    65,
    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,
    -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,    10,    -1,    -1,   104,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,
    45,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,
    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,
    65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
    -1,    -1,    77,    78,    79,    80,    81,    82,    83,    84,
    85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
    95,    96,    97,    98,    99,   100,    10,    -1,    -1,   104,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
    -1,    45,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,
    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,    -1,
    -1,    65,    66,    67,    68,    69,    70,    71,    -1,    -1,
    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,    83,
    84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
    94,    95,    96,    97,    98,    99,   100,    10,    -1,    -1,
   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,    -1,
    -1,    -1,    45,    -1,    -1,    -1,    -1,    -1,   142,    -1,
   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,    -1,
    -1,    -1,    65,    66,    67,    68,    69,    70,    71,    -1,
    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
    93,    94,    95,    96,    97,    98,    99,   100,    10,    -1,
    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,    -1,
    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,    -1,   142,
    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,    -1,
    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    71,
    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,    81,
    82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
    92,    93,    94,    95,    96,    97,    98,    99,   100,    10,
    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,    -1,
    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,    -1,
   142,    -1,   144,    -1,    -1,   147,   148,   149,    -1,    -1,
    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,    80,
    81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
    91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
    10,    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,   130,
    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,    -1,
    -1,   142,    -1,   144,    -1,    -1,   147,   148,   149,    -1,
    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,    79,
    80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
    90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
   100,    10,    -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,    -1,
   130,    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,    -1,
    -1,    -1,   142,    -1,   144,    -1,    -1,   147,   148,   149,
    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,    78,
    79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
    99,   100,    10,    -1,    -1,   104,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
    -1,   130,    -1,    -1,    -1,    -1,    -1,    45,    -1,    -1,
    -1,    -1,    -1,   142,    -1,   144,    -1,    -1,   147,   148,
   149,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    67,
    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,    77,
    78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
    88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
    98,    99,   100,    10,    -1,    -1,   104,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,   127,
    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    45,    -1,
    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,    -1,   147,
   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    65,    66,
    67,    68,    69,    70,    71,    -1,    -1,    -1,    -1,    -1,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,    10,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,
   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,    45,
    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,    -1,
   147,   148,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,
    -1,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,   144,    -1,
    -1,   147,   148,   149
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
};
/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
#line 3 "bison.simple"

/* Skeleton output parser for bison,
   Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

#ifndef alloca
#ifdef __GNUC__
#define alloca __builtin_alloca
#else /* not GNU C.  */
#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)
#include <alloca.h>
#else /* not sparc */
#if defined (MSDOS) && !defined (__TURBOC__)
#include <malloc.h>
#else /* not MSDOS, or __TURBOC__ */
#if defined(_AIX)
#include <malloc.h>
 #pragma alloca
#else /* not MSDOS, __TURBOC__, or _AIX */
#ifdef __hpux
#ifdef __cplusplus
extern "C" {
void *alloca (unsigned int);
};
#else /* not __cplusplus */
void *alloca ();
#endif /* not __cplusplus */
#endif /* __hpux */
#endif /* not _AIX */
#endif /* not MSDOS, or __TURBOC__ */
#endif /* not sparc.  */
#endif /* not GNU C.  */
#endif /* alloca not defined.  */

/* This is the parser code that is written into each bison parser
  when the %semantic_parser declaration is not specified in the grammar.
  It was written by Richard Stallman by simplifying the hairy parser
  used when %semantic_parser is specified.  */

/* Note: there must be only one dollar sign in this file.
   It is replaced by the list of actions, each action
   as one case of the switch.  */

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		-2
#define YYEOF		0
#define YYACCEPT	return(0)
#define YYABORT 	return(1)
#define YYERROR		goto yyerrlab1
/* Like YYERROR except do call yyerror.
   This remains here temporarily to ease the
   transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */
#define YYFAIL		goto yyerrlab
#define YYRECOVERING()  (!!yyerrstatus)
#define YYBACKUP(token, value) \
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    { yychar = (token), yylval = (value);			\
      yychar1 = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { yyerror ("syntax error: cannot back up"); YYERROR; }	\
while (0)

#define YYTERROR	1
#define YYERRCODE	256

#ifndef YYPURE
#define YYLEX		yylex()
#endif

#ifdef YYPURE
#ifdef YYLSP_NEEDED
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, &yylloc, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval, &yylloc)
#endif
#else /* not YYLSP_NEEDED */
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval)
#endif
#endif /* not YYLSP_NEEDED */
#endif

/* If nonreentrant, generate the variables here */

#ifndef YYPURE

int	yychar;			/*  the lookahead symbol		*/
YYSTYPE	yylval;			/*  the semantic value of the		*/
				/*  lookahead symbol			*/

#ifdef YYLSP_NEEDED
YYLTYPE yylloc;			/*  location data for the lookahead	*/
				/*  symbol				*/
#endif

int yynerrs;			/*  number of parse errors so far       */
#endif  /* not YYPURE */

#if YYDEBUG != 0
int yydebug;			/*  nonzero means print parse trace	*/
/* Since this is uninitialized, it does not stop multiple parsers
   from coexisting.  */
#endif

/*  YYINITDEPTH indicates the initial size of the parser's stacks	*/

#ifndef	YYINITDEPTH
#define YYINITDEPTH 200
#endif

/*  YYMAXDEPTH is the maximum size the stacks can grow to
    (effective only if the built-in stack extension method is used).  */

#if YYMAXDEPTH == 0
#undef YYMAXDEPTH
#endif

#ifndef YYMAXDEPTH
#define YYMAXDEPTH 10000
#endif

/* Prevent warning if -Wstrict-prototypes.  */
#ifdef __GNUC__
int yyparse (void);
#endif

#if __GNUC__ > 1		/* GNU C and GNU C++ define this.  */
#define __yy_memcpy(FROM,TO,COUNT)	__builtin_memcpy(TO,FROM,COUNT)
#else				/* not GNU C or C++ */
#ifndef __cplusplus

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (from, to, count)
     char *from;
     char *to;
     int count;
{
  register char *f = from;
  register char *t = to;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#else /* __cplusplus */

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (char *from, char *to, int count)
{
  register char *f = from;
  register char *t = to;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#endif
#endif

#line 192 "bison.simple"

/* The user can define YYPARSE_PARAM as the name of an argument to be passed
   into yyparse.  The argument should have type void *.
   It should actually point to an object.
   Grammar actions can access the variable by casting it
   to the proper pointer type.  */

#ifdef YYPARSE_PARAM
#define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;
#else
#define YYPARSE_PARAM
#define YYPARSE_PARAM_DECL
#endif

int
yyparse(YYPARSE_PARAM)
     YYPARSE_PARAM_DECL
{
  register int yystate;
  register int yyn;
  register short *yyssp;
  register YYSTYPE *yyvsp;
  int yyerrstatus;	/*  number of tokens to shift before error messages enabled */
  int yychar1 = 0;		/*  lookahead token as an internal (translated) token number */

  short	yyssa[YYINITDEPTH];	/*  the state stack			*/
  YYSTYPE yyvsa[YYINITDEPTH];	/*  the semantic value stack		*/

  short *yyss = yyssa;		/*  refer to the stacks thru separate pointers */
  YYSTYPE *yyvs = yyvsa;	/*  to allow yyoverflow to reallocate them elsewhere */

#ifdef YYLSP_NEEDED
  YYLTYPE yylsa[YYINITDEPTH];	/*  the location stack			*/
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;

#define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)
#else
#define YYPOPSTACK   (yyvsp--, yyssp--)
#endif

  int yystacksize = YYINITDEPTH;

#ifdef YYPURE
  int yychar;
  YYSTYPE yylval;
  int yynerrs;
#ifdef YYLSP_NEEDED
  YYLTYPE yylloc;
#endif
#endif

  YYSTYPE yyval;		/*  the variable used to return		*/
				/*  semantic values from the action	*/
				/*  routines				*/

  int yylen;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Starting parse\n");
#endif

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss - 1;
  yyvsp = yyvs;
#ifdef YYLSP_NEEDED
  yylsp = yyls;
#endif

/* Push a new state, which is found in  yystate  .  */
/* In all cases, when you get here, the value and location stacks
   have just been pushed. so pushing a state here evens the stacks.  */
yynewstate:

  *++yyssp = yystate;

  if (yyssp >= yyss + yystacksize - 1)
    {
      /* Give user a chance to reallocate the stack */
      /* Use copies of these so that the &'s don't force the real ones into memory. */
      YYSTYPE *yyvs1 = yyvs;
      short *yyss1 = yyss;
#ifdef YYLSP_NEEDED
      YYLTYPE *yyls1 = yyls;
#endif

      /* Get the current used size of the three stacks, in elements.  */
      int size = yyssp - yyss + 1;

#ifdef yyoverflow
      /* Each stack pointer address is followed by the size of
	 the data in use in that stack, in bytes.  */
#ifdef YYLSP_NEEDED
      /* This used to be a conditional around just the two extra args,
	 but that might be undefined if yyoverflow is a macro.  */
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yyls1, size * sizeof (*yylsp),
		 &yystacksize);
#else
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yystacksize);
#endif

      yyss = yyss1; yyvs = yyvs1;
#ifdef YYLSP_NEEDED
      yyls = yyls1;
#endif
#else /* no yyoverflow */
      /* Extend the stack our own way.  */
      if (yystacksize >= YYMAXDEPTH)
	{
	  yyerror("parser stack overflow");
	  return 2;
	}
      yystacksize *= 2;
      if (yystacksize > YYMAXDEPTH)
	yystacksize = YYMAXDEPTH;
      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));
      __yy_memcpy ((char *)yyss1, (char *)yyss, size * sizeof (*yyssp));
      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));
      __yy_memcpy ((char *)yyvs1, (char *)yyvs, size * sizeof (*yyvsp));
#ifdef YYLSP_NEEDED
      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));
      __yy_memcpy ((char *)yyls1, (char *)yyls, size * sizeof (*yylsp));
#endif
#endif /* no yyoverflow */

      yyssp = yyss + size - 1;
      yyvsp = yyvs + size - 1;
#ifdef YYLSP_NEEDED
      yylsp = yyls + size - 1;
#endif

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Stack size increased to %d\n", yystacksize);
#endif

      if (yyssp >= yyss + yystacksize - 1)
	YYABORT;
    }

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Entering state %d\n", yystate);
#endif

  goto yybackup;
 yybackup:

/* Do appropriate processing given the current state.  */
/* Read a lookahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to lookahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* yychar is either YYEMPTY or YYEOF
     or a valid token in external form.  */

  if (yychar == YYEMPTY)
    {
#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Reading a token: ");
#endif
      yychar = YYLEX;
    }

  /* Convert token to internal form (in yychar1) for indexing tables with */

  if (yychar <= 0)		/* This means end of input. */
    {
      yychar1 = 0;
      yychar = YYEOF;		/* Don't call YYLEX any more */

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Now at end of input.\n");
#endif
    }
  else
    {
      yychar1 = YYTRANSLATE(yychar);

#if YYDEBUG != 0
      if (yydebug)
	{
	  fprintf (stderr, "Next token is %d (%s", yychar, yytname[yychar1]);
	  /* Give the individual parser a way to print the precise meaning
	     of a token, for further debugging info.  */
#ifdef YYPRINT
	  YYPRINT (stderr, yychar, yylval);
#endif
	  fprintf (stderr, ")\n");
	}
#endif
    }

  yyn += yychar1;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
    goto yydefault;

  yyn = yytable[yyn];

  /* yyn is what to do for this token type in this state.
     Negative => reduce, -yyn is rule number.
     Positive => shift, yyn is new state.
       New state is final state => don't bother to shift,
       just return success.
     0, or most negative number => error.  */

  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrlab;

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the lookahead token.  */

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting token %d (%s), ", yychar, yytname[yychar1]);
#endif

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  /* count tokens shifted since error; after three, turn off error status.  */
  if (yyerrstatus) yyerrstatus--;

  yystate = yyn;
  goto yynewstate;

/* Do the default action for the current state.  */
yydefault:

  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;

/* Do a reduction.  yyn is the number of a rule to reduce with.  */
yyreduce:
  yylen = yyr2[yyn];
  if (yylen > 0)
    yyval = yyvsp[1-yylen]; /* implement default value of the action */

#if YYDEBUG != 0
  if (yydebug)
    {
      int i;

      fprintf (stderr, "Reducing via rule %d (line %d), ",
	       yyn, yyrline[yyn]);

      /* Print the symbols being reduced, and their result.  */
      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)
	fprintf (stderr, "%s ", yytname[yyrhs[i]]);
      fprintf (stderr, " -> %s\n", yytname[yyr1[yyn]]);
    }
#endif


  switch (yyn) {

case 1:
<<<<<<< HEAD
#line 160 "msv.y"
{
			
			//验证需要的语句
			g_propositionTree=yyvsp[-1].tnode;
			g_proptree=new CSyntaxTree(g_propositionTree);    
			
			
			
=======
#line 148 "msv.y"
{

			//验证需要的语句
			g_propositionTree=yyvsp[-1].tnode;
			g_proptree=new CSyntaxTree(g_propositionTree);    //2013-5-3 add by YY[fixed]



>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
			//$2是类中定义的方法，将其加入function_tree中，实质是合并两个链
			//Annotation-Class   2013-5-6 add by YY[fixed]
			/*---------------------------------------------------------------------
			SyntaxTree  temp;
			temp = $2;
			if (temp!=NULL)
			{
					while(temp->GetChild2()!=NULL){ temp=temp->GetChild2(); };
					temp->SetChild2(function_tree);
					function_tree = $2;
			}
			---------------------------------------------------------------------*/

<<<<<<< HEAD
			
			//执行的基本语句
			g_syntaxTree=yyvsp[0].tnode;
			g_tree=new CSyntaxTree(g_syntaxTree);          //2013-5-3 add by YY[fixed]
          
		;
    break;}
case 2:
#line 190 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 3:
#line 191 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 4:
#line 195 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 5:
#line 196 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 6:
#line 197 "msv.y"
{yyval.tnode=new CSyntaxNode(IFF_STA, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 7:
#line 198 "msv.y"
{yyval.tnode=new CSyntaxNode(IMPLY_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 8:
#line 200 "msv.y"
{
			if(yyvsp[-2].tnode==NULL)                            yyval.tnode=yyvsp[0].tnode;
			else                                    yyval.tnode=new CSyntaxNode(CHOP_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);       
	   ;
    break;}
case 9:
#line 204 "msv.y"
{yyval.tnode=new CSyntaxNode(ALWAYS_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 10:
#line 205 "msv.y"
{yyval.tnode=new CSyntaxNode(KEEP_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 11:
#line 206 "msv.y"
{yyval.tnode=new CSyntaxNode(SOMETIMES_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 12:
#line 207 "msv.y"
{yyval.tnode=new CSyntaxNode(W_NEXT_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 13:
#line 208 "msv.y"
{yyval.tnode=new CSyntaxNode(NEXT_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 14:
#line 209 "msv.y"
{yyval.tnode=new CSyntaxNode(SKIP_STA, VOIDTYPE);;
    break;}
case 15:
#line 210 "msv.y"
{yyval.tnode=new CSyntaxNode(TRUE_EXP, VOIDTYPE);;
    break;}
case 16:
#line 211 "msv.y"
{yyval.tnode=new CSyntaxNode(FALSE_EXP, VOIDTYPE);;
    break;}
case 17:
#line 212 "msv.y"
{yyval.tnode=new CSyntaxNode(LENGTH_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 18:
#line 217 "msv.y"
{yyval.tnode=new CSyntaxNode(EMPTY_EXP, VOIDTYPE);;
    break;}
case 19:
#line 218 "msv.y"
{yyval.tnode=new CSyntaxNode(MORE_STA, VOIDTYPE);;
    break;}
case 20:
#line 219 "msv.y"
{yyval.tnode=new CSyntaxNode(HALT_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 21:
#line 220 "msv.y"
{yyval.tnode=new CSyntaxNode(FINAL_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 22:
#line 221 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 23:
#line 223 "msv.y"
{
			yyval.tnode=new CSyntaxNode(PROJECTION_STA, yyvsp[-6].tnode, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);                         
	   ;
    break;}
case 24:
#line 226 "msv.y"
{yyval.tnode=new CSyntaxNode(IDENT_EXP, yyvsp[0].cString, NULL, VOIDTYPE);
    break;}
case 25:
#line 228 "msv.y"
{
			yyval.tnode=NULL;
			propositionDefineTree=new CSyntaxNode(FUNCTION_DEFINE_STA, yyvsp[-2].cString, yyvsp[0].tnode, propositionDefineTree, NULL, VOIDTYPE);			
	   ;
    break;}
case 26:
#line 232 "msv.y"
{yyval.tnode=new CSyntaxNode(CHOPSTAR_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 27:
#line 233 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 28:
#line 238 "msv.y"
=======

			//执行的基本语句
			g_syntaxTree=yyvsp[0].tnode;
			g_tree=new CSyntaxTree(g_syntaxTree);          //2013-5-3 add by YY[fixed]

		;
    break;}
case 2:
#line 178 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 3:
#line 179 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 4:
#line 183 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 5:
#line 184 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 6:
#line 185 "msv.y"
{yyval.tnode=new CSyntaxNode(IFF_STA, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 7:
#line 186 "msv.y"
{yyval.tnode=new CSyntaxNode(IMPLY_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 8:
#line 188 "msv.y"
{
			if(yyvsp[-2].tnode==NULL)                            yyval.tnode=yyvsp[0].tnode;
			else                                    yyval.tnode=new CSyntaxNode(CHOP_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);       //$$=new CSyntaxNode(CHOP_STA, "", 0, $1, $3);
	   ;
    break;}
case 9:
#line 192 "msv.y"
{yyval.tnode=new CSyntaxNode(ALWAYS_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 10:
#line 193 "msv.y"
{yyval.tnode=new CSyntaxNode(KEEP_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 11:
#line 194 "msv.y"
{yyval.tnode=new CSyntaxNode(SOMETIMES_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 12:
#line 195 "msv.y"
{yyval.tnode=new CSyntaxNode(W_NEXT_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 13:
#line 196 "msv.y"
{yyval.tnode=new CSyntaxNode(NEXT_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 14:
#line 197 "msv.y"
{yyval.tnode=new CSyntaxNode(SKIP_STA, VOIDTYPE);;
    break;}
case 15:
#line 198 "msv.y"
{yyval.tnode=new CSyntaxNode(TRUE_EXP, VOIDTYPE);;
    break;}
case 16:
#line 199 "msv.y"
{yyval.tnode=new CSyntaxNode(FALSE_EXP, VOIDTYPE);;
    break;}
case 17:
#line 200 "msv.y"
{yyval.tnode=new CSyntaxNode(LENGTH_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 18:
#line 204 "msv.y"
{yyval.tnode=new CSyntaxNode(LENGTH_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 19:
#line 205 "msv.y"
{yyval.tnode=new CSyntaxNode(EMPTY_EXP, VOIDTYPE);;
    break;}
case 20:
#line 206 "msv.y"
{yyval.tnode=new CSyntaxNode(MORE_STA, VOIDTYPE);;
    break;}
case 21:
#line 207 "msv.y"
{yyval.tnode=new CSyntaxNode(HALT_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 22:
#line 208 "msv.y"
{yyval.tnode=new CSyntaxNode(FINAL_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 23:
#line 209 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 24:
#line 211 "msv.y"
{
			yyval.tnode=new CSyntaxNode(PROJECTION_STA, yyvsp[-6].tnode, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);                                //$$=new CSyntaxNode(PROJECTION_STA, "", 0, $2, $3, $7);
	   ;
    break;}
case 25:
#line 214 "msv.y"
{yyval.tnode=new CSyntaxNode(IDENT_EXP, yyvsp[0].cString, NULL, VOIDTYPE);
    break;}
case 26:
#line 216 "msv.y"
{
			yyval.tnode=NULL;
			propositionDefineTree=new CSyntaxNode(FUNCTION_DEFINE_STA, yyvsp[-2].cString, yyvsp[0].tnode, propositionDefineTree, NULL, VOIDTYPE);
	   ;
    break;}
case 27:
#line 220 "msv.y"
{yyval.tnode=new CSyntaxNode(CHOPSTAR_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 28:
#line 221 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 29:
#line 226 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
			yyval.tnode = new CSyntaxNode(PROJECTION_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);                      //$$ = new CSyntaxNode(PROJECTION_STA, "", 0, $2, $3);
	   ;
    break;}
<<<<<<< HEAD
case 29:
#line 241 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 30:
#line 246 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 31:
#line 248 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 32:
#line 256 "msv.y"
{
			//结构体(struct)定义 暂时规定struct只能在最开始定义
			
			// 两个都是struct定义语句
=======
case 30:
#line 229 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 31:
#line 232 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 32:
#line 238 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 33:
#line 240 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 34:
#line 248 "msv.y"
{
			//结构体(struct)定义 暂时规定struct只能在最开始定义

			//add by YY 2013/11/20 两个都是struct定义语句
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
			if(NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()==STRUCT_DEFINE_STA && NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()==STRUCT_DEFINE_STA)
			{
			    if(yyvsp[-2].tnode->FindSameName(yyvsp[0].tnode->GetNName()) )
					{  yyerror("Structs have the same name");
					   yyval.tnode=yyvsp[-2].tnode;
					}
<<<<<<< HEAD
				else 
=======
				else
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
				    {
					  yyvsp[0].tnode->SetChild1(yyvsp[-2].tnode);
					  yyval.tnode=yyvsp[0].tnode;
					}
			}
<<<<<<< HEAD
			// 第一个是struct定义语句，第二个是执行语句
=======
			//add by YY 2013/11/20 第一个是struct定义语句，第二个是执行语句
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
			if(NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()==STRUCT_DEFINE_STA && NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()!=STRUCT_DEFINE_STA )
			{
				struct_tree=yyvsp[-2].tnode;
				yyval.tnode=yyvsp[0].tnode;
			}
<<<<<<< HEAD
			// 第一个是执行语句，第二个是struct定义语句
			if( NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()!=STRUCT_DEFINE_STA  && yyvsp[-2].tnode->GetNType()!=FUNCTION_DEFINE_STA &&  
			    NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()==STRUCT_DEFINE_STA)
			{
				        if(NULL==struct_tree) 
=======
			//add by YY 2013/11/20 第一个是执行语句，第二个是struct定义语句
			if( NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()!=STRUCT_DEFINE_STA  && yyvsp[-2].tnode->GetNType()!=FUNCTION_DEFINE_STA &&
			    NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()==STRUCT_DEFINE_STA)
			{
				        if(NULL==struct_tree)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
						{
							struct_tree=yyvsp[0].tnode;
						}
					    else
						{
							if(struct_tree->FindSameName(yyvsp[0].tnode->GetNName()))
							{
									yyerror("Structs have the same name");
								    yyval.tnode=yyvsp[-2].tnode;
							}
							else
							{
								CSyntaxNode* p = struct_tree;
								while(p->GetChild1()!=NULL)
								p=p->GetChild1();
								p->SetChild1(yyvsp[0].tnode);
								yyval.tnode=yyvsp[-2].tnode;
							}
						}
			}

			//两个都是函数声明语句
			if(NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()==FUNCTION_DEFINE_STA && NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()==FUNCTION_DEFINE_STA )
			{
				if(yyvsp[-2].tnode->FindSameName(yyvsp[0].tnode->GetNName()) )
					{  yyerror("Functions or predicates have the same name");
					   yyval.tnode=yyvsp[-2].tnode;
					}
				else
				    {
					  yyvsp[0].tnode->SetChild2(yyvsp[-2].tnode);
					  yyval.tnode=yyvsp[0].tnode;
					}
			}
			//第一个是函数声明语句，第二个是执行语句
			if(NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()==FUNCTION_DEFINE_STA && NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()!=FUNCTION_DEFINE_STA)
			{
				function_tree=yyvsp[-2].tnode;
                yyval.tnode=yyvsp[0].tnode;
			}

			//两个都是执行语句
			if( NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()!=FUNCTION_DEFINE_STA &&  yyvsp[-2].tnode->GetNType()!=STRUCT_DEFINE_STA &&
			    NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()!=FUNCTION_DEFINE_STA &&  yyvsp[0].tnode->GetNType()!=STRUCT_DEFINE_STA)
			{
				yyval.tnode=new CSyntaxNode(CHOP_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);
			}

<<<<<<< HEAD
			//第一个是执行语句，第二个是声明语句  
			//problem: 整个程序的第一句必须是声明语句才可以    
=======
			//第一个是执行语句，第二个是声明语句  2013-4-17 add by YY[fixed]
			//problem: 整个程序的第一句必须是声明语句才可以
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
			if( NULL!=yyvsp[-2].tnode && yyvsp[-2].tnode->GetNType()!=FUNCTION_DEFINE_STA   &&  yyvsp[-2].tnode->GetNType()!=STRUCT_DEFINE_STA &&
			    NULL!=yyvsp[0].tnode && yyvsp[0].tnode->GetNType()==FUNCTION_DEFINE_STA)
				{
				        if(NULL==function_tree)
						{
							function_tree=yyvsp[0].tnode;
						}
					    else
						{
							if(function_tree->FindSameName(yyvsp[0].tnode->GetNName()))
							{
									yyerror("Functions or predicates have the same name");
								    yyval.tnode=yyvsp[-2].tnode;
							}
							else
							{
								CSyntaxNode* p = function_tree;
								while(p->GetChild2()!=NULL)
								p=p->GetChild2();
								p->SetChild2(yyvsp[0].tnode);
								yyval.tnode=yyvsp[-2].tnode;
							}
						}
<<<<<<< HEAD
					
				}								
	   ;
    break;}
case 33:
#line 361 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 34:
#line 363 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 35:
#line 365 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 36:
#line 366 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 37:
#line 367 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 38:
#line 368 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 39:
#line 369 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 40:
#line 370 "msv.y"
{yyval.tnode=new CSyntaxNode(NEXT_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 41:
#line 372 "msv.y"
{yyval.tnode=new CSyntaxNode(KEEP_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 42:
#line 373 "msv.y"
{yyval.tnode=new CSyntaxNode(ALWAYS_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 43:
#line 375 "msv.y"
{yyval.tnode=new CSyntaxNode(AWAIT_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 44:
#line 376 "msv.y"
{yyval.tnode=new CSyntaxNode(REPEAT_UNTIL_STA, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 45:
#line 377 "msv.y"
{yyval.tnode=new CSyntaxNode(SKIP_STA, VOIDTYPE);;
    break;}
case 46:
#line 378 "msv.y"
{yyval.tnode=new CSyntaxNode(EMPTY_EXP, VOIDTYPE);;
    break;}
case 47:
#line 379 "msv.y"
{yyval.tnode=new CSyntaxNode(MORE_STA, VOIDTYPE);;
    break;}
case 48:
#line 380 "msv.y"
{yyval.tnode=new CSyntaxNode(LENGTH_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 49:
#line 386 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 50:
#line 387 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 51:
#line 388 "msv.y"
{yyval.tnode=new CSyntaxNode(TRUE_EXP, VOIDTYPE);;
    break;}
case 52:
#line 389 "msv.y"
{yyval.tnode=new CSyntaxNode(FALSE_EXP, VOIDTYPE);;
    break;}
case 53:
#line 390 "msv.y"
{yyval.tnode=new CSyntaxNode(FINAL_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 54:
#line 391 "msv.y"
{yyval.tnode=new CSyntaxNode(PARALLEL_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 55:
#line 394 "msv.y"
{yyval.tnode=new CSyntaxNode(IMPLY_STA, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 56:
#line 397 "msv.y"
=======

				}
	   ;
    break;}
case 35:
#line 352 "msv.y"
{yyval.tnode=new CSyntaxNode(PREFIX_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 36:
#line 353 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 37:
#line 354 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 38:
#line 355 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 39:
#line 358 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 40:
#line 359 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 41:
#line 360 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 42:
#line 361 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 43:
#line 362 "msv.y"
{yyval.tnode=new CSyntaxNode(NEXT_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 44:
#line 363 "msv.y"
{yyval.tnode=new CSyntaxNode(W_NEXT_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 45:
#line 364 "msv.y"
{yyval.tnode=new CSyntaxNode(KEEP_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 46:
#line 365 "msv.y"
{yyval.tnode=new CSyntaxNode(ALWAYS_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 47:
#line 366 "msv.y"
{yyval.tnode=new CSyntaxNode(HALT_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 48:
#line 367 "msv.y"
{yyval.tnode=new CSyntaxNode(AWAIT_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 49:
#line 368 "msv.y"
{yyval.tnode=new CSyntaxNode(REPEAT_UNTIL_STA, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 50:
#line 369 "msv.y"
{yyval.tnode=new CSyntaxNode(SKIP_STA, VOIDTYPE);;
    break;}
case 51:
#line 370 "msv.y"
{yyval.tnode=new CSyntaxNode(EMPTY_EXP, VOIDTYPE);;
    break;}
case 52:
#line 371 "msv.y"
{yyval.tnode=new CSyntaxNode(MORE_STA, VOIDTYPE);;
    break;}
case 53:
#line 372 "msv.y"
{yyval.tnode=new CSyntaxNode(LENGTH_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 54:
#line 378 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 55:
#line 379 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 56:
#line 380 "msv.y"
{yyval.tnode=new CSyntaxNode(TRUE_EXP, VOIDTYPE);;
    break;}
case 57:
#line 381 "msv.y"
{yyval.tnode=new CSyntaxNode(FALSE_EXP, VOIDTYPE);;
    break;}
case 58:
#line 382 "msv.y"
{yyval.tnode=new CSyntaxNode(FINAL_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 59:
#line 383 "msv.y"
{yyval.tnode=new CSyntaxNode(PARALLEL_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 60:
#line 386 "msv.y"
{yyval.tnode=new CSyntaxNode(IMPLY_STA, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 61:
#line 389 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
			yyval.tnode=new CSyntaxNode(FRAME_STA, yyvsp[-6].tnode, yyvsp[-5].tnode, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
<<<<<<< HEAD
case 57:
#line 403 "msv.y"
=======
case 62:
#line 395 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
			yyval.tnode=new CSyntaxNode(PROJECTION_STA, yyvsp[-4].tnode, yyvsp[-3].tnode, yyvsp[0].tnode,VOIDTYPE);
	   ;
    break;}
<<<<<<< HEAD
case 58:
#line 407 "msv.y"
=======
case 63:
#line 400 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
			yyval.tnode=new CSyntaxNode(PROJECTION_STA, yyvsp[-3].tnode, NULL, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
<<<<<<< HEAD
case 59:
#line 416 "msv.y"
{ 
			yyval.tnode=new CSyntaxNode(FUNCTION_DEFINE_STA , yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);
	   ;
    break;}
case 60:
#line 424 "msv.y"
=======
case 64:
#line 409 "msv.y"
{
			yyval.tnode=new CSyntaxNode(FUNCTION_DEFINE_STA , yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);
	   ;
    break;}
case 65:
#line 417 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
			yyval.tnode=new CSyntaxNode(FUNCTION_DEFINE_STA, yyvsp[-6].cString, yyvsp[-4].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);
	   ;
    break;}
<<<<<<< HEAD
case 61:
#line 428 "msv.y"
{ 
			yyval.tnode=new CSyntaxNode(FUNCTION_DEFINE_STA, yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);
	   ;
    break;}
case 63:
#line 433 "msv.y"
{
            yyval.tnode=new CSyntaxNode(FREE_STA, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 64:
#line 437 "msv.y"
{
	        yyval.tnode=new CSyntaxNode(SYSTEM_STA, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 65:
#line 441 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 66:
#line 444 "msv.y"
=======
case 66:
#line 421 "msv.y"
{
			yyval.tnode=new CSyntaxNode(FUNCTION_DEFINE_STA, yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);
	   ;
    break;}
case 68:
#line 426 "msv.y"
{
            yyval.tnode=new CSyntaxNode(FREE_STA, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 69:
#line 430 "msv.y"
{
	        yyval.tnode=new CSyntaxNode(SYSTEM_STA, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 70:
#line 434 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	   ;
    break;}
case 71:
#line 438 "msv.y"
{
			yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[-3].tnode, yyvsp[-1].tnode, CHANNELRTYPE);
	   ;
    break;}
case 72:
#line 442 "msv.y"
{
			CSyntaxNode *t1=new CSyntaxNode(S_AWAIT, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			CSyntaxNode *t2=new CSyntaxNode(S_UNIT_ASSIGN, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(CHOP_STA, t1, t2, VOIDTYPE);
	   ;
    break;}
case 73:
#line 448 "msv.y"
{
			CSyntaxNode *t1=new CSyntaxNode(S_IF_ELSE, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			CSyntaxNode *t2=new CSyntaxNode(S_UNIT_ASSIGN, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			CSyntaxNode *t3=new CSyntaxNode(SKIP_STA, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(IF_ELSE_STA, t1, t2, t3, VOIDTYPE);
	   ;
    break;}
case 74:
#line 455 "msv.y"
{
			CSyntaxNode *t1=new CSyntaxNode(R_AWAIT, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			CSyntaxNode *t2=new CSyntaxNode(R_UNIT_ASSIGN, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(CHOP_STA, t1, t2, VOIDTYPE);
	   ;
    break;}
case 75:
#line 461 "msv.y"
{
			CSyntaxNode *t1=new CSyntaxNode(R_IF_ELSE, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			CSyntaxNode *t2=new CSyntaxNode(R_UNIT_ASSIGN, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);
			CSyntaxNode *t3=new CSyntaxNode(SKIP_STA, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(IF_ELSE_STA, t1, t2, t3, VOIDTYPE);
	   ;
    break;}
case 76:
#line 468 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 77:
#line 471 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
			CSyntaxNode * p;
//			$6->par_change($2->m_NodeName, LOCAL_IDENT_EXP);
			p=yyvsp[-4].tnode;

			while(p!=NULL)
			{
//				$6->par_change(p->GetChild0()->GetNName(), LOCAL_IDENT_EXP);
				p=p->GetChild0();
			}

			yyval.tnode=new CSyntaxNode(EXIST_STA, yyvsp[-5].tnode, yyvsp[-4].tnode, yyvsp[-1].tnode,VOIDTYPE);
	   ;
    break;}
<<<<<<< HEAD
case 67:
#line 457 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 68:
#line 462 "msv.y"
=======
case 78:
#line 484 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 79:
#line 485 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 80:
#line 489 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
	      yyval.tnode=yyvsp[0].tnode;
		;
    break;}
<<<<<<< HEAD
case 69:
#line 466 "msv.y"
=======
case 81:
#line 493 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{
		   yyval.tnode=new CSyntaxNode(AND_EXP,yyvsp[-2].tnode,yyvsp[0].tnode,VOIDTYPE);
		;
    break;}
<<<<<<< HEAD
case 70:
#line 472 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 71:
#line 473 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 72:
#line 479 "msv.y"
{
	        // 暂时不考虑带成员函数 .的函数调用
			yyval.tnode=new CSyntaxNode(FUNCTION_STA, yyvsp[-3].cString, yyvsp[-1].tnode, NULL, NULL, VOIDTYPE);//构造调用函数的程序语法树子树          
	   ;
    break;}
case 73:
#line 484 "msv.y"
{
	        //Annotate by YY 2013/11/20 暂时不考虑带成员函数 .的函数调用
			yyval.tnode=new CSyntaxNode(FUNCTION_STA, yyvsp[-3].tnode, yyvsp[-1].tnode, NULL, FUNCPTYPE);//通过函数指针数组调用函数
	   ;
    break;}
case 74:
#line 488 "msv.y"
{ yyval.tnode=yyvsp[0].tnode; ;
    break;}
case 75:
#line 489 "msv.y"
{ yyval.tnode=yyvsp[0].tnode; ;
    break;}
case 76:
#line 495 "msv.y"
{
           CSyntaxNode* temp=yyvsp[-3].tnode;
		   string structName=temp->GetNName();
           yyval.tnode=new CSyntaxNode(STRUCT_DEFINE_STA, structName, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 77:
#line 503 "msv.y"
{
			if(!g_StructNameMap.insert(yyvsp[0].cString))
			{
			    yyerror("Redefinition of struct");
			}
			else
			{
			    yyval.tnode=new CSyntaxNode(STRUCT_NAME, yyvsp[0].cString, STRUCT_NAME_TYPE);
			}
	   ;
    break;}
case 78:
#line 514 "msv.y"
{
	       if(!g_StructNameMap.insert(yyvsp[0].cString))
			{
			    yyerror("Redefinition of union");
			}
			else
			{
			    yyval.tnode=new CSyntaxNode(STRUCT_NAME, yyvsp[0].cString, STRUCT_NAME_TYPE);
			}
	   ;
    break;}
case 79:
#line 527 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 80:
#line 528 "msv.y"
{yyval.tnode=new CSyntaxNode(UNSIGN_DECLARATION_STA, yyvsp[0].tnode, VOIDTYPE); ;
    break;}
case 81:
#line 529 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 82:
#line 534 "msv.y"
{
	      yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[0].tnode, yyvsp[-1].returntype);
		;
    break;}
case 83:
#line 538 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
		;
    break;}
case 84:
#line 542 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 85:
#line 546 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 86:
#line 550 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 87:
#line 554 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 88:
#line 560 "msv.y"
{yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[-4].tnode, FUNCPTYPE);;
    break;}
case 89:
#line 562 "msv.y"
{yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[-4].tnode, FUNCPPTYPE);;
    break;}
case 90:
#line 565 "msv.y"
{
	       CSyntaxNode *pChild0=new CSyntaxNode(PARAMETER_EXP,new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-8].cString, yyvsp[-6].tnode, yyvsp[-5].tnode, NULL, LISTTYPE), VOIDTYPE);
	       yyval.tnode=new CSyntaxNode(DECLARE_STA, pChild0, FUNCPTYPE);
	   ;
    break;}
case 91:
#line 570 "msv.y"
{
	       CSyntaxNode *pChild0_Child0=new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-10].cString, yyvsp[-8].tnode, yyvsp[-7].tnode, NULL, LISTTYPE);
		   CSyntaxNode *pChild0=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, pChild0_Child0, yyvsp[0].tnode, VOIDTYPE), VOIDTYPE);
		   yyval.tnode=new CSyntaxNode(DECLARE_STA, pChild0, FUNCPTYPE);
		   pChild0=NULL;
		   pChild0_Child0=NULL;
	   ;
    break;}
case 92:
#line 581 "msv.y"
{yyval.returntype=INTTYPE;;
    break;}
case 93:
#line 582 "msv.y"
{yyval.returntype=FLOATTYPE;;
    break;}
case 94:
#line 583 "msv.y"
{yyval.returntype=CHARTYPE;;
    break;}
case 95:
#line 586 "msv.y"
{yyval.returntype=STRTYPE;;
    break;}
case 96:
#line 587 "msv.y"
{yyval.returntype=VOIDTYPE;;
    break;}
case 97:
#line 588 "msv.y"
{yyval.returntype=FILETYPE;;
    break;}
case 98:
#line 596 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 99:
#line 600 "msv.y"
{
	       yyval.tnode=new CSyntaxNode(PARAMETER_EXP,new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-5].cString, yyvsp[-3].tnode, yyvsp[-2].tnode, NULL, LISTTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 100:
#line 604 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 101:
#line 609 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, new CSyntaxNode(ARRAY_DECLARE_NULL_STA, yyvsp[-4].cString, NULL, NULL, NULL, LISTTYPE), yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 102:
#line 615 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, new CSyntaxNode(ARRAY_DECLARE_NULL_STA, yyvsp[-4].cString, NULL, NULL, NULL, LISTTYPE), yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 103:
#line 620 "msv.y"
{
	       CSyntaxNode *pChild0=new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-4].tnode, NULL, LISTTYPE);
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, pChild0, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		   pChild0=NULL;
	    ;
    break;}
case 104:
#line 627 "msv.y"
{
	       CSyntaxNode *pChild0=new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-4].tnode, NULL, LISTTYPE);
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, pChild0, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		   pChild0=NULL;
	   ;
    break;}
case 105:
#line 633 "msv.y"
{
	      CSyntaxNode* pChild0=new CSyntaxNode(ADDRESS_DECLARE_STA,yyvsp[0].tnode->GetChild0(),VOIDTYPE);
          yyval.tnode=yyvsp[0].tnode;
		  yyvsp[0].tnode->SetChild0(pChild0);
		  pChild0=NULL;
	   ;
    break;}
case 106:
#line 644 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 107:
#line 645 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 108:
#line 646 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 109:
#line 651 "msv.y"
{
	        yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(LIST_DECLARE_STA, yyvsp[-5].cString, yyvsp[-3].tnode, yyvsp[-2].tnode, NULL, LISTTYPE), yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 110:
#line 658 "msv.y"
{
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(LIST_DECLARE_STA, yyvsp[-5].cString, yyvsp[-3].tnode, yyvsp[-2].tnode, NULL, LISTTYPE), yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 111:
#line 661 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 112:
#line 662 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 113:
#line 670 "msv.y"
{yyval.tnode=new CSyntaxNode(FOPEN_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 114:
#line 672 "msv.y"
{yyval.tnode=new CSyntaxNode(FGETS_EXP,yyvsp[-5].tnode,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 115:
#line 674 "msv.y"
{yyval.tnode=new CSyntaxNode(FGETC_EXP,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 116:
#line 676 "msv.y"
{yyval.tnode=new CSyntaxNode(FPUTS_EXP,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 117:
#line 678 "msv.y"
{yyval.tnode=new CSyntaxNode(FPUTC_EXP,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 118:
#line 680 "msv.y"
{yyval.tnode=new CSyntaxNode(FPUTC_EXP,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 119:
#line 682 "msv.y"
{yyval.tnode=new CSyntaxNode(FCLOSE_EXP,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 120:
#line 694 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 121:
#line 697 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 122:
#line 698 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 123:
#line 699 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 124:
#line 700 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 125:
#line 701 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 126:
#line 702 "msv.y"
{yyval.tnode=new CSyntaxNode(NEXT_STA, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 127:
#line 703 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 128:
#line 707 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 129:
#line 709 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 130:
#line 711 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 131:
#line 713 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, FLOATTYPE);;
    break;}
case 132:
#line 715 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 133:
#line 717 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 134:
#line 719 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 135:
#line 721 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 136:
#line 723 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 137:
#line 725 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 138:
#line 727 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 139:
#line 729 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 140:
#line 731 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 141:
#line 735 "msv.y"
{yyval.nodetype=ASS_EQU_EXP;;
    break;}
case 142:
#line 736 "msv.y"
{yyval.nodetype=UNITASSIGN_EXP;;
    break;}
case 143:
#line 739 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 144:
#line 740 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 145:
#line 741 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 146:
#line 745 "msv.y"
{yyval.tnode=new CSyntaxNode(DLL_CALL_STA, yyvsp[-8].tnode, yyvsp[0].tnode, yyvsp[-5].returntype);;
    break;}
case 147:
#line 746 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 148:
#line 747 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 149:
#line 750 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 150:
#line 754 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-4].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 151:
#line 760 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 152:
#line 762 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 153:
#line 764 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 154:
#line 766 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 155:
#line 768 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 156:
#line 769 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 157:
#line 774 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SUBSCRIPT_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 158:
#line 775 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 159:
#line 776 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 160:
#line 782 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 161:
#line 783 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 162:
#line 785 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[0].tnode,  UNKNOWNTYPE);;
    break;}
case 163:
#line 787 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_LIST_EXP, yyvsp[-5].tnode, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 164:
#line 789 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR, yyvsp[0].tnode, yyvsp[-3].returntype);;
    break;}
case 165:
#line 791 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 166:
#line 792 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 167:
#line 798 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 168:
#line 799 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 169:
#line 800 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 170:
#line 802 "msv.y"
{
            yyval.tnode = new CSyntaxNode(IF_ELSE_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, ARITHMETICTYPE);
       ;
    break;}
case 171:
#line 807 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 172:
#line 808 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 173:
#line 812 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 174:
#line 813 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 175:
#line 817 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 176:
#line 818 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 177:
#line 823 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 178:
#line 824 "msv.y"
{yyval.tnode=new CSyntaxNode(MINUS_EXP, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 179:
#line 825 "msv.y"
{yyval.tnode=new CSyntaxNode(BNE_EXP, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 180:
#line 826 "msv.y"
{yyval.tnode=new CSyntaxNode(NULL_EXP, VOIDTYPE);;
    break;}
case 181:
#line 827 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 182:
#line 829 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 183:
#line 830 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 184:
#line 831 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 185:
#line 832 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 186:
#line 833 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 187:
#line 834 "msv.y"
{yyval.tnode=yyvsp[0].tnode;
    break;}
case 188:
#line 835 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 189:
#line 836 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 190:
#line 837 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 191:
#line 838 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 192:
#line 839 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 193:
#line 845 "msv.y"
{yyval.nodetype=MUL_EXP;;
    break;}
case 194:
#line 846 "msv.y"
{yyval.nodetype=DIV_EXP;;
    break;}
case 195:
#line 847 "msv.y"
{yyval.nodetype=MOD_EXP;;
    break;}
case 196:
#line 848 "msv.y"
{yyval.nodetype=LST_EXP;;
    break;}
case 197:
#line 849 "msv.y"
{yyval.nodetype=RST_EXP;;
    break;}
case 198:
#line 850 "msv.y"
{yyval.nodetype=BAN_EXP;;
    break;}
case 199:
#line 851 "msv.y"
{yyval.nodetype=BOR_EXP;;
    break;}
case 200:
#line 852 "msv.y"
{yyval.nodetype=XOR_EXP;;
    break;}
case 201:
#line 855 "msv.y"
{yyval.nodetype=ADD_EXP;;
    break;}
case 202:
#line 856 "msv.y"
{yyval.nodetype=SUB_EXP;;
    break;}
case 203:
#line 860 "msv.y"
{yyval.tnode=new CSyntaxNode(CON_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, LISTTYPE);;
    break;}
case 204:
#line 861 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 205:
#line 862 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 206:
#line 863 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 207:
#line 870 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
		;
    break;}
case 208:
#line 874 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 209:
#line 882 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 210:
#line 894 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
		;
    break;}
case 211:
#line 898 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 212:
#line 907 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 213:
#line 919 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);//INTEGER_EXP Jane
	   ;
    break;}
case 214:
#line 923 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);
	   ;
    break;}
case 215:
#line 931 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);
	   ;
    break;}
case 216:
#line 934 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 217:
#line 935 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 218:
#line 940 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE);
			;
    break;}
case 219:
#line 944 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE);
			;
    break;}
case 220:
#line 948 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE );
			;
    break;}
case 221:
#line 953 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE);
			;
    break;}
case 222:
#line 956 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 223:
#line 965 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, INTTYPE);;
    break;}
case 224:
#line 966 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 225:
#line 967 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, CHARTYPE);;
    break;}
case 226:
#line 970 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, INTTYPE);;
    break;}
case 227:
#line 971 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, CHARTYPE);;
    break;}
case 228:
#line 974 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UINTTYPE);;
    break;}
case 229:
#line 975 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UCHARTYPE);;
    break;}
case 230:
#line 978 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, INTPTYPE);;
    break;}
case 231:
#line 979 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UINTPTYPE);;
    break;}
case 232:
#line 980 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, FLOATPTYPE);;
    break;}
case 233:
#line 981 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, CHARPTYPE);;
    break;}
case 234:
#line 982 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UCHARPTYPE);;
    break;}
case 235:
#line 983 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, VOIDPTYPE);;
    break;}
case 236:
#line 986 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEINTPTYPE);;
    break;}
case 237:
#line 987 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEUINTPTYPE);;
    break;}
case 238:
#line 988 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEFLOATPTYPE);;
    break;}
case 239:
#line 989 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLECHARPTYPE);;
    break;}
case 240:
#line 990 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEUCHARPTYPE);;
    break;}
case 241:
#line 991 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, VOIDPTYPE);;
    break;}
case 242:
#line 993 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[-3].cString, yyvsp[0].tnode, STRUCTPTYPE);;
    break;}
case 243:
#line 994 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[-3].cString, yyvsp[0].tnode, STRUCTPTYPE);;
    break;}
case 244:
#line 996 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[-4].cString, yyvsp[0].tnode, DOUBLESTRUCTPTYPE);;
    break;}
case 245:
#line 997 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[-4].cString, yyvsp[0].tnode, DOUBLESTRUCTPTYPE);;
    break;}
case 246:
#line 999 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 247:
#line 1000 "msv.y"
{yyval.tnode=new CSyntaxNode(MALLOC_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 248:
#line 1005 "msv.y"
{yyval.returntype=yyvsp[0].returntype;;
    break;}
case 249:
#line 1006 "msv.y"
{yyval.returntype=INTPTYPE;;
    break;}
case 250:
#line 1007 "msv.y"
{yyval.returntype=FLOATPTYPE;;
    break;}
case 251:
#line 1008 "msv.y"
{yyval.returntype=CHARPTYPE;;
    break;}
case 252:
#line 1009 "msv.y"
{yyval.returntype=UINTPTYPE;;
    break;}
case 253:
#line 1010 "msv.y"
{yyval.returntype=UCHARPTYPE;;
    break;}
case 254:
#line 1011 "msv.y"
{yyval.returntype=STRUCTPTYPE;;
    break;}
case 255:
#line 1012 "msv.y"
{yyval.returntype=STRUCTPTYPE;;
    break;}
case 256:
#line 1017 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 257:
#line 1018 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].returntype);;
    break;}
case 258:
#line 1019 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].cString, STRUCTTYPE);;
    break;}
case 259:
#line 1020 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].tnode, STRTYPE);;
    break;}
case 260:
#line 1026 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 261:
#line 1027 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 262:
#line 1028 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 263:
#line 1029 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 264:
#line 1030 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 265:
#line 1031 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 266:
#line 1036 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCHEAD_EXP, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 267:
#line 1043 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCTAIL_EXP, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 268:
#line 1050 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCCAT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 269:
#line 1057 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCCMP_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 270:
#line 1064 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCCPY_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 271:
#line 1071 "msv.y"
{
						yyval.tnode=new CSyntaxNode(STRFUNCLEN_EXP, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 272:
#line 1077 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 273:
#line 1078 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 274:
#line 1079 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 275:
#line 1080 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 276:
#line 1081 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 277:
#line 1082 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 278:
#line 1089 "msv.y"
{yyval.tnode=new CSyntaxNode(ROUND_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 279:
#line 1092 "msv.y"
{yyval.tnode=new CSyntaxNode(CEIL_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 280:
#line 1095 "msv.y"
{yyval.tnode=new CSyntaxNode(FLOOR_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 281:
#line 1098 "msv.y"
{yyval.tnode=new CSyntaxNode(SIN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 282:
#line 1099 "msv.y"
{yyval.tnode=new CSyntaxNode(COS_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 283:
#line 1100 "msv.y"
{yyval.tnode=new CSyntaxNode(TAN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 284:
#line 1101 "msv.y"
{yyval.tnode=new CSyntaxNode(ASIN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 285:
#line 1102 "msv.y"
{yyval.tnode=new CSyntaxNode(ACOS_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 286:
#line 1103 "msv.y"
{yyval.tnode=new CSyntaxNode(ATAN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 287:
#line 1106 "msv.y"
{yyval.tnode=new CSyntaxNode(SINH_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 288:
#line 1107 "msv.y"
{yyval.tnode=new CSyntaxNode(COSH_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 289:
#line 1108 "msv.y"
{yyval.tnode=new CSyntaxNode(TANH_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 290:
#line 1111 "msv.y"
{yyval.tnode=new CSyntaxNode(EXP_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 291:
#line 1112 "msv.y"
{yyval.tnode=new CSyntaxNode(LOG_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 292:
#line 1113 "msv.y"
{yyval.tnode=new CSyntaxNode(LOG10_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 293:
#line 1114 "msv.y"
{yyval.tnode=new CSyntaxNode(SQRT_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 294:
#line 1117 "msv.y"
{yyval.tnode=new CSyntaxNode(ATAN2_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 295:
#line 1118 "msv.y"
{yyval.tnode=new CSyntaxNode(POW_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 296:
#line 1121 "msv.y"
{yyval.tnode=new CSyntaxNode(FMOD_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 297:
#line 1122 "msv.y"
{yyval.tnode=new CSyntaxNode(MODF_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 298:
#line 1125 "msv.y"
{yyval.tnode=new CSyntaxNode(LDEXP_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 299:
#line 1127 "msv.y"
{yyval.tnode=new CSyntaxNode(ABS_EXP, yyvsp[0].tnode, INTTYPE);;
    break;}
case 300:
#line 1128 "msv.y"
{yyval.tnode=new CSyntaxNode(FABS_EXP, yyvsp[0].tnode, INTTYPE);;
    break;}
case 301:
#line 1129 "msv.y"
{yyval.tnode=new CSyntaxNode(LABS_EXP, yyvsp[0].tnode, INTTYPE);;
    break;}
case 302:
#line 1135 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 303:
#line 1136 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 304:
#line 1137 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 305:
#line 1138 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 306:
#line 1139 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 307:
#line 1145 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 308:
#line 1147 "msv.y"
{yyval.tnode=new CSyntaxNode(TRUE_EXP, BOOLTYPE);;
    break;}
case 309:
#line 1148 "msv.y"
{yyval.tnode=new CSyntaxNode(FALSE_EXP, BOOLTYPE);;
    break;}
case 310:
#line 1151 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 311:
#line 1154 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 312:
#line 1155 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 313:
#line 1158 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 314:
#line 1159 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 315:
#line 1162 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, new CSyntaxNode(NULL_EXP, VOIDTYPE), BOOLTYPE);;
    break;}
case 316:
#line 1163 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, new CSyntaxNode(NULL_EXP, VOIDTYPE), BOOLTYPE);;
    break;}
case 317:
#line 1166 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, new CSyntaxNode(NULL_EXP, VOIDTYPE), yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 318:
#line 1167 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, new CSyntaxNode(NULL_EXP, VOIDTYPE), yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 319:
#line 1170 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 320:
#line 1171 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 321:
#line 1176 "msv.y"
{yyval.nodetype=GE_EXP;;
    break;}
case 322:
#line 1177 "msv.y"
{yyval.nodetype=LE_EXP;;
    break;}
case 323:
#line 1178 "msv.y"
{yyval.nodetype=NE_EXP;;
    break;}
case 324:
#line 1179 "msv.y"
{yyval.nodetype=GT_EXP;;
    break;}
case 325:
#line 1180 "msv.y"
{yyval.nodetype=LT_EXP;;
    break;}
case 326:
#line 1181 "msv.y"
{yyval.nodetype=EQU_EXP;;
    break;}
case 327:
#line 1189 "msv.y"
{yyval.returntype=UINTTYPE;;
    break;}
case 328:
#line 1190 "msv.y"
{yyval.returntype=UCHARTYPE;;
    break;}
case 329:
#line 1194 "msv.y"
{yyval.returntype=yyvsp[0].returntype;;
    break;}
case 330:
#line 1195 "msv.y"
{yyval.returntype=yyvsp[0].returntype;;
    break;}
case 331:
#line 1202 "msv.y"
{
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, yyvsp[-2].returntype);
	   ;
    break;}
case 332:
#line 1206 "msv.y"
{
			yyval.tnode=NULL;
	   ;
    break;}
case 333:
#line 1211 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
		;
    break;}
case 334:
#line 1217 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(STRUCTP_PARAMETER_EXP, yyvsp[-3].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 335:
#line 1223 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(DOUBLESTRUCTP_PARAMETER_EXP, yyvsp[-4].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 336:
#line 1229 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 337:
#line 1239 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
		;
    break;}
case 338:
#line 1245 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(STRUCTP_PARAMETER_EXP, yyvsp[-3].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 339:
#line 1251 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(DOUBLESTRUCTP_PARAMETER_EXP, yyvsp[-4].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 340:
#line 1257 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 341:
#line 1266 "msv.y"
{
	        yyval.tnode=NULL;
		;
    break;}
case 342:
#line 1270 "msv.y"
{
	        yyval.tnode=NULL;
	   ;
    break;}
case 343:
#line 1274 "msv.y"
{
			yyval.tnode=NULL;
	   ;
    break;}
case 344:
#line 1280 "msv.y"
{
	        yyval.tnode=NULL;
		;
    break;}
case 345:
#line 1284 "msv.y"
{
	        yyval.tnode=NULL;
	   ;
    break;}
case 346:
#line 1288 "msv.y"
{
			yyval.tnode=NULL;
	   ;
    break;}
case 347:
#line 1294 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
            pChild0=NULL;
	   ;
    break;}
case 348:
#line 1300 "msv.y"
{
            CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-4].returntype);
            pChild0=NULL;
	   ;
    break;}
case 349:
#line 1308 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-4].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-5].returntype);
            pChild0=NULL;
	   ;
    break;}
case 350:
#line 1316 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-6].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-7].returntype);
            pChild0=NULL;
	   ;
    break;}
case 351:
#line 1323 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-6].returntype);
            pChild0=NULL;
	   ;
    break;}
case 352:
#line 1329 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(POINT_PARAMETER_EXP, yyvsp[-1].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
          pChild0=NULL;
		;
    break;}
case 353:
#line 1335 "msv.y"
{
	      yyval.tnode=NULL;
		;
    break;}
case 354:
#line 1339 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(DOUBLEPOINT_PARAMETER_EXP, yyvsp[-1].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-4].returntype);
          pChild0=NULL;
		;
    break;}
case 355:
#line 1346 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(FUNCP_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, FUNCPTYPE);
          pChild0=NULL;
		;
    break;}
case 356:
#line 1351 "msv.y"
{yyval.tnode = NULL;;
    break;}
case 357:
#line 1355 "msv.y"
{ 
		   yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, yyvsp[-2].returntype);
		;
    break;}
case 358:
#line 1359 "msv.y"
{ 
		   yyval.tnode = NULL;
		;
    break;}
case 359:
#line 1363 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
	   ;
    break;}
case 360:
#line 1369 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
	   ;
    break;}
case 361:
#line 1375 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(STRUCTP_PARAMETER_EXP, yyvsp[-3].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 362:
#line 1381 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 363:
#line 1388 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 364:
#line 1396 "msv.y"
{ 
		    CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
		    yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
            pChild0=NULL;
		;
    break;}
case 365:
#line 1402 "msv.y"
{ 
		    CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
		    yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-4].returntype);
            pChild0=NULL;
		;
    break;}
case 366:
#line 1417 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(FUNCP_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, FUNCPTYPE);
          pChild0=NULL;
		;
    break;}
case 367:
#line 1422 "msv.y"
{yyval.tnode = NULL;;
    break;}
case 368:
#line 1427 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-4].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-5].returntype);
            pChild0=NULL;
	   ;
    break;}
case 369:
#line 1435 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-6].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-7].returntype);
            pChild0=NULL;
	   ;
    break;}
case 370:
#line 1442 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-6].returntype);
            pChild0=NULL;
	   ;
    break;}
case 371:
#line 1448 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(POINT_PARAMETER_EXP, yyvsp[-1].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
          pChild0=NULL;
		;
    break;}
case 372:
#line 1454 "msv.y"
{
	      yyval.tnode=NULL;
		;
    break;}
case 373:
#line 1457 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 374:
#line 1467 "msv.y"
{
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 375:
#line 1471 "msv.y"
{
	        CSyntaxNode* child0=new CSyntaxNode(FUNCTION_STA, yyvsp[-4].cString, yyvsp[-2].tnode, NULL, NULL, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, child0, yyvsp[0].tnode, VOIDTYPE);
			child0=NULL;
	   ;
    break;}
case 376:
#line 1480 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 377:
#line 1481 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 378:
#line 1486 "msv.y"
{
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 379:
#line 1490 "msv.y"
{
	        CSyntaxNode* child0=new CSyntaxNode(FUNCTION_STA, yyvsp[-4].cString, yyvsp[-2].tnode, NULL, NULL, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, child0, yyvsp[0].tnode, VOIDTYPE);
			child0=NULL;
	   ;
    break;}
case 380:
#line 1499 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 381:
#line 1500 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 382:
#line 1508 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 383:
#line 1510 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 384:
#line 1517 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 385:
#line 1519 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 386:
#line 1525 "msv.y"
{yyval.tnode=new CSyntaxNode(IDENT_EXP, yyvsp[0].cString, NULL, VOIDTYPE);;
    break;}
case 387:
#line 1526 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 388:
#line 1530 "msv.y"
{yyval.tnode=new CSyntaxNode(STR_EXP, yyvsp[0].cString, STRTYPE);;
    break;}
case 389:
#line 1535 "msv.y"
{yyval.tnode=new CSyntaxNode(INTEGER_EXP, yyvsp[0].nInteger, INTTYPE);;
    break;}
case 390:
#line 1540 "msv.y"
{yyval.tnode=new CSyntaxNode(CHARLITERAL_EXP, yyvsp[0].character, CHARTYPE);;
    break;}
case 391:
#line 1545 "msv.y"
{yyval.tnode=new CSyntaxNode(FLOATLITERAL_EXP, yyvsp[0].floatval, FLOATTYPE);;
    break;}
case 392:
#line 1552 "msv.y"
{
			yyval.tnode = new CSyntaxNode( FRAME_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 393:
#line 1555 "msv.y"
{yyval.tnode = NULL;;
    break;}
case 394:
#line 1556 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 395:
#line 1562 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 396:
#line 1564 "msv.y"
{
			yyval.tnode = new CSyntaxNode( PROJECTION_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 397:
#line 1584 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 398:
#line 1585 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 399:
#line 1587 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 400:
#line 1589 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 401:
#line 1590 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 402:
#line 1596 "msv.y"
{yyval.tnode=new CSyntaxNode(WHILE_DO_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 403:
#line 1603 "msv.y"
{yyval.tnode=new CSyntaxNode(FOR_TIMES_STA, yyvsp[-3].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 404:
#line 1611 "msv.y"
{
	     CSyntaxNode* pchild0=new CSyntaxNode(FOR_STA_CON, yyvsp[-6].tnode, yyvsp[-4].tnode, yyvsp[-2].tnode, VOIDTYPE); 
		 yyval.tnode=new CSyntaxNode(FOR_STA, pchild0, yyvsp[0].tnode, VOIDTYPE);
		 pchild0=NULL;
	   ;
    break;}
case 405:
#line 1619 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	   ;
    break;}
case 406:
#line 1623 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	   ;
    break;}
case 407:
#line 1627 "msv.y"
{
	      yyval.tnode=NULL;
	   ;
    break;}
case 408:
#line 1633 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	  ;
    break;}
case 409:
#line 1637 "msv.y"
{
	      yyval.tnode=NULL;
	  ;
    break;}
case 410:
#line 1643 "msv.y"
{
	     yyval.tnode=yyvsp[0].tnode;
	  ;
    break;}
case 411:
#line 1647 "msv.y"
{
	      yyval.tnode=NULL;
	  ;
    break;}
case 412:
#line 1653 "msv.y"
{
			yyval.tnode=new CSyntaxNode(SWITCH_STA, yyvsp[-4].tnode, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 413:
#line 1659 "msv.y"
{
			yyval.tnode=new CSyntaxNode(CASE_STA, yyvsp[-5].tnode, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 414:
#line 1664 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 415:
#line 1665 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 416:
#line 1666 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 417:
#line 1670 "msv.y"
{
            yyval.tnode = new CSyntaxNode( IF_ELSE_STA, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
        ;
    break;}
case 418:
#line 1679 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 419:
#line 1680 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 420:
#line 1686 "msv.y"
{yyval.tnode=new CSyntaxNode(DISPLAY_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 421:
#line 1687 "msv.y"
{yyval.tnode=new CSyntaxNode(DISPLAY_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 422:
#line 1691 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 423:
#line 1692 "msv.y"
{yyval.tnode=new CSyntaxNode(DISPLAY_STA, yyvsp[-1].tnode, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 424:
#line 1697 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 425:
#line 1698 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 426:
#line 1699 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 427:
#line 1700 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 428:
#line 1701 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 429:
#line 1704 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 430:
#line 1705 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 431:
#line 1706 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 432:
#line 1712 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 433:
#line 1713 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 434:
#line 1714 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 435:
#line 1716 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 436:
#line 1717 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 437:
#line 1718 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 438:
#line 1720 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 439:
#line 1721 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 440:
#line 1722 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-4].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 441:
#line 1723 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 442:
#line 1725 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 443:
#line 1726 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 444:
#line 1727 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-4].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 445:
#line 1728 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_FUNC_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 446:
#line 1729 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_FUNC_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 447:
#line 1730 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 448:
#line 1731 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 449:
#line 1735 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 450:
#line 1736 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 451:
#line 1737 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 452:
#line 1738 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 453:
#line 1739 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 454:
#line 1740 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_FUNC_EXP, yyvsp[0].tnode, NULL, VOIDTYPE);;
    break;}
case 455:
#line 1741 "msv.y"
=======
case 82:
#line 500 "msv.y"
{yyval.tnode= new CSyntaxNode(PARALLEL_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 83:
#line 502 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 84:
#line 504 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 85:
#line 508 "msv.y"
{yyval.tnode=new CSyntaxNode(OVER_STA,yyvsp[-4].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 86:
#line 510 "msv.y"
{yyerror("INTERVAL CAN NOT BE EMPTY SET");yyval.tnode=NULL;;
    break;}
case 87:
#line 514 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 88:
#line 516 "msv.y"
{yyval.tnode=new CSyntaxNode(INTERVAL_CAT, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 89:
#line 518 "msv.y"
{yyval.tnode=new CSyntaxNode(INTERVAL_OR, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 90:
#line 520 "msv.y"
{yyval.tnode=new CSyntaxNode(INTERVAL_REP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 91:
#line 522 "msv.y"
{yyval.tnode=new CSyntaxNode(INTERVAL_REP_NDET, yyvsp[-2].tnode, VOIDTYPE);;
    break;}
case 92:
#line 524 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 93:
#line 528 "msv.y"
{yyval.tnode=new CSyntaxNode(LENGTH_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 94:
#line 539 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 95:
#line 540 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 96:
#line 547 "msv.y"
{
	        //Annotate by YY 2013/11/20 暂时不考虑带成员函数 .的函数调用
			yyval.tnode=new CSyntaxNode(FUNCTION_STA, yyvsp[-3].cString, yyvsp[-1].tnode, NULL, NULL, VOIDTYPE);//构造调用函数的程序语法树子树
	   ;
    break;}
case 97:
#line 552 "msv.y"
{
	        //Annotate by YY 2013/11/20 暂时不考虑带成员函数 .的函数调用
			yyval.tnode=new CSyntaxNode(FUNCTION_STA, yyvsp[-3].tnode, yyvsp[-1].tnode, NULL, FUNCPTYPE);//通过函数指针数组调用函数，add by yubin 2014-5-26
	   ;
    break;}
case 98:
#line 561 "msv.y"
{
           CSyntaxNode* temp=yyvsp[-3].tnode;
		   string structName=temp->GetNName();
           yyval.tnode=new CSyntaxNode(STRUCT_DEFINE_STA, structName, yyvsp[-1].tnode, VOIDTYPE);
	   ;
    break;}
case 99:
#line 569 "msv.y"
{
/*			if(!g_StructNameMap.insert($2))
			{
			    yyerror("Redefinition of struct");
			}
			else
			{
			    $$=new CSyntaxNode(STRUCT_NAME, $2, STRUCT_NAME_TYPE);
			}*/
	   ;
    break;}
case 100:
#line 580 "msv.y"
{
/*	       if(!g_StructNameMap.insert($2))
			{
			    yyerror("Redefinition of union");
			}
			else
			{
			    $$=new CSyntaxNode(STRUCT_NAME, $2, STRUCT_NAME_TYPE);
			}*/
	   ;
    break;}
case 101:
#line 593 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 102:
#line 594 "msv.y"
{yyval.tnode=new CSyntaxNode(UNSIGN_DECLARATION_STA, yyvsp[0].tnode, VOIDTYPE); ;
    break;}
case 103:
#line 595 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 104:
#line 600 "msv.y"
{
	      yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[0].tnode, yyvsp[-1].returntype);
		;
    break;}
case 105:
#line 604 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
		;
    break;}
case 106:
#line 608 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 107:
#line 612 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 108:
#line 616 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 109:
#line 620 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DECLARE_STA,yyvsp[-1].cString,yyvsp[0].tnode,STRUCTTYPE);
	   ;
    break;}
case 110:
#line 623 "msv.y"
{yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[0].tnode, POINTERTYPE);;
    break;}
case 111:
#line 624 "msv.y"
{yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[0].tnode, LISTTYPE);;
    break;}
case 112:
#line 626 "msv.y"
{yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[-4].tnode, FUNCPTYPE);;
    break;}
case 113:
#line 628 "msv.y"
{yyval.tnode=new CSyntaxNode(DECLARE_STA, yyvsp[-4].tnode, FUNCPPTYPE);;
    break;}
case 114:
#line 631 "msv.y"
{
	       CSyntaxNode *pChild0=new CSyntaxNode(PARAMETER_EXP,new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-8].cString, yyvsp[-6].tnode, yyvsp[-5].tnode, NULL, LISTTYPE), VOIDTYPE);
	       yyval.tnode=new CSyntaxNode(DECLARE_STA, pChild0, FUNCPTYPE);
	   ;
    break;}
case 115:
#line 636 "msv.y"
{
	       CSyntaxNode *pChild0_Child0=new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-10].cString, yyvsp[-8].tnode, yyvsp[-7].tnode, NULL, LISTTYPE);
		   CSyntaxNode *pChild0=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, pChild0_Child0, yyvsp[0].tnode, VOIDTYPE), VOIDTYPE);
		   yyval.tnode=new CSyntaxNode(DECLARE_STA, pChild0, FUNCPTYPE);
		   pChild0=NULL;
		   pChild0_Child0=NULL;
	   ;
    break;}
case 116:
#line 647 "msv.y"
{yyval.returntype=INTTYPE;;
    break;}
case 117:
#line 648 "msv.y"
{yyval.returntype=FLOATTYPE;;
    break;}
case 118:
#line 649 "msv.y"
{yyval.returntype=CHARTYPE;;
    break;}
case 119:
#line 652 "msv.y"
{yyval.returntype=STRTYPE;;
    break;}
case 120:
#line 653 "msv.y"
{yyval.returntype=VOIDTYPE;;
    break;}
case 121:
#line 654 "msv.y"
{yyval.returntype=FILETYPE;;
    break;}
case 122:
#line 662 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 123:
#line 666 "msv.y"
{
	       yyval.tnode=new CSyntaxNode(PARAMETER_EXP,new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-5].cString, yyvsp[-3].tnode, yyvsp[-2].tnode, NULL, LISTTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 124:
#line 670 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 125:
#line 675 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 126:
#line 680 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, new CSyntaxNode(ARRAY_DECLARE_NULL_STA, yyvsp[-4].cString, NULL, NULL, NULL, LISTTYPE), yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 127:
#line 686 "msv.y"
{
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, new CSyntaxNode(ARRAY_DECLARE_NULL_STA, yyvsp[-4].cString, NULL, NULL, NULL, LISTTYPE), yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 128:
#line 691 "msv.y"
{
	       CSyntaxNode *pChild0=new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-4].tnode, NULL, LISTTYPE);
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, pChild0, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		   pChild0=NULL;
	    ;
    break;}
case 129:
#line 698 "msv.y"
{
	       CSyntaxNode *pChild0=new CSyntaxNode(ARRAY_DECLARE_STA, yyvsp[-7].cString, yyvsp[-5].tnode, yyvsp[-4].tnode, NULL, LISTTYPE);
		   yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(ASS_EQU_EXP, pChild0, yyvsp[-1].tnode, VOIDTYPE), yyvsp[0].tnode, VOIDTYPE);
		   pChild0=NULL;
	   ;
    break;}
case 130:
#line 704 "msv.y"
{
	      CSyntaxNode* pChild0=new CSyntaxNode(ADDRESS_DECLARE_STA,yyvsp[0].tnode->GetChild0(),VOIDTYPE);
          yyval.tnode=yyvsp[0].tnode;
		  yyvsp[0].tnode->SetChild0(pChild0);
		  pChild0=NULL;
	   ;
    break;}
case 131:
#line 715 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 132:
#line 716 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 133:
#line 717 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 134:
#line 722 "msv.y"
{
	        yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(LIST_DECLARE_STA, yyvsp[-5].cString, yyvsp[-3].tnode, yyvsp[-2].tnode, NULL, LISTTYPE), yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 135:
#line 729 "msv.y"
{
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, new CSyntaxNode(LIST_DECLARE_STA, yyvsp[-5].cString, yyvsp[-3].tnode, yyvsp[-2].tnode, NULL, LISTTYPE), yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 136:
#line 732 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 137:
#line 733 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 138:
#line 741 "msv.y"
{yyval.tnode=new CSyntaxNode(FOPEN_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 139:
#line 743 "msv.y"
{yyval.tnode=new CSyntaxNode(FGETS_EXP,yyvsp[-5].tnode,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 140:
#line 745 "msv.y"
{yyval.tnode=new CSyntaxNode(FGETC_EXP,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 141:
#line 747 "msv.y"
{yyval.tnode=new CSyntaxNode(FPUTS_EXP,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 142:
#line 749 "msv.y"
{yyval.tnode=new CSyntaxNode(FPUTC_EXP,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 143:
#line 751 "msv.y"
{yyval.tnode=new CSyntaxNode(FPUTC_EXP,yyvsp[-3].tnode,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 144:
#line 753 "msv.y"
{yyval.tnode=new CSyntaxNode(FCLOSE_EXP,yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 145:
#line 765 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 146:
#line 768 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 147:
#line 769 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 148:
#line 770 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 149:
#line 771 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 150:
#line 772 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 151:
#line 773 "msv.y"
{yyval.tnode=new CSyntaxNode(NEXT_STA, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 152:
#line 774 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 153:
#line 778 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 154:
#line 780 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 155:
#line 782 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 156:
#line 784 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-5].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, FLOATTYPE);;
    break;}
case 157:
#line 786 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 158:
#line 788 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 159:
#line 790 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, CHARTYPE);;
    break;}
case 160:
#line 792 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 161:
#line 794 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 162:
#line 796 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, UCHARTYPE);;
    break;}
case 163:
#line 798 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 164:
#line 800 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 165:
#line 802 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR_LIST, yyvsp[-6].nInteger, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, INTTYPE);;
    break;}
case 166:
#line 806 "msv.y"
{yyval.nodetype=ASS_EQU_EXP;;
    break;}
case 167:
#line 807 "msv.y"
{yyval.nodetype=UNITASSIGN_EXP;;
    break;}
case 168:
#line 810 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 169:
#line 811 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 170:
#line 812 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 171:
#line 813 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 172:
#line 814 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 173:
#line 815 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 174:
#line 816 "msv.y"
{yyval.tnode=new CSyntaxNode(DLL_CALL_STA, yyvsp[-8].tnode, yyvsp[0].tnode, yyvsp[-5].returntype);;
    break;}
case 175:
#line 817 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 176:
#line 818 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 177:
#line 821 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 178:
#line 826 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-4].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 179:
#line 832 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 180:
#line 834 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 181:
#line 836 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 182:
#line 838 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 183:
#line 840 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SYMBOL_STA, yyvsp[-5].cString, yyvsp[-2].tnode, yyvsp[-1].tnode, NULL, VOIDTYPE);;
    break;}
case 184:
#line 841 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 185:
#line 846 "msv.y"
{yyval.tnode=new CSyntaxNode(LIST_SUBSCRIPT_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 186:
#line 847 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 187:
#line 848 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 188:
#line 854 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 189:
#line 855 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 190:
#line 857 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[0].tnode,  UNKNOWNTYPE);;
    break;}
case 191:
#line 859 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_LIST_EXP, yyvsp[-5].tnode, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 192:
#line 861 "msv.y"
{yyval.tnode=new CSyntaxNode(ADDR_VAR, yyvsp[0].tnode, yyvsp[-3].returntype);;
    break;}
case 193:
#line 863 "msv.y"
{yyval.tnode=new CSyntaxNode(VALUE_EXP, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 194:
#line 864 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 195:
#line 870 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 196:
#line 871 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 197:
#line 872 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 198:
#line 874 "msv.y"
{
            yyval.tnode = new CSyntaxNode(IF_ELSE_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, ARITHMETICTYPE);
       ;
    break;}
case 199:
#line 879 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 200:
#line 880 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 201:
#line 884 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 202:
#line 885 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 203:
#line 889 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 204:
#line 890 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 205:
#line 891 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 206:
#line 895 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 207:
#line 896 "msv.y"
{yyval.tnode=new CSyntaxNode(MINUS_EXP, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 208:
#line 897 "msv.y"
{yyval.tnode=new CSyntaxNode(BNE_EXP, yyvsp[0].tnode, ARITHMETICTYPE);;
    break;}
case 209:
#line 898 "msv.y"
{yyval.tnode=new CSyntaxNode(NULL_EXP, VOIDTYPE);;
    break;}
case 210:
#line 899 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 211:
#line 901 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 212:
#line 902 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 213:
#line 903 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 214:
#line 904 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 215:
#line 905 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 216:
#line 906 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 217:
#line 907 "msv.y"
{yyval.tnode=yyvsp[0].tnode;
    break;}
case 218:
#line 908 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 219:
#line 909 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 220:
#line 910 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 221:
#line 911 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 222:
#line 912 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 223:
#line 918 "msv.y"
{yyval.tnode=new CSyntaxNode(PREVIOUS_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 224:
#line 925 "msv.y"
{yyval.nodetype=MUL_EXP;;
    break;}
case 225:
#line 926 "msv.y"
{yyval.nodetype=DIV_EXP;;
    break;}
case 226:
#line 927 "msv.y"
{yyval.nodetype=MOD_EXP;;
    break;}
case 227:
#line 928 "msv.y"
{yyval.nodetype=LST_EXP;;
    break;}
case 228:
#line 929 "msv.y"
{yyval.nodetype=RST_EXP;;
    break;}
case 229:
#line 930 "msv.y"
{yyval.nodetype=BAN_EXP;;
    break;}
case 230:
#line 931 "msv.y"
{yyval.nodetype=BOR_EXP;;
    break;}
case 231:
#line 932 "msv.y"
{yyval.nodetype=XOR_EXP;;
    break;}
case 232:
#line 935 "msv.y"
{yyval.nodetype=ADD_EXP;;
    break;}
case 233:
#line 936 "msv.y"
{yyval.nodetype=SUB_EXP;;
    break;}
case 234:
#line 940 "msv.y"
{yyval.tnode=new CSyntaxNode(CON_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, LISTTYPE);;
    break;}
case 235:
#line 941 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 236:
#line 942 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 237:
#line 943 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 238:
#line 950 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
		;
    break;}
case 239:
#line 954 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 240:
#line 958 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 241:
#line 962 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 242:
#line 974 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
		;
    break;}
case 243:
#line 978 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 244:
#line 982 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 245:
#line 986 "msv.y"
{
			yyval.tnode = new CSyntaxNode(STRUCT_LIST_ASSVALUE_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, LISTTYPE);
	   ;
    break;}
case 246:
#line 998 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);//INTEGER_EXP Jane
	   ;
    break;}
case 247:
#line 1002 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);
	   ;
    break;}
case 248:
#line 1006 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);
	   ;
    break;}
case 249:
#line 1010 "msv.y"
{
			yyval.tnode = new CSyntaxNode(LIST_ASSVALUE_STA, yyvsp[-1].tnode, yyvsp[0].tnode, LISTTYPE);
	   ;
    break;}
case 250:
#line 1013 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 251:
#line 1014 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 252:
#line 1020 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE);
			;
    break;}
case 253:
#line 1024 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE);
			;
    break;}
case 254:
#line 1028 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE );
			;
    break;}
case 255:
#line 1033 "msv.y"
{
			   yyval.tnode=new CSyntaxNode(ADDRESS_EXP, yyvsp[0].tnode, VOIDTYPE);
			;
    break;}
case 256:
#line 1036 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 257:
#line 1045 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, INTTYPE);;
    break;}
case 258:
#line 1046 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 259:
#line 1047 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, CHARTYPE);;
    break;}
case 260:
#line 1050 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, INTTYPE);;
    break;}
case 261:
#line 1051 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, CHARTYPE);;
    break;}
case 262:
#line 1054 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UINTTYPE);;
    break;}
case 263:
#line 1055 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UCHARTYPE);;
    break;}
case 264:
#line 1058 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, INTPTYPE);;
    break;}
case 265:
#line 1059 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UINTPTYPE);;
    break;}
case 266:
#line 1060 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, FLOATPTYPE);;
    break;}
case 267:
#line 1061 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, CHARPTYPE);;
    break;}
case 268:
#line 1062 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, UCHARPTYPE);;
    break;}
case 269:
#line 1063 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[0].tnode, VOIDPTYPE);;
    break;}
case 270:
#line 1066 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEINTPTYPE);;
    break;}
case 271:
#line 1067 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEUINTPTYPE);;
    break;}
case 272:
#line 1068 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEFLOATPTYPE);;
    break;}
case 273:
#line 1069 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLECHARPTYPE);;
    break;}
case 274:
#line 1070 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, DOUBLEUCHARPTYPE);;
    break;}
case 275:
#line 1071 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[0].tnode, VOIDPTYPE);;
    break;}
case 276:
#line 1073 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[-3].cString, yyvsp[0].tnode, STRUCTPTYPE);;
    break;}
case 277:
#line 1074 "msv.y"
{yyval.tnode=new CSyntaxNode(TYPE_CAST_STA, yyvsp[-3].cString, yyvsp[0].tnode, STRUCTPTYPE);;
    break;}
case 278:
#line 1076 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[-4].cString, yyvsp[0].tnode, DOUBLESTRUCTPTYPE);;
    break;}
case 279:
#line 1077 "msv.y"
{yyval.tnode=new CSyntaxNode(DOUBLE_TYPE_CAST_STA, yyvsp[-4].cString, yyvsp[0].tnode, DOUBLESTRUCTPTYPE);;
    break;}
case 280:
#line 1079 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 281:
#line 1080 "msv.y"
{yyval.tnode=new CSyntaxNode(MALLOC_STA, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 282:
#line 1085 "msv.y"
{yyval.returntype=yyvsp[0].returntype;;
    break;}
case 283:
#line 1086 "msv.y"
{yyval.returntype=INTPTYPE;;
    break;}
case 284:
#line 1087 "msv.y"
{yyval.returntype=FLOATPTYPE;;
    break;}
case 285:
#line 1088 "msv.y"
{yyval.returntype=CHARPTYPE;;
    break;}
case 286:
#line 1089 "msv.y"
{yyval.returntype=UINTPTYPE;;
    break;}
case 287:
#line 1090 "msv.y"
{yyval.returntype=UCHARPTYPE;;
    break;}
case 288:
#line 1091 "msv.y"
{yyval.returntype=STRUCTPTYPE;;
    break;}
case 289:
#line 1092 "msv.y"
{yyval.returntype=STRUCTPTYPE;;
    break;}
case 290:
#line 1097 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].tnode, VOIDTYPE);;
    break;}
case 291:
#line 1098 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].returntype);;
    break;}
case 292:
#line 1099 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].cString, STRUCTTYPE);;
    break;}
case 293:
#line 1100 "msv.y"
{yyval.tnode=new CSyntaxNode(SIZEOF_EXP, yyvsp[-1].tnode, STRTYPE);;
    break;}
case 294:
#line 1106 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 295:
#line 1107 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 296:
#line 1108 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 297:
#line 1109 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 298:
#line 1110 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 299:
#line 1111 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 300:
#line 1116 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCHEAD_EXP, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 301:
#line 1123 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCTAIL_EXP, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 302:
#line 1130 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCCAT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 303:
#line 1137 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCCMP_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 304:
#line 1144 "msv.y"
{
					   yyval.tnode=new CSyntaxNode(STRFUNCCPY_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 305:
#line 1151 "msv.y"
{
						yyval.tnode=new CSyntaxNode(STRFUNCLEN_EXP, yyvsp[-1].tnode, STRTYPE);
					;
    break;}
case 306:
#line 1157 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 307:
#line 1158 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 308:
#line 1159 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 309:
#line 1160 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 310:
#line 1161 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 311:
#line 1162 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 312:
#line 1169 "msv.y"
{yyval.tnode=new CSyntaxNode(ROUND_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 313:
#line 1170 "msv.y"
{yyval.tnode=new CSyntaxNode(CEIL_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 314:
#line 1171 "msv.y"
{yyval.tnode=new CSyntaxNode(FLOOR_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 315:
#line 1173 "msv.y"
{yyval.tnode=new CSyntaxNode(SIN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 316:
#line 1174 "msv.y"
{yyval.tnode=new CSyntaxNode(COS_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 317:
#line 1175 "msv.y"
{yyval.tnode=new CSyntaxNode(TAN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 318:
#line 1176 "msv.y"
{yyval.tnode=new CSyntaxNode(ASIN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 319:
#line 1177 "msv.y"
{yyval.tnode=new CSyntaxNode(ACOS_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 320:
#line 1178 "msv.y"
{yyval.tnode=new CSyntaxNode(ATAN_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 321:
#line 1179 "msv.y"
{yyval.tnode=new CSyntaxNode(SINH_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 322:
#line 1180 "msv.y"
{yyval.tnode=new CSyntaxNode(COSH_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 323:
#line 1181 "msv.y"
{yyval.tnode=new CSyntaxNode(TANH_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 324:
#line 1182 "msv.y"
{yyval.tnode=new CSyntaxNode(EXP_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 325:
#line 1183 "msv.y"
{yyval.tnode=new CSyntaxNode(LOG_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 326:
#line 1184 "msv.y"
{yyval.tnode=new CSyntaxNode(LOG10_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 327:
#line 1185 "msv.y"
{yyval.tnode=new CSyntaxNode(SQRT_EXP, yyvsp[0].tnode, FLOATTYPE);;
    break;}
case 328:
#line 1187 "msv.y"
{yyval.tnode=new CSyntaxNode(ATAN2_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 329:
#line 1188 "msv.y"
{yyval.tnode=new CSyntaxNode(POW_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 330:
#line 1189 "msv.y"
{yyval.tnode=new CSyntaxNode(FMOD_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 331:
#line 1190 "msv.y"
{yyval.tnode=new CSyntaxNode(MODF_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 332:
#line 1191 "msv.y"
{yyval.tnode=new CSyntaxNode(LDEXP_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, FLOATTYPE);;
    break;}
case 333:
#line 1193 "msv.y"
{yyval.tnode=new CSyntaxNode(ABS_EXP, yyvsp[0].tnode, INTTYPE);;
    break;}
case 334:
#line 1194 "msv.y"
{yyval.tnode=new CSyntaxNode(FABS_EXP, yyvsp[0].tnode, INTTYPE);;
    break;}
case 335:
#line 1195 "msv.y"
{yyval.tnode=new CSyntaxNode(LABS_EXP, yyvsp[0].tnode, INTTYPE);;
    break;}
case 336:
#line 1201 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 337:
#line 1205 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 338:
#line 1206 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 339:
#line 1209 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 340:
#line 1210 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 341:
#line 1213 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, new CSyntaxNode(NULL_EXP, VOIDTYPE), BOOLTYPE);;
    break;}
case 342:
#line 1214 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, new CSyntaxNode(NULL_EXP, VOIDTYPE), BOOLTYPE);;
    break;}
case 343:
#line 1217 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, new CSyntaxNode(NULL_EXP, VOIDTYPE), yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 344:
#line 1218 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, new CSyntaxNode(NULL_EXP, VOIDTYPE), yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 345:
#line 1221 "msv.y"
{yyval.tnode=new CSyntaxNode(EQU_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 346:
#line 1222 "msv.y"
{yyval.tnode=new CSyntaxNode(NE_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 347:
#line 1224 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 348:
#line 1225 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 349:
#line 1226 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 350:
#line 1227 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 351:
#line 1233 "msv.y"
{yyval.tnode=new CSyntaxNode(yyvsp[-1].nodetype, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 352:
#line 1234 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 353:
#line 1235 "msv.y"
{yyval.tnode=new CSyntaxNode(TRUE_EXP, BOOLTYPE);;
    break;}
case 354:
#line 1236 "msv.y"
{yyval.tnode=new CSyntaxNode(FALSE_EXP, BOOLTYPE);;
    break;}
case 355:
#line 1237 "msv.y"
{yyval.tnode=new CSyntaxNode(MORE_STA, BOOLTYPE);;
    break;}
case 356:
#line 1238 "msv.y"
{yyval.tnode=new CSyntaxNode(EMPTY_EXP, BOOLTYPE);;
    break;}
case 357:
#line 1239 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 358:
#line 1240 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 359:
#line 1241 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 360:
#line 1246 "msv.y"
{yyval.nodetype=GE_EXP;;
    break;}
case 361:
#line 1247 "msv.y"
{yyval.nodetype=LE_EXP;;
    break;}
case 362:
#line 1248 "msv.y"
{yyval.nodetype=NE_EXP;;
    break;}
case 363:
#line 1249 "msv.y"
{yyval.nodetype=GT_EXP;;
    break;}
case 364:
#line 1250 "msv.y"
{yyval.nodetype=LT_EXP;;
    break;}
case 365:
#line 1253 "msv.y"
{yyval.nodetype=EQU_EXP;;
    break;}
case 366:
#line 1261 "msv.y"
{yyval.returntype=UINTTYPE;;
    break;}
case 367:
#line 1262 "msv.y"
{yyval.returntype=UCHARTYPE;;
    break;}
case 368:
#line 1266 "msv.y"
{yyval.returntype=yyvsp[0].returntype;;
    break;}
case 369:
#line 1267 "msv.y"
{yyval.returntype=yyvsp[0].returntype;;
    break;}
case 370:
#line 1274 "msv.y"
{
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, yyvsp[-2].returntype);
	   ;
    break;}
case 371:
#line 1278 "msv.y"
{
			yyval.tnode=NULL;
	   ;
    break;}
case 372:
#line 1283 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
		;
    break;}
case 373:
#line 1289 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(STRUCTP_PARAMETER_EXP, yyvsp[-3].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 374:
#line 1295 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(DOUBLESTRUCTP_PARAMETER_EXP, yyvsp[-4].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 375:
#line 1301 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 376:
#line 1311 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
		;
    break;}
case 377:
#line 1317 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(STRUCTP_PARAMETER_EXP, yyvsp[-3].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 378:
#line 1323 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(DOUBLESTRUCTP_PARAMETER_EXP, yyvsp[-4].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 379:
#line 1329 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 380:
#line 1338 "msv.y"
{
	        yyval.tnode=NULL;
		;
    break;}
case 381:
#line 1342 "msv.y"
{
	        yyval.tnode=NULL;
	   ;
    break;}
case 382:
#line 1346 "msv.y"
{
			yyval.tnode=NULL;
	   ;
    break;}
case 383:
#line 1352 "msv.y"
{
	        yyval.tnode=NULL;
		;
    break;}
case 384:
#line 1356 "msv.y"
{
	        yyval.tnode=NULL;
	   ;
    break;}
case 385:
#line 1360 "msv.y"
{
			yyval.tnode=NULL;
	   ;
    break;}
case 386:
#line 1366 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
            pChild0=NULL;
	   ;
    break;}
case 387:
#line 1372 "msv.y"
{
            CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-4].returntype);
            pChild0=NULL;
	   ;
    break;}
case 388:
#line 1380 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-4].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-5].returntype);
            pChild0=NULL;
	   ;
    break;}
case 389:
#line 1388 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-6].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-7].returntype);
            pChild0=NULL;
	   ;
    break;}
case 390:
#line 1395 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-6].returntype);
            pChild0=NULL;
	   ;
    break;}
case 391:
#line 1401 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(POINT_PARAMETER_EXP, yyvsp[-1].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
          pChild0=NULL;
		;
    break;}
case 392:
#line 1407 "msv.y"
{
	      yyval.tnode=NULL;
		;
    break;}
case 393:
#line 1411 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(DOUBLEPOINT_PARAMETER_EXP, yyvsp[-1].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-4].returntype);
          pChild0=NULL;
		;
    break;}
case 394:
#line 1418 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(FUNCP_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, FUNCPTYPE);
          pChild0=NULL;
		;
    break;}
case 395:
#line 1423 "msv.y"
{yyval.tnode = NULL;;
    break;}
case 396:
#line 1427 "msv.y"
{
		   yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, yyvsp[-2].returntype);
		;
    break;}
case 397:
#line 1431 "msv.y"
{
		   yyval.tnode = NULL;
		;
    break;}
case 398:
#line 1435 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
	   ;
    break;}
case 399:
#line 1441 "msv.y"
{
	        CSyntaxNode* pChild0=new CSyntaxNode(STRUCT_PARAMETER_EXP, yyvsp[-2].cString, yyvsp[-1].tnode, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
			pChild0=NULL;
	   ;
    break;}
case 400:
#line 1447 "msv.y"
{
	        CSyntaxNode* pChild0= new CSyntaxNode(STRUCTP_PARAMETER_EXP, yyvsp[-3].cString, yyvsp[-1].tnode, VOIDTYPE);
            yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTPTYPE);
            pChild0=NULL;
	   ;
    break;}
case 401:
#line 1453 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 402:
#line 1460 "msv.y"
{

			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, STRUCTTYPE);
            pChild0=NULL;
		;
    break;}
case 403:
#line 1468 "msv.y"
{
		    CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
		    yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
            pChild0=NULL;
		;
    break;}
case 404:
#line 1474 "msv.y"
{
		    CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-2].tnode, VOIDTYPE);
		    yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-4].returntype);
            pChild0=NULL;
		;
    break;}
case 405:
#line 1480 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(POINT_PARAMETER_EXP,yyvsp[-1].tnode,VOIDTYPE);

	      yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);

		  pChild0=NULL;
		;
    break;}
case 406:
#line 1489 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(FUNCP_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, FUNCPTYPE);
          pChild0=NULL;
		;
    break;}
case 407:
#line 1494 "msv.y"
{yyval.tnode = NULL;;
    break;}
case 408:
#line 1499 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(ARRAY_PARAMETER_EXP, yyvsp[-4].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-5].returntype);
            pChild0=NULL;
	   ;
    break;}
case 409:
#line 1507 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-6].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-7].returntype);
            pChild0=NULL;
	   ;
    break;}
case 410:
#line 1514 "msv.y"
{
			CSyntaxNode* pChild0=new CSyntaxNode(DOUBLEARRAY_PARAMETER_EXP, yyvsp[-5].tnode, VOIDTYPE);
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-6].returntype);
            pChild0=NULL;
	   ;
    break;}
case 411:
#line 1520 "msv.y"
{
	      CSyntaxNode* pChild0= new CSyntaxNode(POINT_PARAMETER_EXP, yyvsp[-1].tnode, VOIDTYPE);
          yyval.tnode=new CSyntaxNode(PARAMETER_EXP, pChild0, yyvsp[0].tnode, yyvsp[-3].returntype);
          pChild0=NULL;
		;
    break;}
case 412:
#line 1526 "msv.y"
{
	      yyval.tnode=NULL;
		;
    break;}
case 413:
#line 1530 "msv.y"
{
		   yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode,VOIDTYPE);
		;
    break;}
case 414:
#line 1533 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 415:
#line 1543 "msv.y"
{
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 416:
#line 1547 "msv.y"
{
	        CSyntaxNode* child0=new CSyntaxNode(FUNCTION_STA, yyvsp[-4].cString, yyvsp[-2].tnode, NULL, NULL, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, child0, yyvsp[0].tnode, VOIDTYPE);
			child0=NULL;
	   ;
    break;}
case 417:
#line 1556 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 418:
#line 1557 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 419:
#line 1562 "msv.y"
{
			yyval.tnode = new CSyntaxNode(PARAMETER_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 420:
#line 1566 "msv.y"
{
	        CSyntaxNode* child0=new CSyntaxNode(FUNCTION_STA, yyvsp[-4].cString, yyvsp[-2].tnode, NULL, NULL, VOIDTYPE);
			yyval.tnode=new CSyntaxNode(PARAMETER_EXP, child0, yyvsp[0].tnode, VOIDTYPE);
			child0=NULL;
	   ;
    break;}
case 421:
#line 1575 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 422:
#line 1576 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 423:
#line 1584 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 424:
#line 1586 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 425:
#line 1593 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 426:
#line 1595 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 427:
#line 1601 "msv.y"
{yyval.tnode=new CSyntaxNode(IDENT_EXP, yyvsp[0].cString, NULL, VOIDTYPE);;
    break;}
case 428:
#line 1602 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 429:
#line 1606 "msv.y"
{yyval.tnode=new CSyntaxNode(STR_EXP, yyvsp[0].cString, STRTYPE);;
    break;}
case 430:
#line 1611 "msv.y"
{yyval.tnode=new CSyntaxNode(INTEGER_EXP, yyvsp[0].nInteger, INTTYPE);;
    break;}
case 431:
#line 1616 "msv.y"
{yyval.tnode=new CSyntaxNode(CHARLITERAL_EXP, yyvsp[0].character, CHARTYPE);;
    break;}
case 432:
#line 1621 "msv.y"
{yyval.tnode=new CSyntaxNode(FLOATLITERAL_EXP, yyvsp[0].floatval, FLOATTYPE);;
    break;}
case 433:
#line 1628 "msv.y"
{
			yyval.tnode = new CSyntaxNode( FRAME_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
		;
    break;}
case 434:
#line 1631 "msv.y"
{yyval.tnode = NULL;;
    break;}
case 435:
#line 1632 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 436:
#line 1638 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 437:
#line 1640 "msv.y"
{
			yyval.tnode = new CSyntaxNode( PROJECTION_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 438:
#line 1660 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 439:
#line 1661 "msv.y"
{yyval.tnode=new CSyntaxNode(NEGATION_EXP, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 440:
#line 1663 "msv.y"
{yyval.tnode=new CSyntaxNode(AND_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 441:
#line 1665 "msv.y"
{yyval.tnode=new CSyntaxNode(OR_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, BOOLTYPE);;
    break;}
case 442:
#line 1666 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 443:
#line 1672 "msv.y"
{yyval.tnode=new CSyntaxNode(WHILE_DO_STA, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 444:
#line 1678 "msv.y"
{yyval.tnode=new CSyntaxNode(SWITCH_STA, yyvsp[-4].tnode, yyvsp[-1].tnode,VOIDTYPE);;
    break;}
case 445:
#line 1682 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(CASE_STA, yyvsp[-5].tnode, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 446:
#line 1686 "msv.y"
{
	     yyval.tnode=new CSyntaxNode(DEFAULT_STA, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);
	   ;
    break;}
case 447:
#line 1693 "msv.y"
{yyval.tnode=new CSyntaxNode(INIT_CASE_STA, yyvsp[0].tnode, BREAKTYPE);;
    break;}
case 448:
#line 1694 "msv.y"
{yyval.tnode=new CSyntaxNode(INIT_CASE_STA, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 449:
#line 1695 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 450:
#line 1701 "msv.y"
{yyval.tnode=new CSyntaxNode(FOR_TIMES_STA, yyvsp[-3].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 451:
#line 1709 "msv.y"
{
	     CSyntaxNode* pchild0=new CSyntaxNode(FOR_STA_CON, yyvsp[-6].tnode, yyvsp[-4].tnode, yyvsp[-2].tnode, VOIDTYPE);
		 yyval.tnode=new CSyntaxNode(FOR_STA, pchild0, yyvsp[0].tnode, VOIDTYPE);
		 pchild0=NULL;
	   ;
    break;}
case 452:
#line 1717 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	   ;
    break;}
case 453:
#line 1721 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	   ;
    break;}
case 454:
#line 1725 "msv.y"
{
	      yyval.tnode=NULL;
	   ;
    break;}
case 455:
#line 1731 "msv.y"
{
	      yyval.tnode=yyvsp[0].tnode;
	  ;
    break;}
case 456:
#line 1735 "msv.y"
{
	      yyval.tnode=NULL;
	  ;
    break;}
case 457:
#line 1741 "msv.y"
{
	     yyval.tnode=yyvsp[0].tnode;
	  ;
    break;}
case 458:
#line 1745 "msv.y"
{
	      yyval.tnode=NULL;
	  ;
    break;}
case 459:
#line 1751 "msv.y"
{
            yyval.tnode = new CSyntaxNode( IF_ELSE_STA, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);
        ;
    break;}
case 460:
#line 1760 "msv.y"
{yyval.tnode=yyvsp[0].tnode;;
    break;}
case 461:
#line 1761 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 462:
#line 1767 "msv.y"
{yyval.tnode=new CSyntaxNode(DISPLAY_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 463:
#line 1768 "msv.y"
{yyval.tnode=new CSyntaxNode(DISPLAY_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 464:
#line 1772 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 465:
#line 1773 "msv.y"
{yyval.tnode=new CSyntaxNode(DISPLAY_STA, yyvsp[-1].tnode, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 466:
#line 1778 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 467:
#line 1779 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 468:
#line 1780 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 469:
#line 1781 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-2].tnode, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 470:
#line 1782 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, UNKNOWNTYPE);;
    break;}
case 471:
#line 1785 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 472:
#line 1786 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 473:
#line 1787 "msv.y"
{yyval.tnode=new CSyntaxNode(REQUEST_STA, yyvsp[-1].tnode, yyvsp[0].tnode, UNKNOWNTYPE);;
    break;}
case 474:
#line 1793 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 475:
#line 1794 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 476:
#line 1795 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 477:
#line 1797 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 478:
#line 1798 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 479:
#line 1799 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 480:
#line 1801 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 481:
#line 1802 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 482:
#line 1803 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-4].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 483:
#line 1804 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 484:
#line 1806 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 485:
#line 1807 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 486:
#line 1808 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-4].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 487:
#line 1809 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_FUNC_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 488:
#line 1810 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_FUNC_EXP, yyvsp[-2].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 489:
#line 1811 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-3].tnode, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 490:
#line 1812 "msv.y"
{yyval.tnode=yyvsp[-1].tnode;;
    break;}
case 491:
#line 1816 "msv.y"
{yyval.tnode=NULL;;
    break;}
case 492:
#line 1817 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_IDENT_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 493:
#line 1818 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_LIST_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 494:
#line 1819 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_IDENT_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 495:
#line 1820 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCTP_LIST_EXP, yyvsp[-1].tnode, yyvsp[0].tnode, VOIDTYPE);;
    break;}
case 496:
#line 1821 "msv.y"
{yyval.tnode=new CSyntaxNode(STRUCT_FUNC_EXP, yyvsp[0].tnode, NULL, VOIDTYPE);;
    break;}
case 497:
#line 1822 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
{yyval.tnode=new CSyntaxNode(STRUCTP_FUNC_EXP, yyvsp[0].tnode, NULL, VOIDTYPE);;
    break;}
}
   /* the action file gets copied in in place of this dollarsign */
#line 487 "bison.simple"

  yyvsp -= yylen;
  yyssp -= yylen;
#ifdef YYLSP_NEEDED
  yylsp -= yylen;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

  *++yyvsp = yyval;

#ifdef YYLSP_NEEDED
  yylsp++;
  if (yylen == 0)
    {
      yylsp->first_line = yylloc.first_line;
      yylsp->first_column = yylloc.first_column;
      yylsp->last_line = (yylsp-1)->last_line;
      yylsp->last_column = (yylsp-1)->last_column;
      yylsp->text = 0;
    }
  else
    {
      yylsp->last_line = (yylsp+yylen-1)->last_line;
      yylsp->last_column = (yylsp+yylen-1)->last_column;
    }
#endif

  /* Now "shift" the result of the reduction.
     Determine what state that goes to,
     based on the state we popped back to
     and the rule number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTBASE];

  goto yynewstate;

yyerrlab:   /* here on detecting error */

  if (! yyerrstatus)
    /* If not already recovering from an error, report this error.  */
    {
      ++yynerrs;

#ifdef YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (yyn > YYFLAG && yyn < YYLAST)
	{
	  int size = 0;
	  char *msg;
	  int x, count;

	  count = 0;
	  /* Start X at -yyn if nec to avoid negative indexes in yycheck.  */
	  for (x = (yyn < 0 ? -yyn : 0);
	       x < (sizeof(yytname) / sizeof(char *)); x++)
	    if (yycheck[x + yyn] == x)
	      size += strlen(yytname[x]) + 15, count++;
	  msg = (char *) malloc(size + 15);
	  if (msg != 0)
	    {
	      strcpy(msg, "parse error");

	      if (count < 5)
		{
		  count = 0;
		  for (x = (yyn < 0 ? -yyn : 0);
		       x < (sizeof(yytname) / sizeof(char *)); x++)
		    if (yycheck[x + yyn] == x)
		      {
			strcat(msg, count == 0 ? ", expecting `" : " or `");
			strcat(msg, yytname[x]);
			strcat(msg, "'");
			count++;
		      }
		}
	      yyerror(msg);
	      free(msg);
	    }
	  else
	    yyerror ("parse error; also virtual memory exceeded");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror("parse error");
    }

  goto yyerrlab1;
yyerrlab1:   /* here on error raised explicitly by an action */

  if (yyerrstatus == 3)
    {
      /* if just tried and failed to reuse lookahead token after an error, discard it.  */

      /* return failure if at end of input */
      if (yychar == YYEOF)
	YYABORT;

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Discarding token %d (%s).\n", yychar, yytname[yychar1]);
#endif

      yychar = YYEMPTY;
    }

  /* Else will try to reuse lookahead token
     after shifting the error token.  */

  yyerrstatus = 3;		/* Each real token shifted decrements this */

  goto yyerrhandle;

yyerrdefault:  /* current state does not do anything special for the error token. */

#if 0
  /* This is wrong; only states that explicitly want error tokens
     should shift them.  */
  yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Otherwise pop it.*/
  if (yyn) goto yydefault;
#endif

yyerrpop:   /* pop the current state because it cannot handle the error token */

  if (yyssp == yyss) YYABORT;
  yyvsp--;
  yystate = *--yyssp;
#ifdef YYLSP_NEEDED
  yylsp--;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "Error: state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

yyerrhandle:

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yyerrdefault;

  yyn += YYTERROR;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
    goto yyerrdefault;

  yyn = yytable[yyn];
  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrpop;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrpop;

  if (yyn == YYFINAL)
    YYACCEPT;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting error token, ");
#endif

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  yystate = yyn;
  goto yynewstate;
}
<<<<<<< HEAD
#line 1743 "msv.y"
=======
#line 1825 "msv.y"
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
